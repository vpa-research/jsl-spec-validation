package org.huawei.linkedlist;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        java.util.LinkedList<java.lang.CharSequence> charSequenceList0 = new java.util.LinkedList<java.lang.CharSequence>();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence2 = charSequenceList0.remove((int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence7 = charSequenceList5.getFirst();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence8 = charSequenceList5.remove((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        charSequenceList2.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.CharSequence> charSequenceItor7 = charSequenceList2.listIterator((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence9 = charSequenceList2.getFirst();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence9 = charSequenceList2.element();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence11 = charSequenceList2.set((int) ' ', (java.lang.CharSequence) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean10 = charSequenceList2.contains((java.lang.Object) (-1.0d));
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence13 = charSequenceList2.set((int) (short) 10, (java.lang.CharSequence) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.CharSequence> charSequenceItor16 = charSequenceList2.listIterator((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.CharSequence> charSequenceItor19 = charSequenceList2.listIterator((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        charSequenceList2.clear();
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList2.add((int) ' ', (java.lang.CharSequence) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        java.util.LinkedList<java.lang.AutoCloseable> autoCloseableList0 = new java.util.LinkedList<java.lang.AutoCloseable>();
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.CharSequence> charSequenceItor11 = charSequenceList2.listIterator((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean18 = charSequenceList15.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence20 = charSequenceList15.get((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence25 = charSequenceList2.pollFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence19 = charSequenceList11.getFirst();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        charSequenceList17.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList17.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        charSequenceList17.addLast((java.lang.CharSequence) "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.CharSequence> charSequenceList37 = charSequenceList17.subList((int) (short) 100, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        charSequenceList2.addFirst((java.lang.CharSequence) "[hi!, ]");
        charSequenceList2.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.CharSequence> charSequenceList15 = charSequenceList2.subList((int) (byte) 10, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        charSequenceList2.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence19 = charSequenceList2.getLast();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceList2.stream();
        java.lang.CharSequence charSequence15 = charSequenceList2.getFirst();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence17 = charSequenceList2.remove((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "hi!" + "'", charSequence15, "hi!");
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean18 = charSequenceList15.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence19 = charSequenceList15.element();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        charSequenceList2.clear();
        java.lang.CharSequence charSequence6 = charSequenceList2.peek();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence7 = charSequenceList2.getLast();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertNull(charSequence6);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        charSequenceList2.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.CharSequence> charSequenceList21 = charSequenceList2.subList((int) (byte) -1, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: fromIndex = -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence11 = charSequenceList2.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence12 = charSequenceList2.removeFirst();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "hi!" + "'", charSequence11, "hi!");
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        charSequenceList17.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        java.util.function.UnaryOperator<java.lang.CharSequence> charSequenceUnaryOperator30 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList17.replaceAll(charSequenceUnaryOperator30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        charSequenceList2.clear();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.Object obj26 = charSequenceList24.clone();
        int int27 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList24);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence30 = charSequenceList24.set((int) (byte) 100, (java.lang.CharSequence) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence charSequence18 = charSequenceList2.pop();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        java.lang.CharSequence charSequence27 = charSequenceList21.poll();
        boolean boolean28 = charSequenceList2.remove((java.lang.Object) charSequence27);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence29 = charSequenceList2.element();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "hi!" + "'", charSequence18, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence9 = charSequenceList2.removeLast();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.CharSequence> charSequenceList12 = charSequenceList2.subList((int) ' ', (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence16 = charSequenceList9.get((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence9 = charSequenceList2.removeLast();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence10 = charSequenceList2.element();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence11 = charSequenceList2.set(100, (java.lang.CharSequence) "[hi!, ]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        charSequenceList2.clear();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.Object obj26 = charSequenceList24.clone();
        int int27 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList24);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator39 = charSequenceList37.spliterator();
        int int40 = charSequenceList37.size();
        boolean boolean41 = charSequenceList30.contains((java.lang.Object) charSequenceList37);
        java.lang.CharSequence charSequence42 = charSequenceList30.element();
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator47 = charSequenceList45.spliterator();
        boolean boolean48 = charSequenceList45.isEmpty();
        charSequenceList45.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str51 = charSequenceList45.toString();
        boolean boolean52 = charSequenceList30.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        boolean boolean54 = charSequenceList45.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor55 = charSequenceList45.descendingIterator();
        charSequenceList45.clear();
        boolean boolean57 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence58 = charSequenceList2.removeLast();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[hi!, ]" + "'", str51, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charSequenceItor55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        charSequenceList17.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList17.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        charSequenceList17.addLast((java.lang.CharSequence) "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence37 = charSequenceList17.set((int) (byte) 10, (java.lang.CharSequence) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceList2.stream();
        java.lang.CharSequence charSequence15 = charSequenceList2.getFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence18 = charSequenceList2.peekFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "hi!" + "'", charSequence15, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "hi!" + "'", charSequence18, "hi!");
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence22 = charSequenceList17.peek();
        boolean boolean24 = charSequenceList17.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean25 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence26 = charSequenceList2.pop();
        java.lang.CharSequence charSequence27 = charSequenceList2.peekFirst();
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList2.add(1, (java.lang.CharSequence) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNull(charSequence27);
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        java.util.LinkedList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.LinkedList<java.lang.constant.ConstantDesc>();
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceList17.getLast();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence29 = charSequenceList17.get((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.util.function.UnaryOperator<java.lang.CharSequence> charSequenceUnaryOperator11 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList2.replaceAll(charSequenceUnaryOperator11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.element();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.CharSequence> charSequenceItor9 = charSequenceList2.listIterator((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        boolean boolean14 = charSequenceList2.isEmpty();
        java.lang.Object obj15 = charSequenceList2.clone();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList19.equals(obj24);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceList28.spliterator();
        boolean boolean31 = charSequenceList19.removeLastOccurrence((java.lang.Object) charSequenceList28);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean32 = charSequenceList2.addAll(100, (java.util.Collection<java.lang.CharSequence>) charSequenceList19);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence9 = charSequenceList2.removeLast();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence11 = charSequenceList2.get((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence charSequence15 = charSequenceList9.pollLast();
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = charSequenceList18.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        java.lang.CharSequence charSequence23 = charSequenceList18.peek();
        boolean boolean25 = charSequenceList18.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = charSequenceList28.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean33 = charSequenceList18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean34 = charSequenceList9.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence35 = charSequenceList9.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNull(charSequence15);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "hi!" + "'", charSequence23, "hi!");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.lang.CharSequence charSequence8 = charSequenceList2.poll();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertNull(charSequence8);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceList2.stream();
        charSequenceList2.clear();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceStream14);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        java.lang.Object obj25 = null;
        boolean boolean26 = charSequenceList20.equals(obj25);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        boolean boolean32 = charSequenceList20.removeLastOccurrence((java.lang.Object) charSequenceList29);
        boolean boolean33 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence34 = charSequenceList2.removeLast();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        charSequenceList2.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.util.Collection<java.lang.CharSequence> charSequenceCollection13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = charSequenceList2.addAll((int) '#', charSequenceCollection13);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Size: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence charSequence15 = charSequenceList9.pollLast();
        charSequenceList9.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence17 = charSequenceList9.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNull(charSequence15);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList11.isEmpty();
        charSequenceList11.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean18 = charSequenceList11.offerLast((java.lang.CharSequence) "");
        charSequenceList11.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean21 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList2.add((int) ' ', (java.lang.CharSequence) "[hi!]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.add((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence12 = charSequenceList2.set(0, (java.lang.CharSequence) "[hi!]");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence15 = charSequenceList2.set((int) '4', (java.lang.CharSequence) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "hi!" + "'", charSequence12, "hi!");
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean18 = charSequenceList15.isEmpty();
        java.lang.CharSequence charSequence19 = charSequenceList15.peekLast();
        java.lang.CharSequence charSequence20 = charSequenceList15.poll();
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = charSequenceList24.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        java.lang.Object obj29 = null;
        boolean boolean30 = charSequenceList24.equals(obj29);
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList33, charSequenceArray32);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean37 = charSequenceList33.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList36);
        java.lang.CharSequence charSequence38 = charSequenceList33.peek();
        java.lang.CharSequence charSequence39 = charSequenceList33.pollFirst();
        boolean boolean40 = charSequenceList24.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.CharSequence charSequence41 = charSequenceList24.peek();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean42 = charSequenceList15.addAll((int) ' ', (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(charSequence19);
        org.junit.Assert.assertNull(charSequence20);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "hi!" + "'", charSequence38, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "hi!" + "'", charSequence39, "hi!");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence22 = charSequenceList17.peek();
        boolean boolean24 = charSequenceList17.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean25 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence26 = charSequenceList2.pop();
        java.lang.CharSequence charSequence27 = charSequenceList2.peekFirst();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence28 = charSequenceList2.getLast();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNull(charSequence27);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence22 = charSequenceList17.peek();
        boolean boolean24 = charSequenceList17.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean25 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence26 = charSequenceList2.pop();
        java.lang.CharSequence charSequence27 = charSequenceList2.peekFirst();
        java.lang.CharSequence charSequence28 = charSequenceList2.peekFirst();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream29 = charSequenceList2.parallelStream();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.CharSequence> charSequenceItor31 = charSequenceList2.listIterator(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNull(charSequence27);
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNotNull(charSequenceStream29);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceList2.stream();
        java.lang.CharSequence charSequence16 = null;
        charSequenceList2.add(0, charSequence16);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator29 = charSequenceList27.spliterator();
        int int30 = charSequenceList27.size();
        boolean boolean31 = charSequenceList20.contains((java.lang.Object) charSequenceList27);
        java.lang.CharSequence charSequence32 = charSequenceList20.element();
        boolean boolean33 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence35 = charSequenceList2.get((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "hi!" + "'", charSequence32, "hi!");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = charSequenceList16.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence charSequence21 = charSequenceList16.peek();
        java.lang.CharSequence charSequence22 = charSequenceList16.pollFirst();
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator27 = charSequenceList25.spliterator();
        boolean boolean28 = charSequenceList25.isEmpty();
        charSequenceList25.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean32 = charSequenceList25.offerLast((java.lang.CharSequence) "");
        charSequenceList25.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean35 = charSequenceList16.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        boolean boolean36 = charSequenceList9.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence37 = charSequenceList16.element();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "hi!" + "'", charSequence21, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        java.lang.CharSequence charSequence9 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence charSequence17 = charSequenceList12.peek();
        boolean boolean19 = charSequenceList12.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = charSequenceList22.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        boolean boolean27 = charSequenceList12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        charSequenceList12.clear();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.Object obj36 = charSequenceList34.clone();
        int int37 = charSequenceList12.lastIndexOf((java.lang.Object) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = charSequenceList40.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceList47.spliterator();
        int int50 = charSequenceList47.size();
        boolean boolean51 = charSequenceList40.contains((java.lang.Object) charSequenceList47);
        java.lang.CharSequence charSequence52 = charSequenceList40.element();
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList55 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55, charSequenceArray54);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator57 = charSequenceList55.spliterator();
        boolean boolean58 = charSequenceList55.isEmpty();
        charSequenceList55.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str61 = charSequenceList55.toString();
        boolean boolean62 = charSequenceList40.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55);
        boolean boolean64 = charSequenceList55.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor65 = charSequenceList55.descendingIterator();
        charSequenceList55.clear();
        boolean boolean67 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55);
        boolean boolean68 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence69 = charSequenceList2.getLast();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "[]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "hi!" + "'", charSequence52, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[hi!, ]" + "'", str61, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(charSequenceItor65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        charSequenceList2.clear();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.Object obj26 = charSequenceList24.clone();
        int int27 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList24);
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor29 = charSequenceList2.listIterator(0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence30 = charSequenceList2.removeFirst();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(charSequenceItor29);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor17 = charSequenceList2.iterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceItor17);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        java.lang.CharSequence charSequence6 = charSequenceList2.remove();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence7 = charSequenceList2.getLast();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        int int27 = charSequenceList2.indexOf((java.lang.Object) charSequence26);
        java.lang.CharSequence charSequence28 = charSequenceList2.pop();
        int int29 = charSequenceList2.size();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "hi!" + "'", charSequence28, "hi!");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence charSequence9 = charSequenceList2.removeFirst();
        boolean boolean11 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        boolean boolean12 = charSequenceList2.isEmpty();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence charSequence18 = charSequenceList2.pop();
        boolean boolean19 = charSequenceList2.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence22 = charSequenceList2.set((int) (byte) 1, (java.lang.CharSequence) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "hi!" + "'", charSequence18, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence12 = charSequenceList9.set((int) (byte) 1, (java.lang.CharSequence) "[]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = charSequenceList5.clone();
        charSequenceList5.addLast((java.lang.CharSequence) "[hi!, ]");
        boolean boolean11 = charSequenceList5.offerLast((java.lang.CharSequence) "[hi!, ]");
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.CharSequence> charSequenceList14 = charSequenceList5.subList((int) (short) 0, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 35");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        java.lang.CharSequence charSequence9 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence charSequence17 = charSequenceList12.peek();
        boolean boolean19 = charSequenceList12.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = charSequenceList22.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        boolean boolean27 = charSequenceList12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        charSequenceList12.clear();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.Object obj36 = charSequenceList34.clone();
        int int37 = charSequenceList12.lastIndexOf((java.lang.Object) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = charSequenceList40.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceList47.spliterator();
        int int50 = charSequenceList47.size();
        boolean boolean51 = charSequenceList40.contains((java.lang.Object) charSequenceList47);
        java.lang.CharSequence charSequence52 = charSequenceList40.element();
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList55 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55, charSequenceArray54);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator57 = charSequenceList55.spliterator();
        boolean boolean58 = charSequenceList55.isEmpty();
        charSequenceList55.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str61 = charSequenceList55.toString();
        boolean boolean62 = charSequenceList40.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55);
        boolean boolean64 = charSequenceList55.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor65 = charSequenceList55.descendingIterator();
        charSequenceList55.clear();
        boolean boolean67 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55);
        boolean boolean68 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.Object[] objArray69 = charSequenceList12.toArray();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "[]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "hi!" + "'", charSequence52, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[hi!, ]" + "'", str61, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(charSequenceItor65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        charSequenceList2.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.CharSequence> charSequenceItor7 = charSequenceList2.listIterator((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        java.lang.CharSequence charSequence10 = charSequenceList9.peekLast();
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList9.add((int) (byte) 100, (java.lang.CharSequence) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor27 = charSequenceList17.descendingIterator();
        charSequenceList17.clear();
        boolean boolean30 = charSequenceList17.add((java.lang.CharSequence) "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceItor27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList2.spliterator();
        boolean boolean12 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        charSequenceList2.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceList18.spliterator();
        boolean boolean21 = charSequenceList18.isEmpty();
        boolean boolean22 = charSequenceList2.equals((java.lang.Object) charSequenceList18);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence24 = charSequenceList18.get((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        java.lang.CharSequence charSequence10 = charSequenceList2.peek();
        java.lang.CharSequence charSequence11 = charSequenceList2.remove();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence12 = charSequenceList2.removeLast();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "hi!" + "'", charSequence11, "hi!");
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor27 = charSequenceList17.listIterator();
        java.lang.CharSequence charSequence28 = charSequenceList17.getFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceItor27);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "hi!" + "'", charSequence28, "hi!");
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence charSequence18 = charSequenceList15.poll();
        java.lang.CharSequence charSequence19 = charSequenceList15.peek();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(charSequence18);
        org.junit.Assert.assertNull(charSequence19);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence22 = charSequenceList17.peek();
        boolean boolean24 = charSequenceList17.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean25 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        charSequenceList17.clear();
        java.lang.CharSequence charSequence28 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList17.add((int) ' ', charSequence28);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence22 = charSequenceList17.peek();
        boolean boolean24 = charSequenceList17.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean25 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence26 = charSequenceList2.pop();
        java.lang.CharSequence charSequence27 = charSequenceList2.peekFirst();
        java.lang.CharSequence charSequence28 = charSequenceList2.peekFirst();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream29 = charSequenceList2.parallelStream();
        java.lang.CharSequence charSequence30 = charSequenceList2.pollLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNull(charSequence27);
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNotNull(charSequenceStream29);
        org.junit.Assert.assertNull(charSequence30);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList13.equals(obj18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        boolean boolean25 = charSequenceList13.removeLastOccurrence((java.lang.Object) charSequenceList22);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceList22.spliterator();
        boolean boolean27 = charSequenceList2.removeFirstOccurrence((java.lang.Object) charSequenceSpliterator26);
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList2.add((int) '#', (java.lang.CharSequence) "[]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList2.spliterator();
        boolean boolean12 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence13 = charSequenceList2.element();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceList2.stream();
        boolean boolean16 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (-1.0d));
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceList12.spliterator();
        boolean boolean15 = charSequenceList12.isEmpty();
        java.lang.CharSequence charSequence16 = charSequenceList12.removeLast();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence charSequence24 = charSequenceList19.peek();
        boolean boolean26 = charSequenceList19.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = charSequenceList29.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        boolean boolean34 = charSequenceList19.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.CharSequence charSequence35 = charSequenceList19.pop();
        boolean boolean36 = charSequenceList12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = charSequenceList39.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        java.lang.Object obj44 = null;
        boolean boolean45 = charSequenceList39.equals(obj44);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence charSequence47 = charSequenceList39.peek();
        java.lang.CharSequence charSequence48 = charSequenceList39.remove();
        boolean boolean49 = charSequenceList19.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean50 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList53 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53, charSequenceArray52);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = charSequenceList53.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList56);
        java.lang.CharSequence[] charSequenceArray59 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList60 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList60, charSequenceArray59);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator62 = charSequenceList60.spliterator();
        int int63 = charSequenceList60.size();
        boolean boolean64 = charSequenceList53.contains((java.lang.Object) charSequenceList60);
        java.lang.CharSequence charSequence65 = charSequenceList60.removeFirst();
        boolean boolean66 = charSequenceList39.removeFirstOccurrence((java.lang.Object) charSequence65);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[]" + "'", str8, "[]");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "hi!" + "'", charSequence24, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "hi!" + "'", charSequence47, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "hi!" + "'", charSequence48, "hi!");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charSequenceArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + charSequence65 + "' != '" + "" + "'", charSequence65, "");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceList2.stream();
        java.lang.CharSequence charSequence16 = null;
        charSequenceList2.add(0, charSequence16);
        java.lang.CharSequence charSequence18 = charSequenceList2.removeFirst();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceList28.spliterator();
        int int31 = charSequenceList28.size();
        boolean boolean32 = charSequenceList21.contains((java.lang.Object) charSequenceList28);
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = charSequenceList35.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        java.lang.CharSequence charSequence40 = charSequenceList35.peek();
        java.lang.CharSequence charSequence41 = charSequenceList35.pollFirst();
        java.lang.CharSequence[] charSequenceArray43 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList44 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList44, charSequenceArray43);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator46 = charSequenceList44.spliterator();
        boolean boolean47 = charSequenceList44.isEmpty();
        charSequenceList44.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean51 = charSequenceList44.offerLast((java.lang.CharSequence) "");
        charSequenceList44.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean54 = charSequenceList35.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList44);
        boolean boolean55 = charSequenceList28.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        boolean boolean56 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList35);
        java.lang.CharSequence charSequence57 = charSequenceList2.removeLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertNull(charSequence18);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "hi!" + "'", charSequence40, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + charSequence57 + "' != '" + "hi!" + "'", charSequence57, "hi!");
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        java.lang.CharSequence[] charSequenceArray4 = new java.lang.CharSequence[] { "hi!", "[hi!]", "[hi!]", "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList5, charSequenceArray4);
        java.lang.CharSequence charSequence7 = charSequenceList5.getFirst();
        org.junit.Assert.assertNotNull(charSequenceArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = charSequenceList5.clone();
        charSequenceList5.addLast((java.lang.CharSequence) "[hi!, ]");
        boolean boolean11 = charSequenceList5.offerFirst((java.lang.CharSequence) "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.pop();
        charSequenceList2.clear();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        charSequenceList2.clear();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.Object obj26 = charSequenceList24.clone();
        int int27 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList24);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator39 = charSequenceList37.spliterator();
        int int40 = charSequenceList37.size();
        boolean boolean41 = charSequenceList30.contains((java.lang.Object) charSequenceList37);
        java.lang.CharSequence charSequence42 = charSequenceList30.element();
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator47 = charSequenceList45.spliterator();
        boolean boolean48 = charSequenceList45.isEmpty();
        charSequenceList45.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str51 = charSequenceList45.toString();
        boolean boolean52 = charSequenceList30.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        boolean boolean54 = charSequenceList45.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor55 = charSequenceList45.descendingIterator();
        charSequenceList45.clear();
        boolean boolean57 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence58 = charSequenceList2.pop();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[hi!, ]" + "'", str51, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charSequenceItor55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        charSequenceList2.clear();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.Object obj26 = charSequenceList24.clone();
        int int27 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList24);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator39 = charSequenceList37.spliterator();
        int int40 = charSequenceList37.size();
        boolean boolean41 = charSequenceList30.contains((java.lang.Object) charSequenceList37);
        java.lang.CharSequence charSequence42 = charSequenceList30.element();
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator47 = charSequenceList45.spliterator();
        boolean boolean48 = charSequenceList45.isEmpty();
        charSequenceList45.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str51 = charSequenceList45.toString();
        boolean boolean52 = charSequenceList30.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        boolean boolean54 = charSequenceList45.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor55 = charSequenceList45.descendingIterator();
        charSequenceList45.clear();
        boolean boolean57 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        java.util.function.UnaryOperator<java.lang.CharSequence> charSequenceUnaryOperator58 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList45.replaceAll(charSequenceUnaryOperator58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[hi!, ]" + "'", str51, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charSequenceItor55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence charSequence10 = charSequenceList2.removeFirst();
        java.lang.Object obj11 = charSequenceList2.clone();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "[]");
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = charSequenceList5.clone();
        charSequenceList5.addLast((java.lang.CharSequence) "[hi!, ]");
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.CharSequence> charSequenceList12 = charSequenceList5.subList((int) (byte) 0, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        java.lang.CharSequence charSequence27 = charSequenceList21.pollFirst();
        charSequenceList21.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = charSequenceList32.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        java.lang.Object obj37 = null;
        boolean boolean38 = charSequenceList32.equals(obj37);
        java.lang.CharSequence[] charSequenceArray40 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList41 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList41, charSequenceArray40);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator43 = charSequenceList41.spliterator();
        boolean boolean44 = charSequenceList32.removeLastOccurrence((java.lang.Object) charSequenceList41);
        charSequenceList32.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean47 = charSequenceList21.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        boolean boolean48 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        boolean boolean50 = charSequenceList21.equals((java.lang.Object) (byte) 0);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charSequenceArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        charSequenceList17.addLast((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor27 = charSequenceList17.descendingIterator();
        boolean boolean29 = charSequenceList17.offerFirst((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence30 = charSequenceList17.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence32 = charSequenceList17.get(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceItor27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "" + "'", charSequence30, "");
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        java.lang.CharSequence charSequence6 = charSequenceList2.remove();
        boolean boolean8 = charSequenceList2.offerLast((java.lang.CharSequence) "[]");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence11 = charSequenceList2.set((int) '#', (java.lang.CharSequence) "[]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        charSequenceList11.clear();
        java.lang.Object[] objArray15 = charSequenceList11.toArray();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = charSequenceList2.addAll(10, (java.util.Collection<java.lang.CharSequence>) charSequenceList11);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceList2.stream();
        java.lang.CharSequence charSequence15 = charSequenceList2.getFirst();
        java.lang.CharSequence charSequence17 = charSequenceList2.remove(0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence19 = charSequenceList2.get((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "hi!" + "'", charSequence15, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        java.util.LinkedList<java.lang.CharSequence> charSequenceList0 = new java.util.LinkedList<java.lang.CharSequence>();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor1 = charSequenceList0.descendingIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence3 = charSequenceList0.get((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceItor1);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence charSequence18 = charSequenceList15.poll();
        charSequenceList15.addFirst((java.lang.CharSequence) "[hi!, ]");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence23 = charSequenceList15.set((int) (short) 100, (java.lang.CharSequence) "[hi!, ]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(charSequence18);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.lang.CharSequence charSequence13 = charSequenceList11.getLast();
        boolean boolean15 = charSequenceList11.removeFirstOccurrence((java.lang.Object) "");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = charSequenceList2.addAll((int) 'a', (java.util.Collection<java.lang.CharSequence>) charSequenceList11);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceList2.stream();
        java.lang.CharSequence charSequence16 = null;
        charSequenceList2.add(0, charSequence16);
        java.lang.CharSequence charSequence18 = charSequenceList2.removeFirst();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceList28.spliterator();
        int int31 = charSequenceList28.size();
        boolean boolean32 = charSequenceList21.contains((java.lang.Object) charSequenceList28);
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = charSequenceList35.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        java.lang.CharSequence charSequence40 = charSequenceList35.peek();
        java.lang.CharSequence charSequence41 = charSequenceList35.pollFirst();
        java.lang.CharSequence[] charSequenceArray43 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList44 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList44, charSequenceArray43);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator46 = charSequenceList44.spliterator();
        boolean boolean47 = charSequenceList44.isEmpty();
        charSequenceList44.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean51 = charSequenceList44.offerLast((java.lang.CharSequence) "");
        charSequenceList44.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean54 = charSequenceList35.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList44);
        boolean boolean55 = charSequenceList28.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        boolean boolean56 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList35);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence58 = charSequenceList35.get((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertNull(charSequence18);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "hi!" + "'", charSequence40, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList11.isEmpty();
        charSequenceList11.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean18 = charSequenceList11.offerLast((java.lang.CharSequence) "");
        charSequenceList11.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean21 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence22 = charSequenceList2.removeFirst();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence8 = charSequenceList2.element();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.pop();
        java.lang.CharSequence charSequence11 = charSequenceList2.getLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "" + "'", charSequence11, "");
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence charSequence15 = charSequenceList11.removeLast();
        java.util.List<java.lang.CharSequence> charSequenceList18 = charSequenceList11.subList(0, (int) (short) 0);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceList28.spliterator();
        int int31 = charSequenceList28.size();
        boolean boolean32 = charSequenceList21.contains((java.lang.Object) charSequenceList28);
        java.lang.CharSequence charSequence33 = charSequenceList28.removeFirst();
        java.lang.CharSequence charSequence34 = charSequenceList28.pollLast();
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        java.lang.CharSequence charSequence42 = charSequenceList37.peek();
        boolean boolean44 = charSequenceList37.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList50 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean51 = charSequenceList47.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList50);
        boolean boolean52 = charSequenceList37.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50);
        boolean boolean53 = charSequenceList28.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50);
        boolean boolean54 = charSequenceList11.contains((java.lang.Object) boolean53);
        java.lang.CharSequence charSequence55 = charSequenceList11.pollFirst();
        java.util.Collection<java.lang.CharSequence> charSequenceCollection57 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean58 = charSequenceList11.addAll(10, charSequenceCollection57);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "" + "'", charSequence15, "");
        org.junit.Assert.assertNotNull(charSequenceList18);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "" + "'", charSequence33, "");
        org.junit.Assert.assertNull(charSequence34);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(charSequence55);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence charSequence15 = charSequenceList11.removeLast();
        java.util.List<java.lang.CharSequence> charSequenceList18 = charSequenceList11.subList(0, (int) (short) 0);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceList28.spliterator();
        int int31 = charSequenceList28.size();
        boolean boolean32 = charSequenceList21.contains((java.lang.Object) charSequenceList28);
        java.lang.CharSequence charSequence33 = charSequenceList28.removeFirst();
        java.lang.CharSequence charSequence34 = charSequenceList28.pollLast();
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        java.lang.CharSequence charSequence42 = charSequenceList37.peek();
        boolean boolean44 = charSequenceList37.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList50 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean51 = charSequenceList47.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList50);
        boolean boolean52 = charSequenceList37.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50);
        boolean boolean53 = charSequenceList28.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50);
        boolean boolean54 = charSequenceList11.contains((java.lang.Object) boolean53);
        java.lang.CharSequence charSequence55 = charSequenceList11.pollFirst();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.CharSequence> charSequenceItor57 = charSequenceList11.listIterator((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "" + "'", charSequence15, "");
        org.junit.Assert.assertNotNull(charSequenceList18);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "" + "'", charSequence33, "");
        org.junit.Assert.assertNull(charSequence34);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(charSequence55);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.util.function.UnaryOperator<java.lang.CharSequence> charSequenceUnaryOperator15 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList11.replaceAll(charSequenceUnaryOperator15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence15 = charSequenceList9.remove((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.CharSequence> charSequenceList12 = charSequenceList2.subList((int) '4', 2);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList2.removeLastOccurrence(obj9);
        boolean boolean12 = charSequenceList2.remove((java.lang.Object) (short) 10);
        java.lang.CharSequence charSequence13 = charSequenceList2.poll();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.CharSequence> charSequenceItor15 = charSequenceList2.listIterator((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence charSequence15 = charSequenceList9.pollLast();
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = charSequenceList18.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        java.lang.CharSequence charSequence23 = charSequenceList18.peek();
        boolean boolean25 = charSequenceList18.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = charSequenceList28.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean33 = charSequenceList18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean34 = charSequenceList9.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        boolean boolean43 = charSequenceList37.offerFirst((java.lang.CharSequence) "hi!");
        boolean boolean44 = charSequenceList31.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor45 = charSequenceList37.listIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence48 = charSequenceList37.set(10, (java.lang.CharSequence) "[hi!, ]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNull(charSequence15);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "hi!" + "'", charSequence23, "hi!");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceItor45);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        charSequenceList2.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence6 = charSequenceList2.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        java.lang.CharSequence charSequence9 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence charSequence17 = charSequenceList12.peek();
        boolean boolean19 = charSequenceList12.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = charSequenceList22.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        boolean boolean27 = charSequenceList12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        charSequenceList12.clear();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.Object obj36 = charSequenceList34.clone();
        int int37 = charSequenceList12.lastIndexOf((java.lang.Object) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = charSequenceList40.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceList47.spliterator();
        int int50 = charSequenceList47.size();
        boolean boolean51 = charSequenceList40.contains((java.lang.Object) charSequenceList47);
        java.lang.CharSequence charSequence52 = charSequenceList40.element();
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList55 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55, charSequenceArray54);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator57 = charSequenceList55.spliterator();
        boolean boolean58 = charSequenceList55.isEmpty();
        charSequenceList55.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str61 = charSequenceList55.toString();
        boolean boolean62 = charSequenceList40.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55);
        boolean boolean64 = charSequenceList55.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor65 = charSequenceList55.descendingIterator();
        charSequenceList55.clear();
        boolean boolean67 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55);
        boolean boolean68 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence70 = charSequenceList2.remove(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "[]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "hi!" + "'", charSequence52, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[hi!, ]" + "'", str61, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(charSequenceItor65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.pop();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean14 = charSequenceList2.offer((java.lang.CharSequence) "[hi!, ]");
        boolean boolean16 = charSequenceList2.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence17 = charSequenceList2.getFirst();
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        int int26 = charSequenceList20.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean28 = charSequenceList20.contains((java.lang.Object) (-1.0d));
        java.lang.CharSequence charSequence29 = charSequenceList20.getFirst();
        boolean boolean30 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence32 = charSequenceList2.remove(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "[hi!, ]" + "'", charSequence17, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean10 = charSequenceList2.contains((java.lang.Object) (-1.0d));
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.CharSequence> charSequenceList13 = charSequenceList2.subList(100, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.Object obj9 = charSequenceList2.clone();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList13.equals(obj18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        java.lang.String str21 = charSequenceList20.toString();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = charSequenceList2.addAll(10, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[hi!]" + "'", str21, "[hi!]");
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.Object obj16 = null;
        boolean boolean17 = charSequenceList11.equals(obj16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence charSequence19 = charSequenceList11.peek();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = charSequenceList2.addAll(100, (java.util.Collection<java.lang.CharSequence>) charSequenceList11);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "hi!" + "'", charSequence19, "hi!");
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList2.spliterator();
        boolean boolean12 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence13 = charSequenceList2.element();
        java.lang.CharSequence charSequence14 = charSequenceList2.peekLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor15 = charSequenceList2.listIterator();
        charSequenceList2.addFirst((java.lang.CharSequence) "[hi!]");
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.CharSequence> charSequenceItor19 = charSequenceList2.listIterator((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceItor15);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.CharSequence> charSequenceItor7 = charSequenceList2.listIterator((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence22 = charSequenceList17.peek();
        boolean boolean24 = charSequenceList17.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean25 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence26 = charSequenceList2.pop();
        java.lang.CharSequence charSequence27 = charSequenceList2.peekFirst();
        java.lang.CharSequence charSequence28 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceList38.spliterator();
        int int41 = charSequenceList38.size();
        boolean boolean42 = charSequenceList31.contains((java.lang.Object) charSequenceList38);
        java.lang.CharSequence charSequence43 = charSequenceList31.element();
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceList46.spliterator();
        boolean boolean49 = charSequenceList46.isEmpty();
        charSequenceList46.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str52 = charSequenceList46.toString();
        boolean boolean53 = charSequenceList31.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        boolean boolean55 = charSequenceList46.offer((java.lang.CharSequence) "");
        charSequenceList46.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList46.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        charSequenceList46.addLast((java.lang.CharSequence) "hi!");
        int int64 = charSequenceList2.indexOf((java.lang.Object) charSequenceList46);
        java.lang.CharSequence[] charSequenceArray66 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList67 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList67, charSequenceArray66);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator69 = charSequenceList67.spliterator();
        java.lang.CharSequence[] charSequenceArray71 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList72 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList72, charSequenceArray71);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList75 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean76 = charSequenceList72.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList75);
        java.lang.CharSequence[] charSequenceArray78 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList79 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList79, charSequenceArray78);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator81 = charSequenceList79.spliterator();
        int int82 = charSequenceList79.size();
        boolean boolean83 = charSequenceList72.contains((java.lang.Object) charSequenceList79);
        java.lang.CharSequence charSequence84 = charSequenceList72.element();
        java.lang.CharSequence[] charSequenceArray86 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList87 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList87, charSequenceArray86);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator89 = charSequenceList87.spliterator();
        boolean boolean90 = charSequenceList87.isEmpty();
        charSequenceList87.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str93 = charSequenceList87.toString();
        boolean boolean94 = charSequenceList72.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList87);
        boolean boolean96 = charSequenceList87.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor97 = charSequenceList87.descendingIterator();
        boolean boolean98 = charSequenceList67.removeLastOccurrence((java.lang.Object) charSequenceItor97);
        boolean boolean99 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList67);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNull(charSequence27);
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "hi!" + "'", charSequence43, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[hi!, ]" + "'", str52, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator69);
        org.junit.Assert.assertNotNull(charSequenceArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(charSequenceArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + charSequence84 + "' != '" + "hi!" + "'", charSequence84, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[hi!, ]" + "'", str93, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(charSequenceItor97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.element();
        charSequenceList2.addFirst((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.peekFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "" + "'", charSequence10, "");
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        java.util.LinkedList<java.lang.Comparable<java.lang.String>> strComparableList5 = new java.util.LinkedList<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = charSequenceList2.contains((java.lang.Object) strComparableList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peekFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "" + "'", charSequence7, "");
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence22 = charSequenceList17.peek();
        boolean boolean24 = charSequenceList17.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean25 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence26 = charSequenceList2.pop();
        java.lang.CharSequence charSequence27 = charSequenceList2.peekFirst();
        int int28 = charSequenceList2.size();
        java.util.function.UnaryOperator<java.lang.CharSequence> charSequenceUnaryOperator29 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList2.replaceAll(charSequenceUnaryOperator29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNull(charSequence27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence charSequence15 = charSequenceList9.pollLast();
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = charSequenceList18.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        java.lang.CharSequence charSequence23 = charSequenceList18.peek();
        boolean boolean25 = charSequenceList18.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = charSequenceList28.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean33 = charSequenceList18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean34 = charSequenceList9.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        boolean boolean43 = charSequenceList37.offerFirst((java.lang.CharSequence) "hi!");
        boolean boolean44 = charSequenceList31.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48, charSequenceArray47);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList51 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean52 = charSequenceList48.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList51);
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList55 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55, charSequenceArray54);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator57 = charSequenceList55.spliterator();
        int int58 = charSequenceList55.size();
        boolean boolean59 = charSequenceList48.contains((java.lang.Object) charSequenceList55);
        boolean boolean60 = charSequenceList48.isEmpty();
        java.lang.CharSequence charSequence61 = charSequenceList48.remove();
        charSequenceList48.addFirst((java.lang.CharSequence) "hi!");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean64 = charSequenceList31.addAll(10, (java.util.Collection<java.lang.CharSequence>) charSequenceList48);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNull(charSequence15);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "hi!" + "'", charSequence23, "hi!");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + charSequence61 + "' != '" + "hi!" + "'", charSequence61, "hi!");
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList11.isEmpty();
        charSequenceList11.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean18 = charSequenceList11.offerLast((java.lang.CharSequence) "");
        charSequenceList11.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean21 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor22 = charSequenceList11.descendingIterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream23 = charSequenceList11.stream();
        java.lang.CharSequence charSequence24 = charSequenceList11.element();
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList11.add((int) ' ', (java.lang.CharSequence) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Size: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charSequenceItor22);
        org.junit.Assert.assertNotNull(charSequenceStream23);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "[hi!, ]" + "'", charSequence24, "[hi!, ]");
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        charSequenceList5.push((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceList18.spliterator();
        int int21 = charSequenceList18.size();
        boolean boolean22 = charSequenceList11.contains((java.lang.Object) charSequenceList18);
        boolean boolean23 = charSequenceList5.removeLastOccurrence((java.lang.Object) boolean22);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        boolean boolean14 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence15 = charSequenceList2.remove();
        java.lang.CharSequence charSequence16 = charSequenceList2.poll();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor17 = charSequenceList2.descendingIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence18 = charSequenceList2.removeFirst();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "hi!" + "'", charSequence15, "hi!");
        org.junit.Assert.assertNull(charSequence16);
        org.junit.Assert.assertNotNull(charSequenceItor17);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence9 = charSequenceList2.removeLast();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence10 = charSequenceList2.removeLast();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence charSequence18 = charSequenceList2.pop();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        java.lang.CharSequence charSequence27 = charSequenceList21.poll();
        boolean boolean28 = charSequenceList2.remove((java.lang.Object) charSequence27);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.CharSequence> charSequenceItor30 = charSequenceList2.listIterator((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "hi!" + "'", charSequence18, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        java.lang.CharSequence[] charSequenceArray5 = new java.lang.CharSequence[] { "[hi!, ]", "hi!", "hi!", "[hi!, ]", "[]" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList6 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6, charSequenceArray5);
        boolean boolean9 = charSequenceList6.offerLast((java.lang.CharSequence) "[]");
        org.junit.Assert.assertNotNull(charSequenceArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        charSequenceList2.clear();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.Object obj26 = charSequenceList24.clone();
        int int27 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList24);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator39 = charSequenceList37.spliterator();
        int int40 = charSequenceList37.size();
        boolean boolean41 = charSequenceList30.contains((java.lang.Object) charSequenceList37);
        java.lang.CharSequence charSequence42 = charSequenceList30.element();
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator47 = charSequenceList45.spliterator();
        boolean boolean48 = charSequenceList45.isEmpty();
        charSequenceList45.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str51 = charSequenceList45.toString();
        boolean boolean52 = charSequenceList30.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        boolean boolean54 = charSequenceList45.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor55 = charSequenceList45.descendingIterator();
        charSequenceList45.clear();
        boolean boolean57 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        java.lang.CharSequence charSequence58 = charSequenceList45.peekLast();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence59 = charSequenceList45.removeFirst();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[hi!, ]" + "'", str51, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charSequenceItor55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(charSequence58);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList2.spliterator();
        boolean boolean12 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence13 = charSequenceList2.element();
        java.lang.CharSequence charSequence14 = charSequenceList2.peekLast();
        java.lang.Object[] objArray15 = charSequenceList2.toArray();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, hi!]");
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean18 = charSequenceList15.isEmpty();
        java.lang.CharSequence charSequence19 = charSequenceList15.peekLast();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = charSequenceList22.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList22.equals(obj27);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence charSequence30 = charSequenceList22.peek();
        boolean boolean31 = charSequenceList15.removeLastOccurrence((java.lang.Object) charSequence30);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(charSequence19);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "hi!" + "'", charSequence30, "hi!");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence charSequence18 = charSequenceList2.pop();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        java.lang.CharSequence charSequence27 = charSequenceList21.poll();
        boolean boolean28 = charSequenceList2.remove((java.lang.Object) charSequence27);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence31 = charSequenceList2.set((int) (byte) 0, (java.lang.CharSequence) "[hi!, ]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "hi!" + "'", charSequence18, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence charSequence15 = charSequenceList9.pollLast();
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList9.add((int) (short) 1, (java.lang.CharSequence) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNull(charSequence15);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList7 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList10 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean11 = charSequenceList7.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList10);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceList14.spliterator();
        int int17 = charSequenceList14.size();
        boolean boolean18 = charSequenceList7.contains((java.lang.Object) charSequenceList14);
        java.lang.CharSequence charSequence19 = charSequenceList7.element();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        boolean boolean25 = charSequenceList22.isEmpty();
        charSequenceList22.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str28 = charSequenceList22.toString();
        boolean boolean29 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        boolean boolean31 = charSequenceList22.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor32 = charSequenceList22.descendingIterator();
        boolean boolean33 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceItor32);
        java.lang.CharSequence charSequence34 = charSequenceList2.poll();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "hi!" + "'", charSequence19, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[hi!, ]" + "'", str28, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceItor32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor27 = charSequenceList17.listIterator();
        boolean boolean29 = charSequenceList17.offerFirst((java.lang.CharSequence) "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceItor27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence charSequence15 = charSequenceList9.pollLast();
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = charSequenceList18.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        java.lang.CharSequence charSequence23 = charSequenceList18.peek();
        boolean boolean25 = charSequenceList18.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = charSequenceList28.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean33 = charSequenceList18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean34 = charSequenceList9.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        boolean boolean43 = charSequenceList37.offerFirst((java.lang.CharSequence) "hi!");
        boolean boolean44 = charSequenceList31.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor45 = charSequenceList37.listIterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator46 = charSequenceList37.spliterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNull(charSequence15);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "hi!" + "'", charSequence23, "hi!");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceItor45);
        org.junit.Assert.assertNotNull(charSequenceSpliterator46);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence charSequence9 = charSequenceList2.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream10 = charSequenceList2.parallelStream();
        java.util.Collection<java.lang.CharSequence> charSequenceCollection11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = charSequenceList2.retainAll(charSequenceCollection11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream10);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = charSequenceList9.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence charSequence14 = charSequenceList9.peek();
        boolean boolean16 = charSequenceList9.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        boolean boolean24 = charSequenceList9.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence charSequence25 = charSequenceList9.pop();
        boolean boolean26 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = charSequenceList29.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList29.equals(obj34);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        java.lang.CharSequence charSequence37 = charSequenceList29.peek();
        java.lang.CharSequence charSequence38 = charSequenceList29.remove();
        boolean boolean39 = charSequenceList9.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence40 = charSequenceList29.element();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "hi!" + "'", charSequence37, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "hi!" + "'", charSequence38, "hi!");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.pop();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean14 = charSequenceList2.offer((java.lang.CharSequence) "[hi!, ]");
        boolean boolean16 = charSequenceList2.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence17 = charSequenceList2.getFirst();
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        int int26 = charSequenceList20.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence27 = charSequenceList20.removeLast();
        java.lang.CharSequence charSequence28 = charSequenceList20.peekLast();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceList38.spliterator();
        int int41 = charSequenceList38.size();
        boolean boolean42 = charSequenceList31.contains((java.lang.Object) charSequenceList38);
        java.lang.CharSequence charSequence43 = charSequenceList31.element();
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceList46.spliterator();
        boolean boolean49 = charSequenceList46.isEmpty();
        charSequenceList46.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str52 = charSequenceList46.toString();
        boolean boolean53 = charSequenceList31.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceList46.stream();
        boolean boolean55 = charSequenceList20.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        boolean boolean56 = charSequenceList2.contains((java.lang.Object) charSequenceList20);
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor57 = charSequenceList20.listIterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream58 = charSequenceList20.parallelStream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "[hi!, ]" + "'", charSequence17, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "hi!" + "'", charSequence43, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[hi!, ]" + "'", str52, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charSequenceItor57);
        org.junit.Assert.assertNotNull(charSequenceStream58);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceList2.stream();
        java.lang.CharSequence charSequence16 = null;
        charSequenceList2.add(0, charSequence16);
        java.lang.CharSequence charSequence18 = charSequenceList2.removeFirst();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream19 = charSequenceList2.stream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertNull(charSequence18);
        org.junit.Assert.assertNotNull(charSequenceStream19);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        java.util.LinkedList<java.lang.Comparable<java.lang.String>> strComparableList5 = new java.util.LinkedList<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = charSequenceList2.contains((java.lang.Object) strComparableList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = charSequenceList9.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator18 = charSequenceList16.spliterator();
        int int19 = charSequenceList16.size();
        boolean boolean20 = charSequenceList9.contains((java.lang.Object) charSequenceList16);
        java.lang.CharSequence charSequence21 = charSequenceList9.element();
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = charSequenceList24.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceList31.spliterator();
        int int34 = charSequenceList31.size();
        boolean boolean35 = charSequenceList24.contains((java.lang.Object) charSequenceList31);
        java.lang.CharSequence charSequence36 = charSequenceList24.element();
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceList39.spliterator();
        boolean boolean42 = charSequenceList39.isEmpty();
        charSequenceList39.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str45 = charSequenceList39.toString();
        boolean boolean46 = charSequenceList24.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean48 = charSequenceList39.offer((java.lang.CharSequence) "");
        charSequenceList39.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean53 = charSequenceList39.add((java.lang.CharSequence) "");
        int int54 = charSequenceList9.lastIndexOf((java.lang.Object) boolean53);
        boolean boolean55 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        boolean boolean57 = charSequenceList9.remove((java.lang.Object) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence59 = charSequenceList9.get(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "hi!" + "'", charSequence21, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "hi!" + "'", charSequence36, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[hi!, ]" + "'", str45, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList12.equals(obj17);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceList21.spliterator();
        boolean boolean24 = charSequenceList12.removeLastOccurrence((java.lang.Object) charSequenceList21);
        charSequenceList12.addLast((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        int int32 = charSequenceList29.size();
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceList35.spliterator();
        int int38 = charSequenceList35.size();
        boolean boolean39 = charSequenceList29.contains((java.lang.Object) charSequenceList35);
        boolean boolean40 = charSequenceList12.contains((java.lang.Object) boolean39);
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList43, charSequenceArray42);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator45 = charSequenceList43.spliterator();
        boolean boolean46 = charSequenceList43.isEmpty();
        java.lang.CharSequence charSequence47 = charSequenceList43.removeLast();
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList50 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50, charSequenceArray49);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList53 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean54 = charSequenceList50.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList53);
        java.lang.CharSequence charSequence55 = charSequenceList50.peek();
        boolean boolean57 = charSequenceList50.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray59 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList60 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList60, charSequenceArray59);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList63 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean64 = charSequenceList60.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList63);
        boolean boolean65 = charSequenceList50.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList63);
        java.lang.CharSequence charSequence66 = charSequenceList50.pop();
        boolean boolean67 = charSequenceList43.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50);
        java.lang.CharSequence[] charSequenceArray69 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList70 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList70, charSequenceArray69);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList73 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean74 = charSequenceList70.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList73);
        java.lang.Object obj75 = null;
        boolean boolean76 = charSequenceList70.equals(obj75);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList77 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList70);
        java.lang.CharSequence charSequence78 = charSequenceList70.peek();
        java.lang.CharSequence charSequence79 = charSequenceList70.remove();
        boolean boolean80 = charSequenceList50.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList70);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor81 = charSequenceList70.descendingIterator();
        boolean boolean82 = charSequenceList12.remove((java.lang.Object) charSequenceItor81);
        boolean boolean83 = charSequenceList2.equals((java.lang.Object) boolean82);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "" + "'", charSequence47, "");
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + charSequence55 + "' != '" + "hi!" + "'", charSequence55, "hi!");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charSequenceArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + charSequence66 + "' != '" + "hi!" + "'", charSequence66, "hi!");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(charSequenceArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + charSequence78 + "' != '" + "hi!" + "'", charSequence78, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence79 + "' != '" + "hi!" + "'", charSequence79, "hi!");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(charSequenceItor81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray9 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList10 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList10, charSequenceArray9);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = charSequenceList10.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        int int20 = charSequenceList17.size();
        boolean boolean21 = charSequenceList10.contains((java.lang.Object) charSequenceList17);
        java.lang.CharSequence charSequence22 = charSequenceList10.element();
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator27 = charSequenceList25.spliterator();
        boolean boolean28 = charSequenceList25.isEmpty();
        charSequenceList25.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str31 = charSequenceList25.toString();
        boolean boolean32 = charSequenceList10.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        boolean boolean34 = charSequenceList25.offer((java.lang.CharSequence) "");
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor35 = charSequenceList25.listIterator();
        java.lang.CharSequence charSequence36 = charSequenceList25.poll();
        java.lang.CharSequence charSequence37 = charSequenceList25.peek();
        boolean boolean38 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        charSequenceList2.push((java.lang.CharSequence) "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[hi!, ]" + "'", str31, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceItor35);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "hi!" + "'", charSequence36, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "" + "'", charSequence37, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = charSequenceList9.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence charSequence14 = charSequenceList9.peek();
        boolean boolean16 = charSequenceList9.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        boolean boolean24 = charSequenceList9.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence charSequence25 = charSequenceList9.pop();
        boolean boolean26 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence27 = charSequenceList2.removeFirst();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence22 = charSequenceList17.peek();
        boolean boolean24 = charSequenceList17.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean25 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence26 = charSequenceList2.pop();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = charSequenceList29.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.CharSequence charSequence34 = charSequenceList29.peek();
        java.lang.CharSequence charSequence35 = charSequenceList29.pollFirst();
        charSequenceList29.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = charSequenceList40.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        java.lang.Object obj45 = null;
        boolean boolean46 = charSequenceList40.equals(obj45);
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator51 = charSequenceList49.spliterator();
        boolean boolean52 = charSequenceList40.removeLastOccurrence((java.lang.Object) charSequenceList49);
        charSequenceList40.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean55 = charSequenceList29.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        boolean boolean56 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        java.lang.CharSequence[] charSequenceArray58 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList59 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList59, charSequenceArray58);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList62 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean63 = charSequenceList59.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList62);
        java.lang.Object obj64 = null;
        boolean boolean65 = charSequenceList59.equals(obj64);
        java.lang.CharSequence[] charSequenceArray67 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList68 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList68, charSequenceArray67);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList71 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean72 = charSequenceList68.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList71);
        java.lang.CharSequence charSequence73 = charSequenceList68.peek();
        java.lang.CharSequence charSequence74 = charSequenceList68.pollFirst();
        boolean boolean75 = charSequenceList59.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList68);
        java.lang.CharSequence[] charSequenceArray77 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList78 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList78, charSequenceArray77);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList81 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean82 = charSequenceList78.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList81);
        java.lang.CharSequence charSequence83 = charSequenceList78.peek();
        int int84 = charSequenceList59.indexOf((java.lang.Object) charSequence83);
        boolean boolean85 = charSequenceList2.removeFirstOccurrence((java.lang.Object) charSequence83);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charSequenceArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(charSequenceArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + charSequence73 + "' != '" + "hi!" + "'", charSequence73, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence74 + "' != '" + "hi!" + "'", charSequence74, "hi!");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(charSequenceArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + charSequence83 + "' != '" + "hi!" + "'", charSequence83, "hi!");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.Object obj22 = null;
        boolean boolean23 = charSequenceList17.equals(obj22);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence25 = charSequenceList17.peek();
        boolean boolean26 = charSequenceList9.equals((java.lang.Object) charSequenceList17);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = charSequenceList29.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.CharSequence charSequence34 = charSequenceList29.peek();
        java.lang.CharSequence charSequence35 = charSequenceList29.pollFirst();
        charSequenceList29.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = charSequenceList40.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        java.lang.Object obj45 = null;
        boolean boolean46 = charSequenceList40.equals(obj45);
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator51 = charSequenceList49.spliterator();
        boolean boolean52 = charSequenceList40.removeLastOccurrence((java.lang.Object) charSequenceList49);
        java.lang.CharSequence charSequence53 = charSequenceList49.removeLast();
        boolean boolean54 = charSequenceList29.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49);
        java.lang.CharSequence charSequence55 = charSequenceList29.pollFirst();
        boolean boolean56 = charSequenceList9.removeLastOccurrence((java.lang.Object) charSequence55);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.CharSequence> charSequenceItor58 = charSequenceList9.listIterator(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(charSequence55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence charSequence18 = charSequenceList15.poll();
        charSequenceList15.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList26 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean27 = charSequenceList23.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList26);
        java.lang.CharSequence charSequence28 = charSequenceList23.peek();
        java.lang.CharSequence charSequence29 = charSequenceList23.poll();
        boolean boolean30 = charSequenceList15.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(charSequence18);
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "hi!" + "'", charSequence28, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceList2.parallelStream();
        java.lang.Object[] objArray9 = charSequenceList2.toArray();
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList2.add((-1), (java.lang.CharSequence) "[]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence charSequence9 = charSequenceList2.removeFirst();
        boolean boolean11 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = charSequenceList14.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceList21.spliterator();
        int int24 = charSequenceList21.size();
        boolean boolean25 = charSequenceList14.contains((java.lang.Object) charSequenceList21);
        java.lang.CharSequence charSequence26 = charSequenceList14.element();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        boolean boolean32 = charSequenceList29.isEmpty();
        charSequenceList29.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str35 = charSequenceList29.toString();
        boolean boolean36 = charSequenceList14.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        boolean boolean38 = charSequenceList29.offer((java.lang.CharSequence) "");
        charSequenceList29.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList29.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        charSequenceList29.addLast((java.lang.CharSequence) "hi!");
        boolean boolean47 = charSequenceList2.removeFirstOccurrence((java.lang.Object) "hi!");
        boolean boolean49 = charSequenceList2.offerLast((java.lang.CharSequence) "[hi!, ]");
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.CharSequence> charSequenceList52 = charSequenceList2.subList(10, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 35");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[hi!, ]" + "'", str35, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList11.isEmpty();
        charSequenceList11.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean18 = charSequenceList11.offerLast((java.lang.CharSequence) "");
        charSequenceList11.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean21 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor22 = charSequenceList11.descendingIterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream23 = charSequenceList11.stream();
        java.lang.CharSequence charSequence24 = charSequenceList11.element();
        boolean boolean25 = charSequenceList11.isEmpty();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charSequenceItor22);
        org.junit.Assert.assertNotNull(charSequenceStream23);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "[hi!, ]" + "'", charSequence24, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence charSequence10 = charSequenceList2.removeFirst();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence11 = charSequenceList2.element();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        int int27 = charSequenceList2.indexOf((java.lang.Object) charSequence26);
        java.lang.CharSequence charSequence28 = charSequenceList2.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence29 = charSequenceList2.removeFirst();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "hi!" + "'", charSequence28, "hi!");
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.Object obj22 = null;
        boolean boolean23 = charSequenceList17.equals(obj22);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence25 = charSequenceList17.peek();
        boolean boolean26 = charSequenceList9.equals((java.lang.Object) charSequenceList17);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence27 = charSequenceList9.pop();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        java.lang.CharSequence charSequence6 = charSequenceList2.remove();
        boolean boolean8 = charSequenceList2.offerLast((java.lang.CharSequence) "[]");
        java.lang.CharSequence charSequence9 = null;
        boolean boolean10 = charSequenceList2.offer(charSequence9);
        boolean boolean12 = charSequenceList2.offer((java.lang.CharSequence) "[hi!, [hi!, ]]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence charSequence19 = charSequenceList2.peek();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence21 = charSequenceList2.remove((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "hi!" + "'", charSequence19, "hi!");
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList13.equals(obj18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        boolean boolean25 = charSequenceList13.removeLastOccurrence((java.lang.Object) charSequenceList22);
        java.lang.CharSequence charSequence26 = charSequenceList22.removeLast();
        boolean boolean27 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator32 = charSequenceList30.spliterator();
        boolean boolean33 = charSequenceList30.isEmpty();
        java.lang.CharSequence charSequence34 = charSequenceList30.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream35 = charSequenceList30.stream();
        java.lang.String str36 = charSequenceList30.toString();
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator42 = charSequenceList40.spliterator();
        boolean boolean43 = charSequenceList40.isEmpty();
        java.lang.CharSequence charSequence44 = charSequenceList40.removeLast();
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList50 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean51 = charSequenceList47.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList50);
        java.lang.CharSequence charSequence52 = charSequenceList47.peek();
        boolean boolean54 = charSequenceList47.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray56 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList57 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList57, charSequenceArray56);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList60 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean61 = charSequenceList57.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList60);
        boolean boolean62 = charSequenceList47.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList60);
        java.lang.CharSequence charSequence63 = charSequenceList47.pop();
        boolean boolean64 = charSequenceList40.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47);
        java.lang.CharSequence[] charSequenceArray66 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList67 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList67, charSequenceArray66);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList70 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean71 = charSequenceList67.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList70);
        java.lang.Object obj72 = null;
        boolean boolean73 = charSequenceList67.equals(obj72);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList74 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList67);
        java.lang.CharSequence charSequence75 = charSequenceList67.peek();
        java.lang.CharSequence charSequence76 = charSequenceList67.remove();
        boolean boolean77 = charSequenceList47.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList67);
        boolean boolean78 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList67);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor79 = charSequenceList67.descendingIterator();
        int int80 = charSequenceList22.indexOf((java.lang.Object) charSequenceItor79);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertNotNull(charSequenceStream35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[]" + "'", str36, "[]");
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "" + "'", charSequence44, "");
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "hi!" + "'", charSequence52, "hi!");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(charSequenceArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + charSequence63 + "' != '" + "hi!" + "'", charSequence63, "hi!");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(charSequenceArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + charSequence75 + "' != '" + "hi!" + "'", charSequence75, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence76 + "' != '" + "hi!" + "'", charSequence76, "hi!");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(charSequenceItor79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList8 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList8.spliterator();
        int int11 = charSequenceList8.size();
        boolean boolean12 = charSequenceList2.contains((java.lang.Object) charSequenceList8);
        boolean boolean14 = charSequenceList2.add((java.lang.CharSequence) "[hi!, ]");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence16 = charSequenceList2.get((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean10 = charSequenceList2.offerLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.String str11 = charSequenceList2.toString();
        java.lang.CharSequence charSequence12 = charSequenceList2.poll();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[hi!, [hi!, ]]" + "'", str11, "[hi!, [hi!, ]]");
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "hi!" + "'", charSequence12, "hi!");
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        charSequenceList2.addFirst((java.lang.CharSequence) "[hi!, ]");
        charSequenceList2.clear();
        java.util.LinkedList<java.io.Serializable> serializableList13 = new java.util.LinkedList<java.io.Serializable>();
        int int14 = charSequenceList2.lastIndexOf((java.lang.Object) serializableList13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence15 = charSequenceList2.getFirst();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        java.lang.CharSequence charSequence6 = charSequenceList2.remove();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        boolean boolean12 = charSequenceList9.isEmpty();
        charSequenceList9.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean16 = charSequenceList9.offerLast((java.lang.CharSequence) "");
        charSequenceList9.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence19 = charSequenceList9.removeLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor20 = charSequenceList9.listIterator();
        boolean boolean21 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence22 = charSequenceList2.peek();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.CharSequence> charSequenceList25 = charSequenceList2.subList(1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertNotNull(charSequenceItor20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(charSequence22);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceList17.stream();
        boolean boolean27 = charSequenceList17.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence28 = charSequenceList17.poll();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence33 = charSequenceList17.set((int) 'a', (java.lang.CharSequence) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceStream25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "[hi!, ]" + "'", charSequence28, "[hi!, ]");
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        java.util.LinkedList<java.lang.Comparable<java.lang.String>> strComparableList5 = new java.util.LinkedList<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = charSequenceList2.contains((java.lang.Object) strComparableList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = charSequenceList9.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator18 = charSequenceList16.spliterator();
        int int19 = charSequenceList16.size();
        boolean boolean20 = charSequenceList9.contains((java.lang.Object) charSequenceList16);
        java.lang.CharSequence charSequence21 = charSequenceList9.element();
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = charSequenceList24.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceList31.spliterator();
        int int34 = charSequenceList31.size();
        boolean boolean35 = charSequenceList24.contains((java.lang.Object) charSequenceList31);
        java.lang.CharSequence charSequence36 = charSequenceList24.element();
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceList39.spliterator();
        boolean boolean42 = charSequenceList39.isEmpty();
        charSequenceList39.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str45 = charSequenceList39.toString();
        boolean boolean46 = charSequenceList24.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean48 = charSequenceList39.offer((java.lang.CharSequence) "");
        charSequenceList39.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean53 = charSequenceList39.add((java.lang.CharSequence) "");
        int int54 = charSequenceList9.lastIndexOf((java.lang.Object) boolean53);
        boolean boolean55 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList58 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58, charSequenceArray57);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList61 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean62 = charSequenceList58.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList61);
        java.lang.CharSequence[] charSequenceArray64 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList65 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList65, charSequenceArray64);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator67 = charSequenceList65.spliterator();
        int int68 = charSequenceList65.size();
        boolean boolean69 = charSequenceList58.contains((java.lang.Object) charSequenceList65);
        java.lang.CharSequence charSequence70 = charSequenceList58.element();
        java.lang.CharSequence[] charSequenceArray72 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList73 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList73, charSequenceArray72);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator75 = charSequenceList73.spliterator();
        boolean boolean76 = charSequenceList73.isEmpty();
        charSequenceList73.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str79 = charSequenceList73.toString();
        boolean boolean80 = charSequenceList58.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList73);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream81 = charSequenceList73.stream();
        boolean boolean82 = charSequenceList9.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList73);
        java.lang.CharSequence charSequence83 = charSequenceList9.getLast();
        java.lang.CharSequence charSequence84 = charSequenceList9.remove();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor85 = charSequenceList9.iterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "hi!" + "'", charSequence21, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "hi!" + "'", charSequence36, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[hi!, ]" + "'", str45, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(charSequenceArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + charSequence70 + "' != '" + "hi!" + "'", charSequence70, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[hi!, ]" + "'", str79, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(charSequenceStream81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertEquals("'" + charSequence83 + "' != '" + "" + "'", charSequence83, "");
        org.junit.Assert.assertEquals("'" + charSequence84 + "' != '" + "hi!" + "'", charSequence84, "hi!");
        org.junit.Assert.assertNotNull(charSequenceItor85);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceList17.getLast();
        boolean boolean29 = charSequenceList17.add((java.lang.CharSequence) "[hi!, [hi!, ]]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor25 = charSequenceList2.descendingIterator();
        boolean boolean26 = charSequenceList2.isEmpty();
        boolean boolean28 = charSequenceList2.add((java.lang.CharSequence) "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceItor25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceList2.parallelStream();
        java.lang.Object[] objArray9 = charSequenceList2.toArray();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.CharSequence> charSequenceList12 = charSequenceList2.subList(2, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(2) > toIndex(0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = charSequenceList5.clone();
        charSequenceList5.addLast((java.lang.CharSequence) "[hi!, ]");
        boolean boolean11 = charSequenceList5.offerLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence12 = charSequenceList5.pollFirst();
        java.lang.CharSequence charSequence13 = charSequenceList5.pollLast();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.CharSequence> charSequenceItor15 = charSequenceList5.listIterator((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "[hi!, ]" + "'", charSequence12, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "[hi!, ]" + "'", charSequence13, "[hi!, ]");
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        java.lang.CharSequence charSequence27 = charSequenceList21.pollFirst();
        charSequenceList21.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = charSequenceList32.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        java.lang.Object obj37 = null;
        boolean boolean38 = charSequenceList32.equals(obj37);
        java.lang.CharSequence[] charSequenceArray40 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList41 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList41, charSequenceArray40);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator43 = charSequenceList41.spliterator();
        boolean boolean44 = charSequenceList32.removeLastOccurrence((java.lang.Object) charSequenceList41);
        charSequenceList32.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean47 = charSequenceList21.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        boolean boolean48 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        java.util.function.UnaryOperator<java.lang.CharSequence> charSequenceUnaryOperator49 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList21.replaceAll(charSequenceUnaryOperator49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charSequenceArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence charSequence9 = charSequenceList2.removeFirst();
        boolean boolean11 = charSequenceList2.removeLastOccurrence((java.lang.Object) (short) 100);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceList14.spliterator();
        int int17 = charSequenceList14.size();
        java.lang.CharSequence charSequence18 = charSequenceList14.remove();
        boolean boolean19 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence21 = charSequenceList14.get((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "" + "'", charSequence18, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        charSequenceList17.addLast((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor27 = charSequenceList17.descendingIterator();
        boolean boolean29 = charSequenceList17.offerFirst((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence30 = charSequenceList17.pop();
        java.lang.Object obj31 = charSequenceList17.clone();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceItor27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "" + "'", charSequence30, "");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[hi!, , ]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "[hi!, , ]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[hi!, , ]");
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        int int27 = charSequenceList2.indexOf((java.lang.Object) charSequence26);
        int int28 = charSequenceList2.size();
        charSequenceList2.addFirst((java.lang.CharSequence) "");
        charSequenceList2.add((int) (byte) 0, (java.lang.CharSequence) "[hi!, ]");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream34 = charSequenceList2.parallelStream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(charSequenceStream34);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceList17.getLast();
        java.util.function.UnaryOperator<java.lang.CharSequence> charSequenceUnaryOperator28 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList17.replaceAll(charSequenceUnaryOperator28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "[]" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream4 = charSequenceList2.stream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceStream4);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceList17.stream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceList17.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator27 = charSequenceList17.spliterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream28 = charSequenceList17.parallelStream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceStream25);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
        org.junit.Assert.assertNotNull(charSequenceSpliterator27);
        org.junit.Assert.assertNotNull(charSequenceStream28);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor19 = charSequenceList2.iterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence21 = charSequenceList2.remove((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceItor19);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        charSequenceList2.clear();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.Object obj26 = charSequenceList24.clone();
        int int27 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList24);
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor29 = charSequenceList2.listIterator(0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence32 = charSequenceList2.set((int) (byte) -1, (java.lang.CharSequence) "[hi!, [hi!, ]]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(charSequenceItor29);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.pop();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence15 = charSequenceList2.set((int) (short) 0, (java.lang.CharSequence) "");
        java.lang.CharSequence charSequence16 = charSequenceList2.removeLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "hi!" + "'", charSequence15, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator29 = charSequenceList27.spliterator();
        java.lang.CharSequence charSequence30 = charSequenceList27.getLast();
        java.lang.CharSequence charSequence31 = charSequenceList27.removeLast();
        boolean boolean32 = charSequenceList17.remove((java.lang.Object) charSequenceList27);
        int int33 = charSequenceList17.size();
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = charSequenceList36.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence charSequence41 = charSequenceList36.peek();
        java.lang.CharSequence charSequence42 = charSequenceList36.pollFirst();
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator47 = charSequenceList45.spliterator();
        boolean boolean48 = charSequenceList45.isEmpty();
        charSequenceList45.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean52 = charSequenceList45.offerLast((java.lang.CharSequence) "");
        charSequenceList45.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean55 = charSequenceList36.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor56 = charSequenceList45.descendingIterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream57 = charSequenceList45.stream();
        int int58 = charSequenceList17.lastIndexOf((java.lang.Object) charSequenceList45);
        boolean boolean59 = charSequenceList17.isEmpty();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator29);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "" + "'", charSequence30, "");
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "" + "'", charSequence31, "");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(charSequenceItor56);
        org.junit.Assert.assertNotNull(charSequenceStream57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        charSequenceList2.addFirst((java.lang.CharSequence) "[hi!, ]");
        charSequenceList2.clear();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceList15.spliterator();
        java.util.LinkedList<java.lang.Comparable<java.lang.String>> strComparableList18 = new java.util.LinkedList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = charSequenceList15.contains((java.lang.Object) strComparableList18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = charSequenceList22.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        int int32 = charSequenceList29.size();
        boolean boolean33 = charSequenceList22.contains((java.lang.Object) charSequenceList29);
        java.lang.CharSequence charSequence34 = charSequenceList22.element();
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        java.lang.CharSequence[] charSequenceArray43 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList44 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList44, charSequenceArray43);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator46 = charSequenceList44.spliterator();
        int int47 = charSequenceList44.size();
        boolean boolean48 = charSequenceList37.contains((java.lang.Object) charSequenceList44);
        java.lang.CharSequence charSequence49 = charSequenceList37.element();
        java.lang.CharSequence[] charSequenceArray51 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52, charSequenceArray51);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator54 = charSequenceList52.spliterator();
        boolean boolean55 = charSequenceList52.isEmpty();
        charSequenceList52.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str58 = charSequenceList52.toString();
        boolean boolean59 = charSequenceList37.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        boolean boolean61 = charSequenceList52.offer((java.lang.CharSequence) "");
        charSequenceList52.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean66 = charSequenceList52.add((java.lang.CharSequence) "");
        int int67 = charSequenceList22.lastIndexOf((java.lang.Object) boolean66);
        boolean boolean68 = charSequenceList15.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList71 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList71, charSequenceArray70);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList74 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean75 = charSequenceList71.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList74);
        java.lang.CharSequence charSequence76 = charSequenceList71.peek();
        java.lang.CharSequence charSequence77 = charSequenceList71.pollFirst();
        charSequenceList71.addFirst((java.lang.CharSequence) "hi!");
        int int80 = charSequenceList22.indexOf((java.lang.Object) charSequenceList71);
        boolean boolean81 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        boolean boolean83 = charSequenceList2.offer((java.lang.CharSequence) "[[hi!, ]]");
        boolean boolean84 = charSequenceList2.isEmpty();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "hi!" + "'", charSequence49, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[hi!, ]" + "'", str58, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + charSequence76 + "' != '" + "hi!" + "'", charSequence76, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence77 + "' != '" + "hi!" + "'", charSequence77, "hi!");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence25 = null;
        charSequenceList2.addFirst(charSequence25);
        java.lang.CharSequence charSequence27 = charSequenceList2.element();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(charSequence27);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        java.lang.CharSequence charSequence27 = charSequenceList21.pollFirst();
        charSequenceList21.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = charSequenceList32.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        java.lang.Object obj37 = null;
        boolean boolean38 = charSequenceList32.equals(obj37);
        java.lang.CharSequence[] charSequenceArray40 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList41 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList41, charSequenceArray40);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator43 = charSequenceList41.spliterator();
        boolean boolean44 = charSequenceList32.removeLastOccurrence((java.lang.Object) charSequenceList41);
        charSequenceList32.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean47 = charSequenceList21.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        boolean boolean48 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream49 = charSequenceList2.stream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charSequenceArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(charSequenceStream49);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        charSequenceList2.clear();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.Object obj26 = charSequenceList24.clone();
        int int27 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList24);
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor29 = charSequenceList2.listIterator(0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.CharSequence> charSequenceList32 = charSequenceList2.subList(2, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(charSequenceItor29);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        java.util.LinkedList<java.util.AbstractSequentialList<java.lang.CharSequence>> charSequenceListList0 = new java.util.LinkedList<java.util.AbstractSequentialList<java.lang.CharSequence>>();
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceList2.parallelStream();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator21 = charSequenceList19.spliterator();
        int int22 = charSequenceList19.size();
        boolean boolean23 = charSequenceList12.contains((java.lang.Object) charSequenceList19);
        boolean boolean24 = charSequenceList12.isEmpty();
        java.lang.Object obj25 = charSequenceList12.clone();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream26 = charSequenceList12.parallelStream();
        boolean boolean27 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator32 = charSequenceList30.spliterator();
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = charSequenceList35.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42, charSequenceArray41);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator44 = charSequenceList42.spliterator();
        int int45 = charSequenceList42.size();
        boolean boolean46 = charSequenceList35.contains((java.lang.Object) charSequenceList42);
        java.lang.CharSequence charSequence47 = charSequenceList35.element();
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList50 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50, charSequenceArray49);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator52 = charSequenceList50.spliterator();
        boolean boolean53 = charSequenceList50.isEmpty();
        charSequenceList50.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str56 = charSequenceList50.toString();
        boolean boolean57 = charSequenceList35.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50);
        boolean boolean59 = charSequenceList50.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor60 = charSequenceList50.descendingIterator();
        boolean boolean61 = charSequenceList30.removeLastOccurrence((java.lang.Object) charSequenceItor60);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator62 = charSequenceList30.spliterator();
        java.lang.CharSequence charSequence63 = charSequenceList30.getLast();
        java.lang.CharSequence[] charSequenceArray65 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList66 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList66, charSequenceArray65);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator68 = charSequenceList66.spliterator();
        boolean boolean69 = charSequenceList66.isEmpty();
        java.lang.CharSequence charSequence70 = charSequenceList66.removeLast();
        java.lang.CharSequence charSequence71 = charSequenceList66.pollFirst();
        boolean boolean72 = charSequenceList30.contains((java.lang.Object) charSequence71);
        java.lang.CharSequence charSequence73 = charSequenceList30.element();
        boolean boolean74 = charSequenceList12.contains((java.lang.Object) charSequenceList30);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.CharSequence> charSequenceItor76 = charSequenceList12.listIterator((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator32);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "hi!" + "'", charSequence47, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[hi!, ]" + "'", str56, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(charSequenceItor60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator62);
        org.junit.Assert.assertEquals("'" + charSequence63 + "' != '" + "" + "'", charSequence63, "");
        org.junit.Assert.assertNotNull(charSequenceArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + charSequence70 + "' != '" + "" + "'", charSequence70, "");
        org.junit.Assert.assertNull(charSequence71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + charSequence73 + "' != '" + "" + "'", charSequence73, "");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        java.lang.Object obj25 = null;
        boolean boolean26 = charSequenceList20.equals(obj25);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        boolean boolean32 = charSequenceList20.removeLastOccurrence((java.lang.Object) charSequenceList29);
        boolean boolean33 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = charSequenceList36.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.Object obj41 = null;
        boolean boolean42 = charSequenceList36.equals(obj41);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean49 = charSequenceList45.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList48);
        java.lang.CharSequence charSequence50 = charSequenceList45.peek();
        java.lang.CharSequence charSequence51 = charSequenceList45.pollFirst();
        boolean boolean52 = charSequenceList36.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        java.lang.CharSequence charSequence53 = charSequenceList36.peek();
        int int54 = charSequenceList2.indexOf((java.lang.Object) charSequenceList36);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence55 = charSequenceList2.getFirst();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "hi!" + "'", charSequence50, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "hi!" + "'", charSequence51, "hi!");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "hi!" + "'", charSequence53, "hi!");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.function.UnaryOperator<java.lang.CharSequence> charSequenceUnaryOperator10 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList2.replaceAll(charSequenceUnaryOperator10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence charSequence9 = charSequenceList2.removeFirst();
        java.lang.CharSequence charSequence10 = charSequenceList2.element();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "" + "'", charSequence10, "");
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence9 = charSequenceList2.get((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        charSequenceList17.addLast((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor27 = charSequenceList17.descendingIterator();
        boolean boolean29 = charSequenceList17.offerFirst((java.lang.CharSequence) "");
        charSequenceList17.add(0, (java.lang.CharSequence) "[hi!, [hi!, ]]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceItor27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean18 = charSequenceList15.isEmpty();
        charSequenceList15.addFirst((java.lang.CharSequence) "[hi!]");
        charSequenceList15.addFirst((java.lang.CharSequence) "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean18 = charSequenceList15.isEmpty();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        boolean boolean28 = charSequenceList21.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        boolean boolean36 = charSequenceList21.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = charSequenceList39.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        java.lang.CharSequence charSequence44 = charSequenceList39.peek();
        boolean boolean46 = charSequenceList39.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = charSequenceList49.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        boolean boolean54 = charSequenceList39.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        boolean boolean55 = charSequenceList52.isEmpty();
        boolean boolean56 = charSequenceList34.equals((java.lang.Object) charSequenceList52);
        boolean boolean57 = charSequenceList15.contains((java.lang.Object) charSequenceList34);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence58 = charSequenceList15.removeLast();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "hi!" + "'", charSequence44, "hi!");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList2.spliterator();
        boolean boolean12 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        charSequenceList2.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceList18.spliterator();
        boolean boolean21 = charSequenceList18.isEmpty();
        boolean boolean22 = charSequenceList2.equals((java.lang.Object) charSequenceList18);
        java.lang.CharSequence charSequence23 = charSequenceList2.peek();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "hi!" + "'", charSequence23, "hi!");
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        java.lang.CharSequence charSequence25 = charSequenceList20.peek();
        boolean boolean27 = charSequenceList20.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        boolean boolean35 = charSequenceList20.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        boolean boolean36 = charSequenceList33.isEmpty();
        boolean boolean37 = charSequenceList15.equals((java.lang.Object) charSequenceList33);
        java.lang.CharSequence charSequence38 = charSequenceList15.pollFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(charSequence38);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean18 = charSequenceList15.isEmpty();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        boolean boolean28 = charSequenceList21.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        boolean boolean36 = charSequenceList21.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = charSequenceList39.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        java.lang.CharSequence charSequence44 = charSequenceList39.peek();
        boolean boolean46 = charSequenceList39.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = charSequenceList49.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        boolean boolean54 = charSequenceList39.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        boolean boolean55 = charSequenceList52.isEmpty();
        boolean boolean56 = charSequenceList34.equals((java.lang.Object) charSequenceList52);
        boolean boolean57 = charSequenceList15.contains((java.lang.Object) charSequenceList34);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence58 = charSequenceList34.getLast();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "hi!" + "'", charSequence44, "hi!");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceList11.spliterator();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor16 = charSequenceList11.iterator();
        java.lang.CharSequence charSequence17 = charSequenceList11.peek();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertNotNull(charSequenceItor16);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList2.spliterator();
        boolean boolean12 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence13 = charSequenceList2.element();
        java.lang.CharSequence charSequence14 = charSequenceList2.peekLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor15 = charSequenceList2.listIterator();
        java.lang.CharSequence charSequence16 = charSequenceList2.removeFirst();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        int int25 = charSequenceList19.lastIndexOf((java.lang.Object) (-1L));
        int int26 = charSequenceList19.size();
        boolean boolean27 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList19);
        java.lang.CharSequence charSequence28 = charSequenceList2.removeLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "hi!" + "'", charSequence28, "hi!");
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence charSequence9 = charSequenceList2.peek();
        java.lang.CharSequence charSequence10 = charSequenceList2.peekLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "" + "'", charSequence10, "");
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence charSequence9 = charSequenceList2.removeFirst();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream10 = charSequenceList2.parallelStream();
        java.util.Collection<java.lang.CharSequence> charSequenceCollection12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = charSequenceList2.addAll((int) (byte) 100, charSequenceCollection12);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream10);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        charSequenceList2.addFirst((java.lang.CharSequence) "[hi!, [hi!, ]]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        java.util.LinkedList<java.lang.CharSequence> charSequenceList0 = new java.util.LinkedList<java.lang.CharSequence>();
        java.util.function.UnaryOperator<java.lang.CharSequence> charSequenceUnaryOperator1 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList0.replaceAll(charSequenceUnaryOperator1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.String str10 = charSequenceList2.toString();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[hi!]" + "'", str10, "[hi!]");
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        int int27 = charSequenceList2.indexOf((java.lang.Object) charSequence26);
        int int28 = charSequenceList2.size();
        java.lang.CharSequence charSequence29 = charSequenceList2.pop();
        charSequenceList2.push((java.lang.CharSequence) "[hi!]");
        charSequenceList2.addFirst((java.lang.CharSequence) "[hi!]");
        charSequenceList2.addFirst((java.lang.CharSequence) "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList13.equals(obj18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        boolean boolean25 = charSequenceList13.removeLastOccurrence((java.lang.Object) charSequenceList22);
        charSequenceList13.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean28 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        java.util.LinkedList<java.io.Serializable> serializableList29 = new java.util.LinkedList<java.io.Serializable>();
        boolean boolean30 = charSequenceList2.equals((java.lang.Object) serializableList29);
        java.lang.CharSequence charSequence32 = charSequenceList2.get(0);
        boolean boolean34 = charSequenceList2.offerFirst((java.lang.CharSequence) "[]");
        java.lang.CharSequence charSequence35 = charSequenceList2.poll();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "hi!" + "'", charSequence32, "hi!");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "[]" + "'", charSequence35, "[]");
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence charSequence10 = charSequenceList2.removeFirst();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence12 = charSequenceList2.remove((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList8 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList8.spliterator();
        int int11 = charSequenceList8.size();
        boolean boolean12 = charSequenceList2.contains((java.lang.Object) charSequenceList8);
        java.lang.CharSequence charSequence13 = charSequenceList8.removeLast();
        java.lang.CharSequence charSequence14 = null;
        boolean boolean15 = charSequenceList8.offer(charSequence14);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence22 = charSequenceList17.peek();
        boolean boolean24 = charSequenceList17.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean25 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence26 = charSequenceList2.pop();
        java.lang.CharSequence charSequence27 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator32 = charSequenceList30.spliterator();
        boolean boolean33 = charSequenceList30.isEmpty();
        charSequenceList30.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str36 = charSequenceList30.toString();
        java.lang.Object obj37 = null;
        boolean boolean38 = charSequenceList30.removeLastOccurrence(obj37);
        boolean boolean40 = charSequenceList30.remove((java.lang.Object) (short) 10);
        java.lang.CharSequence charSequence41 = charSequenceList30.poll();
        boolean boolean42 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequence41);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNull(charSequence27);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!, ]" + "'", str36, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        charSequenceList2.clear();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.Object obj26 = charSequenceList24.clone();
        int int27 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList24);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator39 = charSequenceList37.spliterator();
        int int40 = charSequenceList37.size();
        boolean boolean41 = charSequenceList30.contains((java.lang.Object) charSequenceList37);
        java.lang.CharSequence charSequence42 = charSequenceList30.element();
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator47 = charSequenceList45.spliterator();
        boolean boolean48 = charSequenceList45.isEmpty();
        charSequenceList45.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str51 = charSequenceList45.toString();
        boolean boolean52 = charSequenceList30.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        boolean boolean54 = charSequenceList45.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor55 = charSequenceList45.descendingIterator();
        charSequenceList45.clear();
        boolean boolean57 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList2.add(10, (java.lang.CharSequence) "[]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[hi!, ]" + "'", str51, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charSequenceItor55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence9 = charSequenceList2.removeLast();
        java.lang.CharSequence charSequence10 = charSequenceList2.peekLast();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceList20.spliterator();
        int int23 = charSequenceList20.size();
        boolean boolean24 = charSequenceList13.contains((java.lang.Object) charSequenceList20);
        java.lang.CharSequence charSequence25 = charSequenceList13.element();
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceList28.spliterator();
        boolean boolean31 = charSequenceList28.isEmpty();
        charSequenceList28.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str34 = charSequenceList28.toString();
        boolean boolean35 = charSequenceList13.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream36 = charSequenceList28.stream();
        boolean boolean37 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList28.add((int) (byte) 100, (java.lang.CharSequence) "[hi!, [hi!, ]]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertNull(charSequence10);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[hi!, ]" + "'", str34, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceStream36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence charSequence9 = charSequenceList2.removeFirst();
        boolean boolean11 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = charSequenceList14.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceList21.spliterator();
        int int24 = charSequenceList21.size();
        boolean boolean25 = charSequenceList14.contains((java.lang.Object) charSequenceList21);
        java.lang.CharSequence charSequence26 = charSequenceList14.element();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        boolean boolean32 = charSequenceList29.isEmpty();
        charSequenceList29.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str35 = charSequenceList29.toString();
        boolean boolean36 = charSequenceList14.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        boolean boolean38 = charSequenceList29.offer((java.lang.CharSequence) "");
        charSequenceList29.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList29.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        charSequenceList29.addLast((java.lang.CharSequence) "hi!");
        boolean boolean47 = charSequenceList2.removeFirstOccurrence((java.lang.Object) "hi!");
        boolean boolean49 = charSequenceList2.offerLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence50 = charSequenceList2.pollFirst();
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList53 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53, charSequenceArray52);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = charSequenceList53.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList56);
        java.lang.CharSequence charSequence58 = charSequenceList53.peek();
        java.lang.CharSequence charSequence59 = charSequenceList53.pollFirst();
        charSequenceList53.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence62 = charSequenceList53.pop();
        java.lang.Object[] objArray63 = charSequenceList53.toArray();
        boolean boolean64 = charSequenceList2.contains((java.lang.Object) charSequenceList53);
        charSequenceList2.addLast((java.lang.CharSequence) "");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[hi!, ]" + "'", str35, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "" + "'", charSequence50, "");
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + charSequence58 + "' != '" + "hi!" + "'", charSequence58, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence59 + "' != '" + "hi!" + "'", charSequence59, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence62 + "' != '" + "hi!" + "'", charSequence62, "hi!");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList8 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList8.spliterator();
        int int11 = charSequenceList8.size();
        boolean boolean12 = charSequenceList2.contains((java.lang.Object) charSequenceList8);
        int int13 = charSequenceList2.size();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = charSequenceList16.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence charSequence21 = charSequenceList16.peek();
        boolean boolean23 = charSequenceList16.add((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence26 = charSequenceList16.set(0, (java.lang.CharSequence) "[hi!]");
        boolean boolean27 = charSequenceList2.remove((java.lang.Object) charSequenceList16);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "hi!" + "'", charSequence21, "hi!");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        charSequenceList2.clear();
        charSequenceList2.push((java.lang.CharSequence) "[hi!]");
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList2.add((int) 'a', (java.lang.CharSequence) "[]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = charSequenceList9.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence charSequence14 = charSequenceList9.peek();
        boolean boolean16 = charSequenceList9.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        boolean boolean24 = charSequenceList9.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence charSequence25 = charSequenceList9.pop();
        boolean boolean26 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = charSequenceList29.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList29.equals(obj34);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        java.lang.CharSequence charSequence37 = charSequenceList29.peek();
        java.lang.CharSequence charSequence38 = charSequenceList29.remove();
        boolean boolean39 = charSequenceList9.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        java.lang.CharSequence charSequence40 = charSequenceList9.peekLast();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor41 = charSequenceList9.iterator();
        java.lang.CharSequence[] charSequenceArray43 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList44 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList44, charSequenceArray43);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = charSequenceList44.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList47);
        java.lang.CharSequence[] charSequenceArray50 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList51 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList51, charSequenceArray50);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator53 = charSequenceList51.spliterator();
        int int54 = charSequenceList51.size();
        boolean boolean55 = charSequenceList44.contains((java.lang.Object) charSequenceList51);
        java.lang.CharSequence charSequence56 = charSequenceList44.element();
        java.lang.CharSequence[] charSequenceArray58 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList59 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList59, charSequenceArray58);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList62 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean63 = charSequenceList59.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList62);
        java.lang.CharSequence[] charSequenceArray65 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList66 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList66, charSequenceArray65);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator68 = charSequenceList66.spliterator();
        int int69 = charSequenceList66.size();
        boolean boolean70 = charSequenceList59.contains((java.lang.Object) charSequenceList66);
        java.lang.CharSequence charSequence71 = charSequenceList59.element();
        java.lang.CharSequence[] charSequenceArray73 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList74 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList74, charSequenceArray73);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator76 = charSequenceList74.spliterator();
        boolean boolean77 = charSequenceList74.isEmpty();
        charSequenceList74.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str80 = charSequenceList74.toString();
        boolean boolean81 = charSequenceList59.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList74);
        boolean boolean83 = charSequenceList74.offer((java.lang.CharSequence) "");
        charSequenceList74.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean88 = charSequenceList74.add((java.lang.CharSequence) "");
        int int89 = charSequenceList44.lastIndexOf((java.lang.Object) boolean88);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator90 = charSequenceList44.spliterator();
        boolean boolean91 = charSequenceList9.equals((java.lang.Object) charSequenceList44);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "hi!" + "'", charSequence37, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "hi!" + "'", charSequence38, "hi!");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(charSequence40);
        org.junit.Assert.assertNotNull(charSequenceItor41);
        org.junit.Assert.assertNotNull(charSequenceArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(charSequenceArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + charSequence56 + "' != '" + "hi!" + "'", charSequence56, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(charSequenceArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + charSequence71 + "' != '" + "hi!" + "'", charSequence71, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[hi!, ]" + "'", str80, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNotNull(charSequenceSpliterator90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.pop();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean14 = charSequenceList2.offer((java.lang.CharSequence) "[hi!, ]");
        boolean boolean16 = charSequenceList2.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence17 = charSequenceList2.getFirst();
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        int int26 = charSequenceList20.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence27 = charSequenceList20.removeLast();
        java.lang.CharSequence charSequence28 = charSequenceList20.peekLast();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceList38.spliterator();
        int int41 = charSequenceList38.size();
        boolean boolean42 = charSequenceList31.contains((java.lang.Object) charSequenceList38);
        java.lang.CharSequence charSequence43 = charSequenceList31.element();
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceList46.spliterator();
        boolean boolean49 = charSequenceList46.isEmpty();
        charSequenceList46.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str52 = charSequenceList46.toString();
        boolean boolean53 = charSequenceList31.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceList46.stream();
        boolean boolean55 = charSequenceList20.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        boolean boolean56 = charSequenceList2.contains((java.lang.Object) charSequenceList20);
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor57 = charSequenceList20.listIterator();
        java.lang.Object obj58 = charSequenceList20.clone();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "[hi!, ]" + "'", charSequence17, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "hi!" + "'", charSequence43, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[hi!, ]" + "'", str52, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charSequenceItor57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "[hi!, ]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "[hi!, ]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "[hi!, ]");
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        java.lang.CharSequence charSequence9 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence charSequence17 = charSequenceList12.peek();
        boolean boolean19 = charSequenceList12.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = charSequenceList22.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        boolean boolean27 = charSequenceList12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        charSequenceList12.clear();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.Object obj36 = charSequenceList34.clone();
        int int37 = charSequenceList12.lastIndexOf((java.lang.Object) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = charSequenceList40.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceList47.spliterator();
        int int50 = charSequenceList47.size();
        boolean boolean51 = charSequenceList40.contains((java.lang.Object) charSequenceList47);
        java.lang.CharSequence charSequence52 = charSequenceList40.element();
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList55 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55, charSequenceArray54);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator57 = charSequenceList55.spliterator();
        boolean boolean58 = charSequenceList55.isEmpty();
        charSequenceList55.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str61 = charSequenceList55.toString();
        boolean boolean62 = charSequenceList40.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55);
        boolean boolean64 = charSequenceList55.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor65 = charSequenceList55.descendingIterator();
        charSequenceList55.clear();
        boolean boolean67 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55);
        boolean boolean68 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor69 = charSequenceList12.iterator();
        java.lang.CharSequence charSequence70 = charSequenceList12.pollLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream71 = charSequenceList12.stream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "[]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "hi!" + "'", charSequence52, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[hi!, ]" + "'", str61, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(charSequenceItor65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(charSequenceItor69);
        org.junit.Assert.assertNull(charSequence70);
        org.junit.Assert.assertNotNull(charSequenceStream71);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence11 = charSequenceList2.pop();
        java.lang.Object[] objArray12 = charSequenceList2.toArray();
        java.lang.CharSequence charSequence13 = charSequenceList2.peek();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "hi!" + "'", charSequence11, "hi!");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNull(charSequence13);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList7 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList10 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean11 = charSequenceList7.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList10);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceList14.spliterator();
        int int17 = charSequenceList14.size();
        boolean boolean18 = charSequenceList7.contains((java.lang.Object) charSequenceList14);
        java.lang.CharSequence charSequence19 = charSequenceList7.element();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        boolean boolean25 = charSequenceList22.isEmpty();
        charSequenceList22.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str28 = charSequenceList22.toString();
        boolean boolean29 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        boolean boolean31 = charSequenceList22.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor32 = charSequenceList22.descendingIterator();
        boolean boolean33 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceItor32);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator34 = charSequenceList2.spliterator();
        java.lang.CharSequence charSequence35 = charSequenceList2.getLast();
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceList38.spliterator();
        boolean boolean41 = charSequenceList38.isEmpty();
        java.lang.CharSequence charSequence42 = charSequenceList38.removeLast();
        java.lang.CharSequence charSequence43 = charSequenceList38.pollFirst();
        boolean boolean44 = charSequenceList2.contains((java.lang.Object) charSequence43);
        java.util.function.UnaryOperator<java.lang.CharSequence> charSequenceUnaryOperator45 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList2.replaceAll(charSequenceUnaryOperator45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "hi!" + "'", charSequence19, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[hi!, ]" + "'", str28, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceItor32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator34);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "" + "'", charSequence35, "");
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "" + "'", charSequence42, "");
        org.junit.Assert.assertNull(charSequence43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean18 = charSequenceList15.isEmpty();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        boolean boolean28 = charSequenceList21.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        boolean boolean36 = charSequenceList21.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = charSequenceList39.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        java.lang.CharSequence charSequence44 = charSequenceList39.peek();
        boolean boolean46 = charSequenceList39.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = charSequenceList49.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        boolean boolean54 = charSequenceList39.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        boolean boolean55 = charSequenceList52.isEmpty();
        boolean boolean56 = charSequenceList34.equals((java.lang.Object) charSequenceList52);
        boolean boolean57 = charSequenceList15.contains((java.lang.Object) charSequenceList34);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence58 = charSequenceList15.getFirst();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "hi!" + "'", charSequence44, "hi!");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList7 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList10 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean11 = charSequenceList7.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList10);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceList14.spliterator();
        int int17 = charSequenceList14.size();
        boolean boolean18 = charSequenceList7.contains((java.lang.Object) charSequenceList14);
        java.lang.CharSequence charSequence19 = charSequenceList7.element();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        boolean boolean25 = charSequenceList22.isEmpty();
        charSequenceList22.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str28 = charSequenceList22.toString();
        boolean boolean29 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        boolean boolean31 = charSequenceList22.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor32 = charSequenceList22.descendingIterator();
        boolean boolean33 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceItor32);
        java.lang.CharSequence charSequence34 = charSequenceList2.removeLast();
        java.util.function.UnaryOperator<java.lang.CharSequence> charSequenceUnaryOperator35 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList2.replaceAll(charSequenceUnaryOperator35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "hi!" + "'", charSequence19, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[hi!, ]" + "'", str28, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceItor32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence22 = charSequenceList17.peek();
        boolean boolean24 = charSequenceList17.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean25 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence26 = charSequenceList2.pop();
        java.lang.CharSequence charSequence27 = charSequenceList2.peekFirst();
        java.lang.CharSequence charSequence28 = charSequenceList2.peekFirst();
        java.lang.CharSequence charSequence29 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator34 = charSequenceList32.spliterator();
        boolean boolean35 = charSequenceList32.isEmpty();
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceList38.spliterator();
        boolean boolean41 = charSequenceList38.isEmpty();
        charSequenceList38.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean45 = charSequenceList38.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence46 = charSequenceList38.pop();
        charSequenceList38.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean50 = charSequenceList38.offer((java.lang.CharSequence) "[hi!, ]");
        boolean boolean52 = charSequenceList38.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence53 = charSequenceList38.getFirst();
        java.lang.CharSequence[] charSequenceArray55 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56, charSequenceArray55);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList59 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean60 = charSequenceList56.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList59);
        int int62 = charSequenceList56.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence63 = charSequenceList56.removeLast();
        java.lang.CharSequence charSequence64 = charSequenceList56.peekLast();
        java.lang.CharSequence[] charSequenceArray66 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList67 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList67, charSequenceArray66);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList70 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean71 = charSequenceList67.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList70);
        java.lang.CharSequence[] charSequenceArray73 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList74 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList74, charSequenceArray73);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator76 = charSequenceList74.spliterator();
        int int77 = charSequenceList74.size();
        boolean boolean78 = charSequenceList67.contains((java.lang.Object) charSequenceList74);
        java.lang.CharSequence charSequence79 = charSequenceList67.element();
        java.lang.CharSequence[] charSequenceArray81 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList82 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList82, charSequenceArray81);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator84 = charSequenceList82.spliterator();
        boolean boolean85 = charSequenceList82.isEmpty();
        charSequenceList82.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str88 = charSequenceList82.toString();
        boolean boolean89 = charSequenceList67.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList82);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream90 = charSequenceList82.stream();
        boolean boolean91 = charSequenceList56.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList82);
        java.lang.CharSequence charSequence92 = charSequenceList56.remove();
        boolean boolean93 = charSequenceList38.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56);
        int int94 = charSequenceList32.lastIndexOf((java.lang.Object) charSequenceList56);
        boolean boolean95 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.CharSequence charSequence96 = charSequenceList32.poll();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNull(charSequence27);
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNull(charSequence29);
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + charSequence46 + "' != '" + "hi!" + "'", charSequence46, "hi!");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "[hi!, ]" + "'", charSequence53, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence63 + "' != '" + "hi!" + "'", charSequence63, "hi!");
        org.junit.Assert.assertNull(charSequence64);
        org.junit.Assert.assertNotNull(charSequenceArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(charSequenceArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + charSequence79 + "' != '" + "hi!" + "'", charSequence79, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[hi!, ]" + "'", str88, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(charSequenceStream90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertEquals("'" + charSequence92 + "' != '" + "hi!" + "'", charSequence92, "hi!");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertEquals("'" + charSequence96 + "' != '" + "" + "'", charSequence96, "");
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence charSequence10 = charSequenceList2.poll();
        java.lang.Object[] objArray11 = charSequenceList2.toArray();
        charSequenceList2.push((java.lang.CharSequence) "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        java.lang.CharSequence charSequence10 = charSequenceList9.peekLast();
        int int11 = charSequenceList9.size();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence14 = charSequenceList9.set((int) 'a', (java.lang.CharSequence) "[]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        java.util.LinkedList<java.lang.Object> objList0 = new java.util.LinkedList<java.lang.Object>();
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        charSequenceList5.push((java.lang.CharSequence) "");
        boolean boolean10 = charSequenceList5.offerLast((java.lang.CharSequence) "[hi!]");
        java.lang.CharSequence charSequence11 = charSequenceList5.getFirst();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator12 = charSequenceList5.spliterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "" + "'", charSequence11, "");
        org.junit.Assert.assertNotNull(charSequenceSpliterator12);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence22 = charSequenceList17.peek();
        boolean boolean24 = charSequenceList17.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean25 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence26 = charSequenceList2.pop();
        java.lang.CharSequence charSequence27 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.Object obj35 = charSequenceList33.clone();
        int int36 = charSequenceList2.indexOf((java.lang.Object) charSequenceList33);
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList2.add((int) '#', (java.lang.CharSequence) "[hi!]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNull(charSequence27);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "[]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        java.util.LinkedList<java.lang.Comparable<java.lang.String>> strComparableList5 = new java.util.LinkedList<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = charSequenceList2.contains((java.lang.Object) strComparableList5);
        charSequenceList2.addFirst((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence9 = charSequenceList2.peek();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor10 = charSequenceList2.iterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "" + "'", charSequence9, "");
        org.junit.Assert.assertNotNull(charSequenceItor10);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        charSequenceList17.addLast((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        java.util.LinkedList<java.lang.Comparable<java.lang.String>> strComparableList32 = new java.util.LinkedList<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = charSequenceList29.contains((java.lang.Object) strComparableList32);
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = charSequenceList36.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList43, charSequenceArray42);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator45 = charSequenceList43.spliterator();
        int int46 = charSequenceList43.size();
        boolean boolean47 = charSequenceList36.contains((java.lang.Object) charSequenceList43);
        java.lang.CharSequence charSequence48 = charSequenceList36.element();
        java.lang.CharSequence[] charSequenceArray50 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList51 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList51, charSequenceArray50);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList54 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean55 = charSequenceList51.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList54);
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList58 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58, charSequenceArray57);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator60 = charSequenceList58.spliterator();
        int int61 = charSequenceList58.size();
        boolean boolean62 = charSequenceList51.contains((java.lang.Object) charSequenceList58);
        java.lang.CharSequence charSequence63 = charSequenceList51.element();
        java.lang.CharSequence[] charSequenceArray65 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList66 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList66, charSequenceArray65);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator68 = charSequenceList66.spliterator();
        boolean boolean69 = charSequenceList66.isEmpty();
        charSequenceList66.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str72 = charSequenceList66.toString();
        boolean boolean73 = charSequenceList51.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList66);
        boolean boolean75 = charSequenceList66.offer((java.lang.CharSequence) "");
        charSequenceList66.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean80 = charSequenceList66.add((java.lang.CharSequence) "");
        int int81 = charSequenceList36.lastIndexOf((java.lang.Object) boolean80);
        boolean boolean82 = charSequenceList29.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36);
        java.lang.CharSequence[] charSequenceArray84 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList85 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList85, charSequenceArray84);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList88 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean89 = charSequenceList85.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList88);
        java.lang.CharSequence charSequence90 = charSequenceList85.peek();
        java.lang.CharSequence charSequence91 = charSequenceList85.pollFirst();
        charSequenceList85.addFirst((java.lang.CharSequence) "hi!");
        int int94 = charSequenceList36.indexOf((java.lang.Object) charSequenceList85);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream95 = charSequenceList36.stream();
        boolean boolean96 = charSequenceList17.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36);
        java.lang.CharSequence charSequence97 = null;
        boolean boolean98 = charSequenceList17.offerLast(charSequence97);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "hi!" + "'", charSequence48, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + charSequence63 + "' != '" + "hi!" + "'", charSequence63, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[hi!, ]" + "'", str72, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(charSequenceArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + charSequence90 + "' != '" + "hi!" + "'", charSequence90, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence91 + "' != '" + "hi!" + "'", charSequence91, "hi!");
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertNotNull(charSequenceStream95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.String str15 = charSequenceList2.toString();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[hi!]" + "'", str15, "[hi!]");
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence22 = charSequenceList17.peek();
        boolean boolean24 = charSequenceList17.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean25 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        charSequenceList17.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence27 = charSequenceList17.removeLast();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        java.util.LinkedList<java.util.Queue<java.lang.CharSequence>> charSequenceQueueList0 = new java.util.LinkedList<java.util.Queue<java.lang.CharSequence>>();
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        java.util.LinkedList<java.util.LinkedList<java.lang.CharSequence>> charSequenceListList0 = new java.util.LinkedList<java.util.LinkedList<java.lang.CharSequence>>();
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        charSequenceList2.clear();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.Object obj26 = charSequenceList24.clone();
        int int27 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList24);
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor29 = charSequenceList2.listIterator(0);
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = charSequenceList32.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        java.lang.Object obj37 = null;
        boolean boolean38 = charSequenceList32.equals(obj37);
        java.lang.CharSequence[] charSequenceArray40 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList41 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList41, charSequenceArray40);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList44 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean45 = charSequenceList41.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList44);
        java.lang.CharSequence charSequence46 = charSequenceList41.peek();
        boolean boolean48 = charSequenceList41.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray50 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList51 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList51, charSequenceArray50);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList54 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean55 = charSequenceList51.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList54);
        boolean boolean56 = charSequenceList41.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList54);
        java.lang.CharSequence charSequence57 = charSequenceList54.poll();
        boolean boolean58 = charSequenceList32.remove((java.lang.Object) charSequenceList54);
        boolean boolean59 = charSequenceList2.removeFirstOccurrence((java.lang.Object) boolean58);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(charSequenceItor29);
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charSequenceArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + charSequence46 + "' != '" + "hi!" + "'", charSequence46, "hi!");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(charSequenceArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(charSequence57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        java.util.LinkedList<java.lang.Comparable<java.lang.String>> strComparableList5 = new java.util.LinkedList<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = charSequenceList2.contains((java.lang.Object) strComparableList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = charSequenceList9.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator18 = charSequenceList16.spliterator();
        int int19 = charSequenceList16.size();
        boolean boolean20 = charSequenceList9.contains((java.lang.Object) charSequenceList16);
        java.lang.CharSequence charSequence21 = charSequenceList9.element();
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = charSequenceList24.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceList31.spliterator();
        int int34 = charSequenceList31.size();
        boolean boolean35 = charSequenceList24.contains((java.lang.Object) charSequenceList31);
        java.lang.CharSequence charSequence36 = charSequenceList24.element();
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceList39.spliterator();
        boolean boolean42 = charSequenceList39.isEmpty();
        charSequenceList39.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str45 = charSequenceList39.toString();
        boolean boolean46 = charSequenceList24.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean48 = charSequenceList39.offer((java.lang.CharSequence) "");
        charSequenceList39.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean53 = charSequenceList39.add((java.lang.CharSequence) "");
        int int54 = charSequenceList9.lastIndexOf((java.lang.Object) boolean53);
        boolean boolean55 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.lang.CharSequence charSequence56 = charSequenceList2.removeLast();
        java.lang.Object[] objArray57 = charSequenceList2.toArray();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "hi!" + "'", charSequence21, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "hi!" + "'", charSequence36, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[hi!, ]" + "'", str45, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + charSequence56 + "' != '" + "hi!" + "'", charSequence56, "hi!");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean18 = charSequenceList15.isEmpty();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        boolean boolean28 = charSequenceList21.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        boolean boolean36 = charSequenceList21.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = charSequenceList39.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        java.lang.CharSequence charSequence44 = charSequenceList39.peek();
        boolean boolean46 = charSequenceList39.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = charSequenceList49.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        boolean boolean54 = charSequenceList39.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        boolean boolean55 = charSequenceList52.isEmpty();
        boolean boolean56 = charSequenceList34.equals((java.lang.Object) charSequenceList52);
        boolean boolean57 = charSequenceList15.contains((java.lang.Object) charSequenceList34);
        boolean boolean58 = charSequenceList15.isEmpty();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "hi!" + "'", charSequence44, "hi!");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean18 = charSequenceList15.isEmpty();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream19 = charSequenceList15.stream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceStream19);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList2.spliterator();
        boolean boolean12 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        charSequenceList2.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceList18.spliterator();
        boolean boolean21 = charSequenceList18.isEmpty();
        boolean boolean22 = charSequenceList2.equals((java.lang.Object) charSequenceList18);
        java.lang.CharSequence charSequence24 = charSequenceList2.remove((int) (short) 0);
        java.lang.CharSequence charSequence25 = charSequenceList2.getLast();
        java.lang.CharSequence charSequence26 = charSequenceList2.peekFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "hi!" + "'", charSequence24, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        charSequenceList2.clear();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.Object obj26 = charSequenceList24.clone();
        int int27 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList24);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.Object obj35 = null;
        boolean boolean36 = charSequenceList30.equals(obj35);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        java.lang.CharSequence charSequence38 = charSequenceList30.peek();
        java.lang.CharSequence charSequence39 = charSequenceList30.remove();
        boolean boolean41 = charSequenceList30.add((java.lang.CharSequence) "hi!");
        boolean boolean42 = charSequenceList2.equals((java.lang.Object) charSequenceList30);
        boolean boolean44 = charSequenceList2.offerFirst((java.lang.CharSequence) "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "hi!" + "'", charSequence38, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "hi!" + "'", charSequence39, "hi!");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceList2.parallelStream();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceList18.spliterator();
        int int21 = charSequenceList18.size();
        boolean boolean22 = charSequenceList11.contains((java.lang.Object) charSequenceList18);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = charSequenceList25.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence charSequence30 = charSequenceList25.peek();
        java.lang.CharSequence charSequence31 = charSequenceList25.pollFirst();
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceList34.spliterator();
        boolean boolean37 = charSequenceList34.isEmpty();
        charSequenceList34.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean41 = charSequenceList34.offerLast((java.lang.CharSequence) "");
        charSequenceList34.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean44 = charSequenceList25.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        boolean boolean45 = charSequenceList18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        int int46 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList18);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence47 = charSequenceList2.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "hi!" + "'", charSequence30, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "hi!" + "'", charSequence31, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        charSequenceList2.clear();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.Object obj26 = charSequenceList24.clone();
        int int27 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList24);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence28 = charSequenceList2.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        java.util.LinkedList<java.lang.CharSequence> charSequenceList0 = new java.util.LinkedList<java.lang.CharSequence>();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor1 = charSequenceList0.descendingIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence2 = charSequenceList0.getFirst();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceItor1);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList2.spliterator();
        boolean boolean12 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence13 = charSequenceList2.element();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceList2.stream();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.CharSequence> charSequenceItor16 = charSequenceList2.listIterator((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream14);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        int int9 = charSequenceList2.size();
        java.lang.CharSequence charSequence10 = charSequenceList2.removeLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence9 = charSequenceList2.removeLast();
        java.lang.CharSequence charSequence10 = charSequenceList2.peekLast();
        int int11 = charSequenceList2.size();
        java.lang.CharSequence charSequence12 = charSequenceList2.pollFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertNull(charSequence10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(charSequence12);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList2.removeLastOccurrence(obj9);
        boolean boolean12 = charSequenceList2.remove((java.lang.Object) (short) 10);
        java.lang.CharSequence charSequence13 = charSequenceList2.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceList2.stream();
        java.lang.CharSequence charSequence15 = charSequenceList2.remove();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "" + "'", charSequence15, "");
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceList2.stream();
        java.lang.CharSequence charSequence16 = null;
        charSequenceList2.add(0, charSequence16);
        java.lang.CharSequence charSequence18 = charSequenceList2.removeFirst();
        boolean boolean19 = charSequenceList2.isEmpty();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertNull(charSequence18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList11.isEmpty();
        charSequenceList11.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean18 = charSequenceList11.offerLast((java.lang.CharSequence) "");
        charSequenceList11.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean21 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence charSequence22 = charSequenceList11.getFirst();
        java.lang.CharSequence charSequence23 = charSequenceList11.peek();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "[hi!, ]" + "'", charSequence22, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "[hi!, ]" + "'", charSequence23, "[hi!, ]");
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        java.lang.CharSequence charSequence6 = charSequenceList2.remove();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        boolean boolean12 = charSequenceList9.isEmpty();
        charSequenceList9.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean16 = charSequenceList9.offerLast((java.lang.CharSequence) "");
        charSequenceList9.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence19 = charSequenceList9.removeLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor20 = charSequenceList9.listIterator();
        boolean boolean21 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList9);
        boolean boolean22 = charSequenceList9.isEmpty();
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = charSequenceList25.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence charSequence30 = charSequenceList25.peek();
        java.lang.CharSequence charSequence31 = charSequenceList25.pollFirst();
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceList34.spliterator();
        boolean boolean37 = charSequenceList34.isEmpty();
        charSequenceList34.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean41 = charSequenceList34.offerLast((java.lang.CharSequence) "");
        charSequenceList34.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean44 = charSequenceList25.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor45 = charSequenceList34.descendingIterator();
        boolean boolean46 = charSequenceList9.removeFirstOccurrence((java.lang.Object) charSequenceList34);
        java.lang.CharSequence charSequence47 = charSequenceList9.peekLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertNotNull(charSequenceItor20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "hi!" + "'", charSequence30, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "hi!" + "'", charSequence31, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceItor45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "" + "'", charSequence47, "");
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.pop();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence13 = charSequenceList2.poll();
        charSequenceList2.push((java.lang.CharSequence) "");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence charSequence15 = charSequenceList9.pollLast();
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = charSequenceList18.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        java.lang.CharSequence charSequence23 = charSequenceList18.peek();
        boolean boolean25 = charSequenceList18.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = charSequenceList28.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean33 = charSequenceList18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean34 = charSequenceList9.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        boolean boolean43 = charSequenceList37.offerFirst((java.lang.CharSequence) "hi!");
        boolean boolean44 = charSequenceList31.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceList47.spliterator();
        boolean boolean50 = charSequenceList47.isEmpty();
        java.lang.CharSequence charSequence51 = charSequenceList47.removeLast();
        java.lang.CharSequence[] charSequenceArray53 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList54 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList54, charSequenceArray53);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList57 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean58 = charSequenceList54.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList57);
        java.lang.CharSequence charSequence59 = charSequenceList54.peek();
        boolean boolean61 = charSequenceList54.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray63 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList64 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64, charSequenceArray63);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList67 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean68 = charSequenceList64.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList67);
        boolean boolean69 = charSequenceList54.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList67);
        java.lang.CharSequence charSequence70 = charSequenceList54.pop();
        boolean boolean71 = charSequenceList47.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList54);
        java.lang.CharSequence[] charSequenceArray73 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList74 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList74, charSequenceArray73);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList77 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean78 = charSequenceList74.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList77);
        java.lang.Object obj79 = null;
        boolean boolean80 = charSequenceList74.equals(obj79);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList81 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList74);
        java.lang.CharSequence charSequence82 = charSequenceList74.peek();
        java.lang.CharSequence charSequence83 = charSequenceList74.remove();
        boolean boolean84 = charSequenceList54.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList74);
        boolean boolean85 = charSequenceList31.removeFirstOccurrence((java.lang.Object) charSequenceList74);
        java.lang.CharSequence charSequence86 = charSequenceList31.peek();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.CharSequence> charSequenceItor88 = charSequenceList31.listIterator((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNull(charSequence15);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "hi!" + "'", charSequence23, "hi!");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "" + "'", charSequence51, "");
        org.junit.Assert.assertNotNull(charSequenceArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + charSequence59 + "' != '" + "hi!" + "'", charSequence59, "hi!");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charSequenceArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + charSequence70 + "' != '" + "hi!" + "'", charSequence70, "hi!");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(charSequenceArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + charSequence82 + "' != '" + "hi!" + "'", charSequence82, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence83 + "' != '" + "hi!" + "'", charSequence83, "hi!");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(charSequence86);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        charSequenceList2.clear();
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList2.add(10, (java.lang.CharSequence) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList13.equals(obj18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        boolean boolean25 = charSequenceList13.removeLastOccurrence((java.lang.Object) charSequenceList22);
        java.lang.CharSequence charSequence26 = charSequenceList22.removeLast();
        boolean boolean27 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator39 = charSequenceList37.spliterator();
        int int40 = charSequenceList37.size();
        boolean boolean41 = charSequenceList30.contains((java.lang.Object) charSequenceList37);
        java.lang.CharSequence charSequence42 = charSequenceList30.element();
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator47 = charSequenceList45.spliterator();
        boolean boolean48 = charSequenceList45.isEmpty();
        charSequenceList45.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str51 = charSequenceList45.toString();
        boolean boolean52 = charSequenceList30.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        boolean boolean54 = charSequenceList45.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor55 = charSequenceList45.descendingIterator();
        boolean boolean56 = charSequenceList22.remove((java.lang.Object) charSequenceItor55);
        java.lang.Object obj57 = null;
        boolean boolean58 = charSequenceList22.contains(obj57);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[hi!, ]" + "'", str51, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charSequenceItor55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor19 = charSequenceList2.iterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence21 = charSequenceList2.get((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceItor19);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean11 = charSequenceList2.offerLast((java.lang.CharSequence) "[[hi!, ]]");
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = charSequenceList14.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.Object obj19 = null;
        boolean boolean20 = charSequenceList14.equals(obj19);
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator25 = charSequenceList23.spliterator();
        boolean boolean26 = charSequenceList14.removeLastOccurrence((java.lang.Object) charSequenceList23);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = charSequenceList29.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceList36.spliterator();
        int int39 = charSequenceList36.size();
        boolean boolean40 = charSequenceList29.contains((java.lang.Object) charSequenceList36);
        java.lang.CharSequence charSequence41 = charSequenceList36.removeFirst();
        int int42 = charSequenceList23.indexOf((java.lang.Object) charSequence41);
        int int43 = charSequenceList2.lastIndexOf((java.lang.Object) charSequence41);
        java.lang.String str44 = charSequenceList2.toString();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "" + "'", charSequence41, "");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[hi!, [[hi!, ]]]" + "'", str44, "[hi!, [[hi!, ]]]");
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceList11.spliterator();
        java.lang.CharSequence charSequence16 = charSequenceList11.element();
        boolean boolean18 = charSequenceList11.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence19 = charSequenceList11.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence22 = charSequenceList11.set(1, (java.lang.CharSequence) "[[hi!, ]]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "[hi!, ]" + "'", charSequence19, "[hi!, ]");
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor10 = charSequenceList2.iterator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.CharSequence> charSequenceList13 = charSequenceList2.subList(2, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 35");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceItor10);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator29 = charSequenceList27.spliterator();
        java.lang.CharSequence charSequence30 = charSequenceList27.getLast();
        java.lang.CharSequence charSequence31 = charSequenceList27.removeLast();
        boolean boolean32 = charSequenceList17.remove((java.lang.Object) charSequenceList27);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence35 = charSequenceList27.set((int) (byte) -1, (java.lang.CharSequence) "[]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator29);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "" + "'", charSequence30, "");
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "" + "'", charSequence31, "");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        charSequenceList5.push((java.lang.CharSequence) "");
        boolean boolean10 = charSequenceList5.offerLast((java.lang.CharSequence) "[hi!]");
        java.lang.CharSequence charSequence11 = charSequenceList5.removeLast();
        java.lang.String str12 = charSequenceList5.toString();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "[hi!]" + "'", charSequence11, "[hi!]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[]" + "'", str12, "[]");
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence9 = charSequenceList2.removeLast();
        java.lang.CharSequence charSequence10 = charSequenceList2.peekLast();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceList20.spliterator();
        int int23 = charSequenceList20.size();
        boolean boolean24 = charSequenceList13.contains((java.lang.Object) charSequenceList20);
        java.lang.CharSequence charSequence25 = charSequenceList13.element();
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceList28.spliterator();
        boolean boolean31 = charSequenceList28.isEmpty();
        charSequenceList28.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str34 = charSequenceList28.toString();
        boolean boolean35 = charSequenceList13.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream36 = charSequenceList28.stream();
        boolean boolean37 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.util.function.UnaryOperator<java.lang.CharSequence> charSequenceUnaryOperator38 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList28.replaceAll(charSequenceUnaryOperator38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertNull(charSequence10);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[hi!, ]" + "'", str34, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceStream36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = charSequenceList9.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence charSequence14 = charSequenceList9.peek();
        boolean boolean16 = charSequenceList9.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        boolean boolean24 = charSequenceList9.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence charSequence25 = charSequenceList9.pop();
        boolean boolean26 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence27 = charSequenceList9.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        charSequenceList2.addFirst((java.lang.CharSequence) "[hi!, ]");
        charSequenceList2.clear();
        charSequenceList2.clear();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = charSequenceList16.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.Object obj21 = null;
        boolean boolean22 = charSequenceList16.equals(obj21);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = charSequenceList25.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence charSequence30 = charSequenceList25.peek();
        java.lang.CharSequence charSequence31 = charSequenceList25.pollFirst();
        boolean boolean32 = charSequenceList16.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = charSequenceList35.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        java.lang.CharSequence charSequence40 = charSequenceList35.peek();
        int int41 = charSequenceList16.indexOf((java.lang.Object) charSequence40);
        int int42 = charSequenceList16.size();
        java.lang.CharSequence charSequence43 = charSequenceList16.pop();
        charSequenceList16.push((java.lang.CharSequence) "[hi!]");
        charSequenceList16.addLast((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList50 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50, charSequenceArray49);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList53 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean54 = charSequenceList50.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList53);
        java.lang.CharSequence charSequence55 = charSequenceList50.peek();
        boolean boolean57 = charSequenceList50.add((java.lang.CharSequence) "[hi!, ]");
        boolean boolean58 = charSequenceList16.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50);
        java.lang.CharSequence[] charSequenceArray60 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList61 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList61, charSequenceArray60);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator63 = charSequenceList61.spliterator();
        int int64 = charSequenceList16.lastIndexOf((java.lang.Object) charSequenceList61);
        boolean boolean65 = charSequenceList2.removeFirstOccurrence((java.lang.Object) charSequenceList16);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "hi!" + "'", charSequence30, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "hi!" + "'", charSequence31, "hi!");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "hi!" + "'", charSequence40, "hi!");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "hi!" + "'", charSequence43, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + charSequence55 + "' != '" + "hi!" + "'", charSequence55, "hi!");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(charSequenceArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence charSequence18 = charSequenceList2.pop();
        boolean boolean19 = charSequenceList2.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence20 = charSequenceList2.pop();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "hi!" + "'", charSequence18, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceList17.stream();
        boolean boolean27 = charSequenceList17.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence28 = charSequenceList17.poll();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor29 = charSequenceList17.iterator();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor30 = charSequenceList17.iterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceStream25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "[hi!, ]" + "'", charSequence28, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceItor29);
        org.junit.Assert.assertNotNull(charSequenceItor30);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList8 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = charSequenceList8.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence charSequence13 = charSequenceList8.peek();
        boolean boolean15 = charSequenceList8.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = charSequenceList18.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        boolean boolean23 = charSequenceList8.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        charSequenceList8.clear();
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = charSequenceList27.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        java.lang.Object obj32 = charSequenceList30.clone();
        int int33 = charSequenceList8.lastIndexOf((java.lang.Object) charSequenceList30);
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor35 = charSequenceList8.listIterator(0);
        java.lang.CharSequence charSequence36 = charSequenceList8.pollFirst();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean37 = charSequenceList2.addAll(7, (java.util.Collection<java.lang.CharSequence>) charSequenceList8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 7, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "[]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(charSequenceItor35);
        org.junit.Assert.assertNull(charSequence36);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList13.equals(obj18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        boolean boolean25 = charSequenceList13.removeLastOccurrence((java.lang.Object) charSequenceList22);
        java.lang.CharSequence charSequence26 = charSequenceList22.removeLast();
        boolean boolean27 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator39 = charSequenceList37.spliterator();
        int int40 = charSequenceList37.size();
        boolean boolean41 = charSequenceList30.contains((java.lang.Object) charSequenceList37);
        java.lang.CharSequence charSequence42 = charSequenceList30.element();
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator47 = charSequenceList45.spliterator();
        boolean boolean48 = charSequenceList45.isEmpty();
        charSequenceList45.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str51 = charSequenceList45.toString();
        boolean boolean52 = charSequenceList30.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        boolean boolean54 = charSequenceList45.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor55 = charSequenceList45.descendingIterator();
        boolean boolean56 = charSequenceList22.remove((java.lang.Object) charSequenceItor55);
        java.lang.CharSequence[] charSequenceArray59 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList60 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList60, charSequenceArray59);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList63 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean64 = charSequenceList60.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList63);
        java.lang.Object obj65 = null;
        boolean boolean66 = charSequenceList60.equals(obj65);
        java.lang.CharSequence[] charSequenceArray68 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList69 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList69, charSequenceArray68);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList72 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean73 = charSequenceList69.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList72);
        java.lang.CharSequence charSequence74 = charSequenceList69.peek();
        java.lang.CharSequence charSequence75 = charSequenceList69.pollFirst();
        boolean boolean76 = charSequenceList60.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList69);
        java.lang.CharSequence[] charSequenceArray78 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList79 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList79, charSequenceArray78);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList82 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean83 = charSequenceList79.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList82);
        java.lang.CharSequence charSequence84 = charSequenceList79.peek();
        int int85 = charSequenceList60.indexOf((java.lang.Object) charSequence84);
        int int86 = charSequenceList60.size();
        java.lang.CharSequence charSequence87 = charSequenceList60.pop();
        boolean boolean88 = charSequenceList22.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList60);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[hi!, ]" + "'", str51, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charSequenceItor55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charSequenceArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(charSequenceArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + charSequence74 + "' != '" + "hi!" + "'", charSequence74, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence75 + "' != '" + "hi!" + "'", charSequence75, "hi!");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(charSequenceArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + charSequence84 + "' != '" + "hi!" + "'", charSequence84, "hi!");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertEquals("'" + charSequence87 + "' != '" + "hi!" + "'", charSequence87, "hi!");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceList24.spliterator();
        int int27 = charSequenceList24.size();
        boolean boolean28 = charSequenceList17.contains((java.lang.Object) charSequenceList24);
        java.lang.CharSequence charSequence29 = charSequenceList17.element();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator34 = charSequenceList32.spliterator();
        boolean boolean35 = charSequenceList32.isEmpty();
        charSequenceList32.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str38 = charSequenceList32.toString();
        boolean boolean39 = charSequenceList17.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor40 = charSequenceList17.descendingIterator();
        java.lang.CharSequence charSequence41 = charSequenceList17.peekFirst();
        int int42 = charSequenceList9.indexOf((java.lang.Object) charSequenceList17);
        boolean boolean44 = charSequenceList9.offer((java.lang.CharSequence) "[hi!]");
        boolean boolean46 = charSequenceList9.add((java.lang.CharSequence) "[[hi!, ]]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[hi!, ]" + "'", str38, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceItor40);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        boolean boolean14 = charSequenceList2.isEmpty();
        java.lang.Object obj15 = charSequenceList2.clone();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceList2.parallelStream();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList19.equals(obj24);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = charSequenceList28.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        java.lang.CharSequence charSequence33 = charSequenceList28.peek();
        java.lang.CharSequence charSequence34 = charSequenceList28.pollFirst();
        boolean boolean35 = charSequenceList19.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        boolean boolean36 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        boolean boolean38 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence39 = charSequenceList2.peekLast();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.CharSequence> charSequenceItor41 = charSequenceList2.listIterator((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "hi!" + "'", charSequence33, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "" + "'", charSequence39, "");
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        charSequenceList2.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.CharSequence> charSequenceList14 = charSequenceList2.subList((int) (short) -1, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: fromIndex = -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceList18.spliterator();
        int int21 = charSequenceList18.size();
        boolean boolean22 = charSequenceList11.contains((java.lang.Object) charSequenceList18);
        java.lang.CharSequence charSequence23 = charSequenceList18.removeFirst();
        java.lang.CharSequence charSequence24 = charSequenceList18.pollLast();
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = charSequenceList27.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        java.lang.CharSequence charSequence32 = charSequenceList27.peek();
        boolean boolean34 = charSequenceList27.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        boolean boolean42 = charSequenceList27.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        boolean boolean43 = charSequenceList18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = charSequenceList46.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList49);
        boolean boolean52 = charSequenceList46.offerFirst((java.lang.CharSequence) "hi!");
        boolean boolean53 = charSequenceList40.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        boolean boolean55 = charSequenceList40.offer((java.lang.CharSequence) "");
        boolean boolean56 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        java.lang.CharSequence charSequence57 = charSequenceList40.pollLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "" + "'", charSequence23, "");
        org.junit.Assert.assertNull(charSequence24);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "hi!" + "'", charSequence32, "hi!");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + charSequence57 + "' != '" + "" + "'", charSequence57, "");
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        java.lang.CharSequence charSequence6 = charSequenceList2.remove();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        boolean boolean12 = charSequenceList9.isEmpty();
        charSequenceList9.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean16 = charSequenceList9.offerLast((java.lang.CharSequence) "");
        charSequenceList9.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence19 = charSequenceList9.removeLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor20 = charSequenceList9.listIterator();
        boolean boolean21 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList9);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence22 = charSequenceList2.getLast();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertNotNull(charSequenceItor20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        java.lang.CharSequence charSequence6 = charSequenceList2.remove();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        boolean boolean12 = charSequenceList9.isEmpty();
        charSequenceList9.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean16 = charSequenceList9.offerLast((java.lang.CharSequence) "");
        charSequenceList9.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence19 = charSequenceList9.removeLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor20 = charSequenceList9.listIterator();
        boolean boolean21 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList9);
        boolean boolean22 = charSequenceList9.isEmpty();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor23 = charSequenceList9.iterator();
        java.lang.CharSequence charSequence24 = charSequenceList9.pop();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertNotNull(charSequenceItor20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceItor23);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "[hi!, ]" + "'", charSequence24, "[hi!, ]");
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList8 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList8.spliterator();
        int int11 = charSequenceList8.size();
        boolean boolean12 = charSequenceList2.contains((java.lang.Object) charSequenceList8);
        boolean boolean14 = charSequenceList2.add((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        int int23 = charSequenceList17.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence24 = charSequenceList17.removeLast();
        boolean boolean26 = charSequenceList17.offerLast((java.lang.CharSequence) "[hi!, ]");
        boolean boolean27 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "hi!" + "'", charSequence24, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean18 = charSequenceList15.isEmpty();
        java.lang.CharSequence charSequence19 = charSequenceList15.peekLast();
        java.lang.CharSequence charSequence20 = charSequenceList15.poll();
        java.lang.String str21 = charSequenceList15.toString();
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList15.add(7, (java.lang.CharSequence) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 7, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(charSequence19);
        org.junit.Assert.assertNull(charSequence20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[]" + "'", str21, "[]");
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor25 = charSequenceList2.descendingIterator();
        java.lang.CharSequence charSequence26 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.CharSequence charSequence35 = charSequenceList30.peek();
        boolean boolean37 = charSequenceList30.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceList30.spliterator();
        boolean boolean40 = charSequenceList30.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence41 = charSequenceList30.element();
        java.lang.CharSequence charSequence42 = charSequenceList30.peekLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor43 = charSequenceList30.listIterator();
        charSequenceList30.addFirst((java.lang.CharSequence) "[hi!]");
        boolean boolean46 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        java.lang.CharSequence charSequence47 = charSequenceList30.peekFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceItor25);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertNotNull(charSequenceItor43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "[hi!]" + "'", charSequence47, "[hi!]");
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean10 = charSequenceList2.contains((java.lang.Object) (-1.0d));
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.CharSequence> charSequenceList13 = charSequenceList2.subList((-1), (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: fromIndex = -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence charSequence10 = charSequenceList2.poll();
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        boolean boolean13 = charSequenceList2.offerFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = charSequenceList16.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence charSequence21 = charSequenceList16.peek();
        boolean boolean23 = charSequenceList16.add((java.lang.CharSequence) "[hi!, ]");
        boolean boolean24 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "hi!" + "'", charSequence21, "hi!");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList13.equals(obj18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        boolean boolean25 = charSequenceList13.removeLastOccurrence((java.lang.Object) charSequenceList22);
        charSequenceList13.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean28 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        java.util.LinkedList<java.io.Serializable> serializableList29 = new java.util.LinkedList<java.io.Serializable>();
        boolean boolean30 = charSequenceList2.equals((java.lang.Object) serializableList29);
        java.lang.CharSequence charSequence32 = charSequenceList2.get(0);
        java.lang.CharSequence charSequence33 = charSequenceList2.removeFirst();
        java.lang.Object obj34 = charSequenceList2.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.CharSequence> charSequenceList37 = charSequenceList2.subList((int) (byte) -1, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: fromIndex = -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "hi!" + "'", charSequence32, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "hi!" + "'", charSequence33, "hi!");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "[hi!, hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "[hi!, hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "[hi!, hi!]");
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence11 = charSequenceList2.set((int) (byte) 0, (java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence12 = charSequenceList2.element();
        charSequenceList2.addFirst((java.lang.CharSequence) "[[hi!, ]]");
        java.lang.CharSequence charSequence15 = charSequenceList2.element();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence17 = charSequenceList2.get(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "hi!" + "'", charSequence11, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "[hi!, ]" + "'", charSequence12, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "[[hi!, ]]" + "'", charSequence15, "[[hi!, ]]");
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence8 = null;
        boolean boolean9 = charSequenceList2.offerLast(charSequence8);
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor10 = charSequenceList2.listIterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceItor10);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList13.equals(obj18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        boolean boolean25 = charSequenceList13.removeLastOccurrence((java.lang.Object) charSequenceList22);
        charSequenceList13.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean28 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor29 = charSequenceList2.iterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceItor29);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.poll();
        java.lang.String str9 = charSequenceList2.toString();
        java.lang.CharSequence charSequence10 = charSequenceList2.poll();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence11 = charSequenceList2.removeLast();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[]" + "'", str9, "[]");
        org.junit.Assert.assertNull(charSequence10);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence[] charSequenceArray9 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList10 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList10, charSequenceArray9);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = charSequenceList10.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        int int20 = charSequenceList17.size();
        boolean boolean21 = charSequenceList10.contains((java.lang.Object) charSequenceList17);
        java.lang.CharSequence charSequence22 = charSequenceList10.element();
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator27 = charSequenceList25.spliterator();
        boolean boolean28 = charSequenceList25.isEmpty();
        charSequenceList25.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str31 = charSequenceList25.toString();
        boolean boolean32 = charSequenceList10.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        boolean boolean34 = charSequenceList25.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor35 = charSequenceList25.descendingIterator();
        boolean boolean36 = charSequenceList25.isEmpty();
        int int37 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList25);
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = charSequenceList40.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        java.lang.CharSequence charSequence45 = charSequenceList40.peek();
        boolean boolean47 = charSequenceList40.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceList40.spliterator();
        boolean boolean50 = charSequenceList40.offer((java.lang.CharSequence) "hi!");
        charSequenceList40.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray55 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56, charSequenceArray55);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator58 = charSequenceList56.spliterator();
        boolean boolean59 = charSequenceList56.isEmpty();
        boolean boolean60 = charSequenceList40.equals((java.lang.Object) charSequenceList56);
        java.lang.CharSequence charSequence62 = charSequenceList40.remove((int) (short) 0);
        int int63 = charSequenceList40.size();
        boolean boolean64 = charSequenceList2.removeLastOccurrence((java.lang.Object) int63);
        java.lang.CharSequence charSequence65 = null;
        boolean boolean66 = charSequenceList2.add(charSequence65);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[hi!, ]" + "'", str31, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceItor35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + charSequence45 + "' != '" + "hi!" + "'", charSequence45, "hi!");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charSequenceArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + charSequence62 + "' != '" + "hi!" + "'", charSequence62, "hi!");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence11 = charSequenceList2.pop();
        java.lang.Object[] objArray12 = charSequenceList2.toArray();
        boolean boolean14 = charSequenceList2.offerLast((java.lang.CharSequence) "[hi!]");
        boolean boolean15 = charSequenceList2.isEmpty();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "hi!" + "'", charSequence11, "hi!");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.Object obj22 = null;
        boolean boolean23 = charSequenceList17.equals(obj22);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence25 = charSequenceList17.peek();
        boolean boolean26 = charSequenceList9.equals((java.lang.Object) charSequenceList17);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = charSequenceList29.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.CharSequence charSequence34 = charSequenceList29.peek();
        java.lang.CharSequence charSequence35 = charSequenceList29.pollFirst();
        charSequenceList29.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = charSequenceList40.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        java.lang.Object obj45 = null;
        boolean boolean46 = charSequenceList40.equals(obj45);
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator51 = charSequenceList49.spliterator();
        boolean boolean52 = charSequenceList40.removeLastOccurrence((java.lang.Object) charSequenceList49);
        java.lang.CharSequence charSequence53 = charSequenceList49.removeLast();
        boolean boolean54 = charSequenceList29.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49);
        java.lang.CharSequence charSequence55 = charSequenceList29.pollFirst();
        boolean boolean56 = charSequenceList9.removeLastOccurrence((java.lang.Object) charSequence55);
        java.util.function.UnaryOperator<java.lang.CharSequence> charSequenceUnaryOperator57 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList9.replaceAll(charSequenceUnaryOperator57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(charSequence55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.pop();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean14 = charSequenceList2.offer((java.lang.CharSequence) "[hi!, ]");
        boolean boolean16 = charSequenceList2.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence17 = charSequenceList2.getFirst();
        java.lang.CharSequence charSequence18 = charSequenceList2.pop();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "[hi!, ]" + "'", charSequence17, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "[hi!, ]" + "'", charSequence18, "[hi!, ]");
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence charSequence9 = charSequenceList2.removeFirst();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.CharSequence> charSequenceItor11 = charSequenceList2.listIterator((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence22 = charSequenceList17.peek();
        boolean boolean24 = charSequenceList17.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean25 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence26 = charSequenceList2.pop();
        java.lang.CharSequence charSequence27 = charSequenceList2.peekFirst();
        boolean boolean28 = charSequenceList2.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence29 = charSequenceList2.removeFirst();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNull(charSequence27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.pop();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean14 = charSequenceList2.offer((java.lang.CharSequence) "[hi!, ]");
        boolean boolean16 = charSequenceList2.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence17 = charSequenceList2.getFirst();
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        int int26 = charSequenceList20.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence27 = charSequenceList20.removeLast();
        java.lang.CharSequence charSequence28 = charSequenceList20.peekLast();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceList38.spliterator();
        int int41 = charSequenceList38.size();
        boolean boolean42 = charSequenceList31.contains((java.lang.Object) charSequenceList38);
        java.lang.CharSequence charSequence43 = charSequenceList31.element();
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceList46.spliterator();
        boolean boolean49 = charSequenceList46.isEmpty();
        charSequenceList46.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str52 = charSequenceList46.toString();
        boolean boolean53 = charSequenceList31.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceList46.stream();
        boolean boolean55 = charSequenceList20.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        boolean boolean56 = charSequenceList2.contains((java.lang.Object) charSequenceList20);
        java.lang.CharSequence charSequence57 = charSequenceList20.poll();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor58 = charSequenceList20.iterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "[hi!, ]" + "'", charSequence17, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "hi!" + "'", charSequence43, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[hi!, ]" + "'", str52, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + charSequence57 + "' != '" + "hi!" + "'", charSequence57, "hi!");
        org.junit.Assert.assertNotNull(charSequenceItor58);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        java.util.LinkedList<java.lang.Comparable<java.lang.String>> strComparableList5 = new java.util.LinkedList<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = charSequenceList2.contains((java.lang.Object) strComparableList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = charSequenceList9.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator18 = charSequenceList16.spliterator();
        int int19 = charSequenceList16.size();
        boolean boolean20 = charSequenceList9.contains((java.lang.Object) charSequenceList16);
        java.lang.CharSequence charSequence21 = charSequenceList9.element();
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = charSequenceList24.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceList31.spliterator();
        int int34 = charSequenceList31.size();
        boolean boolean35 = charSequenceList24.contains((java.lang.Object) charSequenceList31);
        java.lang.CharSequence charSequence36 = charSequenceList24.element();
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceList39.spliterator();
        boolean boolean42 = charSequenceList39.isEmpty();
        charSequenceList39.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str45 = charSequenceList39.toString();
        boolean boolean46 = charSequenceList24.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean48 = charSequenceList39.offer((java.lang.CharSequence) "");
        charSequenceList39.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean53 = charSequenceList39.add((java.lang.CharSequence) "");
        int int54 = charSequenceList9.lastIndexOf((java.lang.Object) boolean53);
        boolean boolean55 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.lang.CharSequence charSequence56 = charSequenceList2.removeLast();
        java.lang.CharSequence charSequence57 = charSequenceList2.pop();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "hi!" + "'", charSequence21, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "hi!" + "'", charSequence36, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[hi!, ]" + "'", str45, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + charSequence56 + "' != '" + "hi!" + "'", charSequence56, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence57 + "' != '" + "" + "'", charSequence57, "");
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence11 = charSequenceList2.set((int) (byte) 0, (java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence12 = charSequenceList2.element();
        charSequenceList2.addFirst((java.lang.CharSequence) "[[hi!, ]]");
        java.lang.CharSequence charSequence15 = charSequenceList2.element();
        int int16 = charSequenceList2.size();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "hi!" + "'", charSequence11, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "[hi!, ]" + "'", charSequence12, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "[[hi!, ]]" + "'", charSequence15, "[[hi!, ]]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence charSequence9 = charSequenceList2.removeFirst();
        boolean boolean11 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = charSequenceList14.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceList21.spliterator();
        int int24 = charSequenceList21.size();
        boolean boolean25 = charSequenceList14.contains((java.lang.Object) charSequenceList21);
        java.lang.CharSequence charSequence26 = charSequenceList14.element();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        boolean boolean32 = charSequenceList29.isEmpty();
        charSequenceList29.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str35 = charSequenceList29.toString();
        boolean boolean36 = charSequenceList14.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        boolean boolean38 = charSequenceList29.offer((java.lang.CharSequence) "");
        charSequenceList29.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList29.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        charSequenceList29.addLast((java.lang.CharSequence) "hi!");
        boolean boolean47 = charSequenceList2.removeFirstOccurrence((java.lang.Object) "hi!");
        boolean boolean49 = charSequenceList2.offerLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence50 = charSequenceList2.pollFirst();
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList53 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53, charSequenceArray52);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = charSequenceList53.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList56);
        java.lang.CharSequence charSequence58 = charSequenceList53.peek();
        java.lang.CharSequence charSequence59 = charSequenceList53.pollFirst();
        charSequenceList53.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence62 = charSequenceList53.pop();
        java.lang.Object[] objArray63 = charSequenceList53.toArray();
        boolean boolean64 = charSequenceList2.contains((java.lang.Object) charSequenceList53);
        boolean boolean65 = charSequenceList53.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence68 = charSequenceList53.set((int) (short) 1, (java.lang.CharSequence) "[hi!, [hi!, ]]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[hi!, ]" + "'", str35, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "" + "'", charSequence50, "");
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + charSequence58 + "' != '" + "hi!" + "'", charSequence58, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence59 + "' != '" + "hi!" + "'", charSequence59, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence62 + "' != '" + "hi!" + "'", charSequence62, "hi!");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence9 = charSequenceList2.removeLast();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator21 = charSequenceList19.spliterator();
        int int22 = charSequenceList19.size();
        boolean boolean23 = charSequenceList12.contains((java.lang.Object) charSequenceList19);
        java.lang.CharSequence charSequence24 = charSequenceList12.element();
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator29 = charSequenceList27.spliterator();
        boolean boolean30 = charSequenceList27.isEmpty();
        charSequenceList27.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str33 = charSequenceList27.toString();
        boolean boolean34 = charSequenceList12.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        boolean boolean36 = charSequenceList27.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence37 = charSequenceList27.getLast();
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator42 = charSequenceList40.spliterator();
        boolean boolean43 = charSequenceList40.isEmpty();
        charSequenceList40.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean47 = charSequenceList40.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence48 = charSequenceList40.pop();
        charSequenceList40.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence53 = charSequenceList40.set((int) (short) 0, (java.lang.CharSequence) "");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceList40.parallelStream();
        boolean boolean55 = charSequenceList27.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        int int56 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList40);
        java.lang.CharSequence charSequence57 = charSequenceList40.poll();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "hi!" + "'", charSequence24, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[hi!, ]" + "'", str33, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "" + "'", charSequence37, "");
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "hi!" + "'", charSequence48, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "hi!" + "'", charSequence53, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence57 + "' != '" + "" + "'", charSequence57, "");
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.lang.CharSequence charSequence7 = charSequenceList2.pollFirst();
        java.util.function.UnaryOperator<java.lang.CharSequence> charSequenceUnaryOperator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList2.replaceAll(charSequenceUnaryOperator8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNull(charSequence7);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        charSequenceList2.clear();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.Object obj26 = charSequenceList24.clone();
        int int27 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList24);
        java.lang.CharSequence charSequence28 = charSequenceList24.peekFirst();
        java.lang.CharSequence charSequence29 = charSequenceList24.peekFirst();
        java.lang.Object obj30 = charSequenceList24.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence32 = charSequenceList24.get(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNull(charSequence29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "[]");
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean10 = charSequenceList2.offerLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        int int19 = charSequenceList13.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean21 = charSequenceList13.offerLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence22 = charSequenceList13.peekFirst();
        int int23 = charSequenceList2.indexOf((java.lang.Object) charSequenceList13);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        int int9 = charSequenceList2.size();
        boolean boolean11 = charSequenceList2.add((java.lang.CharSequence) "[hi!, ]");
        boolean boolean13 = charSequenceList2.offerLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.Object obj14 = charSequenceList2.clone();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "[hi!, [hi!, ], [hi!, ]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "[hi!, [hi!, ], [hi!, ]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "[hi!, [hi!, ], [hi!, ]]");
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence charSequence10 = charSequenceList2.poll();
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceList14.spliterator();
        java.lang.CharSequence charSequence17 = charSequenceList14.getLast();
        java.lang.String str18 = charSequenceList14.toString();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceList21.spliterator();
        boolean boolean24 = charSequenceList21.isEmpty();
        java.lang.CharSequence charSequence25 = charSequenceList21.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream26 = charSequenceList21.stream();
        java.lang.String str27 = charSequenceList21.toString();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceList31.spliterator();
        boolean boolean34 = charSequenceList31.isEmpty();
        java.lang.CharSequence charSequence35 = charSequenceList31.removeLast();
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList41 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean42 = charSequenceList38.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList41);
        java.lang.CharSequence charSequence43 = charSequenceList38.peek();
        boolean boolean45 = charSequenceList38.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48, charSequenceArray47);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList51 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean52 = charSequenceList48.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList51);
        boolean boolean53 = charSequenceList38.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList51);
        java.lang.CharSequence charSequence54 = charSequenceList38.pop();
        boolean boolean55 = charSequenceList31.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList58 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58, charSequenceArray57);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList61 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean62 = charSequenceList58.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList61);
        java.lang.Object obj63 = null;
        boolean boolean64 = charSequenceList58.equals(obj63);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList65 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList58);
        java.lang.CharSequence charSequence66 = charSequenceList58.peek();
        java.lang.CharSequence charSequence67 = charSequenceList58.remove();
        boolean boolean68 = charSequenceList38.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58);
        boolean boolean69 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList58);
        java.lang.CharSequence[] charSequenceArray71 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList72 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList72, charSequenceArray71);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList75 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean76 = charSequenceList72.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList75);
        int int78 = charSequenceList72.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean80 = charSequenceList72.contains((java.lang.Object) (-1.0d));
        java.lang.CharSequence charSequence81 = charSequenceList72.getFirst();
        boolean boolean82 = charSequenceList58.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList72);
        boolean boolean83 = charSequenceList14.remove((java.lang.Object) charSequenceList72);
        boolean boolean84 = charSequenceList2.removeFirstOccurrence((java.lang.Object) boolean83);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.CharSequence> charSequenceItor86 = charSequenceList2.listIterator(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[]" + "'", str18, "[]");
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "" + "'", charSequence25, "");
        org.junit.Assert.assertNotNull(charSequenceStream26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[]" + "'", str27, "[]");
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "" + "'", charSequence35, "");
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "hi!" + "'", charSequence43, "hi!");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "hi!" + "'", charSequence54, "hi!");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + charSequence66 + "' != '" + "hi!" + "'", charSequence66, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence67 + "' != '" + "hi!" + "'", charSequence67, "hi!");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(charSequenceArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + charSequence81 + "' != '" + "hi!" + "'", charSequence81, "hi!");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        java.lang.CharSequence charSequence10 = charSequenceList2.peek();
        java.lang.CharSequence charSequence11 = charSequenceList2.remove();
        boolean boolean13 = charSequenceList2.add((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = charSequenceList16.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.Object obj21 = null;
        boolean boolean22 = charSequenceList16.equals(obj21);
        java.lang.Object obj23 = charSequenceList16.clone();
        boolean boolean24 = charSequenceList2.removeFirstOccurrence((java.lang.Object) charSequenceList16);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor25 = charSequenceList2.descendingIterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "hi!" + "'", charSequence11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceItor25);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        java.lang.CharSequence charSequence6 = charSequenceList2.remove();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        boolean boolean12 = charSequenceList9.isEmpty();
        charSequenceList9.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean16 = charSequenceList9.offerLast((java.lang.CharSequence) "");
        charSequenceList9.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence19 = charSequenceList9.removeLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor20 = charSequenceList9.listIterator();
        boolean boolean21 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList9);
        boolean boolean22 = charSequenceList9.isEmpty();
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = charSequenceList25.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence charSequence30 = charSequenceList25.peek();
        java.lang.CharSequence charSequence31 = charSequenceList25.pollFirst();
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceList34.spliterator();
        boolean boolean37 = charSequenceList34.isEmpty();
        charSequenceList34.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean41 = charSequenceList34.offerLast((java.lang.CharSequence) "");
        charSequenceList34.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean44 = charSequenceList25.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor45 = charSequenceList34.descendingIterator();
        boolean boolean46 = charSequenceList9.removeFirstOccurrence((java.lang.Object) charSequenceList34);
        java.lang.String str47 = charSequenceList9.toString();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertNotNull(charSequenceItor20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "hi!" + "'", charSequence30, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "hi!" + "'", charSequence31, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceItor45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[[hi!, ], hi!, ]" + "'", str47, "[[hi!, ], hi!, ]");
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceList11.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence18 = charSequenceList11.set((int) (byte) 100, (java.lang.CharSequence) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        charSequenceList2.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence12 = charSequenceList2.removeLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor13 = charSequenceList2.listIterator();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        int int20 = charSequenceList17.size();
        java.lang.CharSequence charSequence21 = charSequenceList17.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream22 = charSequenceList17.parallelStream();
        java.lang.CharSequence charSequence23 = null;
        charSequenceList17.addLast(charSequence23);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator25 = charSequenceList17.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = charSequenceList2.addAll(10, (java.util.Collection<java.lang.CharSequence>) charSequenceList17);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
        org.junit.Assert.assertNotNull(charSequenceItor13);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "" + "'", charSequence21, "");
        org.junit.Assert.assertNotNull(charSequenceStream22);
        org.junit.Assert.assertNotNull(charSequenceSpliterator25);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceList2.parallelStream();
        charSequenceList2.push((java.lang.CharSequence) "hi!");
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList2.add((int) ' ', (java.lang.CharSequence) "[hi!]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence charSequence10 = charSequenceList2.poll();
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceList14.spliterator();
        int int17 = charSequenceList14.size();
        java.lang.CharSequence charSequence18 = charSequenceList14.remove();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceList21.spliterator();
        boolean boolean24 = charSequenceList21.isEmpty();
        charSequenceList21.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean28 = charSequenceList21.offerLast((java.lang.CharSequence) "");
        charSequenceList21.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence31 = charSequenceList21.removeLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor32 = charSequenceList21.listIterator();
        boolean boolean33 = charSequenceList14.removeLastOccurrence((java.lang.Object) charSequenceList21);
        boolean boolean34 = charSequenceList21.isEmpty();
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator39 = charSequenceList37.spliterator();
        boolean boolean40 = charSequenceList37.isEmpty();
        charSequenceList37.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str43 = charSequenceList37.toString();
        java.lang.CharSequence charSequence44 = charSequenceList37.removeFirst();
        boolean boolean46 = charSequenceList37.removeLastOccurrence((java.lang.Object) (short) 100);
        boolean boolean47 = charSequenceList21.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        boolean boolean48 = charSequenceList2.remove((java.lang.Object) charSequenceList37);
        java.lang.CharSequence[] charSequenceArray51 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52, charSequenceArray51);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator54 = charSequenceList52.spliterator();
        boolean boolean55 = charSequenceList52.isEmpty();
        charSequenceList52.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean59 = charSequenceList52.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence60 = charSequenceList52.pop();
        charSequenceList52.addFirst((java.lang.CharSequence) "hi!");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean63 = charSequenceList2.addAll((-1), (java.util.Collection<java.lang.CharSequence>) charSequenceList52);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "" + "'", charSequence18, "");
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "" + "'", charSequence31, "");
        org.junit.Assert.assertNotNull(charSequenceItor32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[hi!, ]" + "'", str43, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "hi!" + "'", charSequence44, "hi!");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(charSequenceArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + charSequence60 + "' != '" + "hi!" + "'", charSequence60, "hi!");
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence9 = charSequenceList2.removeLast();
        java.lang.CharSequence charSequence10 = charSequenceList2.peekLast();
        charSequenceList2.push((java.lang.CharSequence) "[hi!]");
        java.lang.CharSequence charSequence14 = charSequenceList2.get((int) (byte) 0);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertNull(charSequence10);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "[hi!]" + "'", charSequence14, "[hi!]");
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceList12.spliterator();
        boolean boolean15 = charSequenceList12.isEmpty();
        java.lang.CharSequence charSequence16 = charSequenceList12.removeLast();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence charSequence24 = charSequenceList19.peek();
        boolean boolean26 = charSequenceList19.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = charSequenceList29.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        boolean boolean34 = charSequenceList19.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.CharSequence charSequence35 = charSequenceList19.pop();
        boolean boolean36 = charSequenceList12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = charSequenceList39.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        java.lang.Object obj44 = null;
        boolean boolean45 = charSequenceList39.equals(obj44);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence charSequence47 = charSequenceList39.peek();
        java.lang.CharSequence charSequence48 = charSequenceList39.remove();
        boolean boolean49 = charSequenceList19.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean50 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList53 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53, charSequenceArray52);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = charSequenceList53.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList56);
        int int59 = charSequenceList53.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean61 = charSequenceList53.contains((java.lang.Object) (-1.0d));
        java.lang.CharSequence charSequence62 = charSequenceList53.getFirst();
        boolean boolean63 = charSequenceList39.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53);
        boolean boolean64 = charSequenceList53.isEmpty();
        java.lang.CharSequence charSequence65 = charSequenceList53.element();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[]" + "'", str8, "[]");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "hi!" + "'", charSequence24, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "hi!" + "'", charSequence47, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "hi!" + "'", charSequence48, "hi!");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + charSequence62 + "' != '" + "hi!" + "'", charSequence62, "hi!");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + charSequence65 + "' != '" + "hi!" + "'", charSequence65, "hi!");
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceList12.spliterator();
        boolean boolean15 = charSequenceList12.isEmpty();
        java.lang.CharSequence charSequence16 = charSequenceList12.removeLast();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence charSequence24 = charSequenceList19.peek();
        boolean boolean26 = charSequenceList19.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = charSequenceList29.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        boolean boolean34 = charSequenceList19.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.CharSequence charSequence35 = charSequenceList19.pop();
        boolean boolean36 = charSequenceList12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = charSequenceList39.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        java.lang.Object obj44 = null;
        boolean boolean45 = charSequenceList39.equals(obj44);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence charSequence47 = charSequenceList39.peek();
        java.lang.CharSequence charSequence48 = charSequenceList39.remove();
        boolean boolean49 = charSequenceList19.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean50 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList53 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53, charSequenceArray52);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = charSequenceList53.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList56);
        int int59 = charSequenceList53.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean61 = charSequenceList53.contains((java.lang.Object) (-1.0d));
        java.lang.CharSequence charSequence62 = charSequenceList53.getFirst();
        boolean boolean63 = charSequenceList39.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53);
        boolean boolean64 = charSequenceList53.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence67 = charSequenceList53.set((int) (short) 10, (java.lang.CharSequence) "[hi!, ]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[]" + "'", str8, "[]");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "hi!" + "'", charSequence24, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "hi!" + "'", charSequence47, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "hi!" + "'", charSequence48, "hi!");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + charSequence62 + "' != '" + "hi!" + "'", charSequence62, "hi!");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean18 = charSequenceList15.isEmpty();
        java.lang.CharSequence charSequence19 = charSequenceList15.peekLast();
        java.lang.CharSequence charSequence20 = charSequenceList15.poll();
        java.lang.String str21 = charSequenceList15.toString();
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = charSequenceList24.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceList31.spliterator();
        int int34 = charSequenceList31.size();
        boolean boolean35 = charSequenceList24.contains((java.lang.Object) charSequenceList31);
        java.lang.CharSequence charSequence36 = charSequenceList24.element();
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceList39.spliterator();
        boolean boolean42 = charSequenceList39.isEmpty();
        charSequenceList39.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str45 = charSequenceList39.toString();
        boolean boolean46 = charSequenceList24.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean48 = charSequenceList39.offer((java.lang.CharSequence) "");
        charSequenceList39.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList39.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        boolean boolean56 = charSequenceList39.offerFirst((java.lang.CharSequence) "hi!");
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator57 = charSequenceList39.spliterator();
        boolean boolean58 = charSequenceList15.removeFirstOccurrence((java.lang.Object) charSequenceSpliterator57);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator59 = charSequenceList15.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence61 = charSequenceList15.remove((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(charSequence19);
        org.junit.Assert.assertNull(charSequence20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[]" + "'", str21, "[]");
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "hi!" + "'", charSequence36, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[hi!, ]" + "'", str45, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator59);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence[] charSequenceArray9 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList10 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList10, charSequenceArray9);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = charSequenceList10.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        int int20 = charSequenceList17.size();
        boolean boolean21 = charSequenceList10.contains((java.lang.Object) charSequenceList17);
        java.lang.CharSequence charSequence22 = charSequenceList10.element();
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator27 = charSequenceList25.spliterator();
        boolean boolean28 = charSequenceList25.isEmpty();
        charSequenceList25.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str31 = charSequenceList25.toString();
        boolean boolean32 = charSequenceList10.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        boolean boolean34 = charSequenceList25.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor35 = charSequenceList25.descendingIterator();
        boolean boolean36 = charSequenceList25.isEmpty();
        int int37 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList25);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence39 = charSequenceList25.remove((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[hi!, ]" + "'", str31, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceItor35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence charSequence15 = charSequenceList9.pollLast();
        charSequenceList9.clear();
        charSequenceList9.addFirst((java.lang.CharSequence) "");
        charSequenceList9.addFirst((java.lang.CharSequence) "[hi!, [hi!, ]]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNull(charSequence15);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList7 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList10 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean11 = charSequenceList7.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList10);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceList14.spliterator();
        int int17 = charSequenceList14.size();
        boolean boolean18 = charSequenceList7.contains((java.lang.Object) charSequenceList14);
        java.lang.CharSequence charSequence19 = charSequenceList7.element();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        boolean boolean25 = charSequenceList22.isEmpty();
        charSequenceList22.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str28 = charSequenceList22.toString();
        boolean boolean29 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        boolean boolean31 = charSequenceList22.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor32 = charSequenceList22.descendingIterator();
        boolean boolean33 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceItor32);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator34 = charSequenceList2.spliterator();
        java.lang.CharSequence charSequence35 = charSequenceList2.getLast();
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceList38.spliterator();
        boolean boolean41 = charSequenceList38.isEmpty();
        java.lang.CharSequence charSequence42 = charSequenceList38.removeLast();
        java.lang.CharSequence charSequence43 = charSequenceList38.pollFirst();
        boolean boolean44 = charSequenceList2.contains((java.lang.Object) charSequence43);
        java.lang.CharSequence charSequence45 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48, charSequenceArray47);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList51 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean52 = charSequenceList48.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList51);
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList55 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55, charSequenceArray54);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator57 = charSequenceList55.spliterator();
        int int58 = charSequenceList55.size();
        boolean boolean59 = charSequenceList48.contains((java.lang.Object) charSequenceList55);
        java.lang.CharSequence charSequence60 = charSequenceList48.element();
        java.lang.CharSequence[] charSequenceArray62 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList63 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList63, charSequenceArray62);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList66 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean67 = charSequenceList63.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList66);
        java.lang.CharSequence[] charSequenceArray69 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList70 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList70, charSequenceArray69);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator72 = charSequenceList70.spliterator();
        int int73 = charSequenceList70.size();
        boolean boolean74 = charSequenceList63.contains((java.lang.Object) charSequenceList70);
        java.lang.CharSequence charSequence75 = charSequenceList63.element();
        java.lang.CharSequence[] charSequenceArray77 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList78 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList78, charSequenceArray77);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator80 = charSequenceList78.spliterator();
        boolean boolean81 = charSequenceList78.isEmpty();
        charSequenceList78.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str84 = charSequenceList78.toString();
        boolean boolean85 = charSequenceList63.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList78);
        boolean boolean87 = charSequenceList78.offer((java.lang.CharSequence) "");
        charSequenceList78.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean92 = charSequenceList78.add((java.lang.CharSequence) "");
        int int93 = charSequenceList48.lastIndexOf((java.lang.Object) boolean92);
        boolean boolean94 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "hi!" + "'", charSequence19, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[hi!, ]" + "'", str28, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceItor32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator34);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "" + "'", charSequence35, "");
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "" + "'", charSequence42, "");
        org.junit.Assert.assertNull(charSequence43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + charSequence45 + "' != '" + "" + "'", charSequence45, "");
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + charSequence60 + "' != '" + "hi!" + "'", charSequence60, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(charSequenceArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + charSequence75 + "' != '" + "hi!" + "'", charSequence75, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[hi!, ]" + "'", str84, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        int int27 = charSequenceList2.indexOf((java.lang.Object) charSequence26);
        int int28 = charSequenceList2.size();
        charSequenceList2.addFirst((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor31 = charSequenceList2.iterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(charSequenceItor31);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        int int15 = charSequenceList2.size();
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = charSequenceList18.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        java.lang.Object obj23 = charSequenceList21.clone();
        charSequenceList21.addLast((java.lang.CharSequence) "[hi!, ]");
        boolean boolean27 = charSequenceList21.offerLast((java.lang.CharSequence) "[hi!, ]");
        boolean boolean28 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList21);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence30 = charSequenceList21.remove(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.lang.CharSequence charSequence7 = charSequenceList2.pollFirst();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence10 = charSequenceList2.set(100, (java.lang.CharSequence) "[hi!, [[hi!, ]]]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNull(charSequence7);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList8 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList8.spliterator();
        boolean boolean11 = charSequenceList8.isEmpty();
        charSequenceList8.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean15 = charSequenceList8.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence16 = charSequenceList8.pop();
        charSequenceList8.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean20 = charSequenceList8.offer((java.lang.CharSequence) "[hi!, ]");
        boolean boolean22 = charSequenceList8.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence23 = charSequenceList8.getFirst();
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList26 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26, charSequenceArray25);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = charSequenceList26.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        int int32 = charSequenceList26.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence33 = charSequenceList26.removeLast();
        java.lang.CharSequence charSequence34 = charSequenceList26.peekLast();
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        java.lang.CharSequence[] charSequenceArray43 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList44 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList44, charSequenceArray43);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator46 = charSequenceList44.spliterator();
        int int47 = charSequenceList44.size();
        boolean boolean48 = charSequenceList37.contains((java.lang.Object) charSequenceList44);
        java.lang.CharSequence charSequence49 = charSequenceList37.element();
        java.lang.CharSequence[] charSequenceArray51 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52, charSequenceArray51);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator54 = charSequenceList52.spliterator();
        boolean boolean55 = charSequenceList52.isEmpty();
        charSequenceList52.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str58 = charSequenceList52.toString();
        boolean boolean59 = charSequenceList37.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream60 = charSequenceList52.stream();
        boolean boolean61 = charSequenceList26.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        java.lang.CharSequence charSequence62 = charSequenceList26.remove();
        boolean boolean63 = charSequenceList8.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26);
        int int64 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList26);
        java.lang.CharSequence[] charSequenceArray66 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList67 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList67, charSequenceArray66);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator69 = charSequenceList67.spliterator();
        boolean boolean70 = charSequenceList67.isEmpty();
        charSequenceList67.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean74 = charSequenceList67.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence75 = charSequenceList67.pop();
        charSequenceList67.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence78 = charSequenceList67.poll();
        int int79 = charSequenceList2.lastIndexOf((java.lang.Object) charSequence78);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "[hi!, ]" + "'", charSequence23, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "hi!" + "'", charSequence33, "hi!");
        org.junit.Assert.assertNull(charSequence34);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "hi!" + "'", charSequence49, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[hi!, ]" + "'", str58, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(charSequenceStream60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + charSequence62 + "' != '" + "hi!" + "'", charSequence62, "hi!");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertEquals("'" + charSequence75 + "' != '" + "hi!" + "'", charSequence75, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence78 + "' != '" + "hi!" + "'", charSequence78, "hi!");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList13.equals(obj18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        boolean boolean25 = charSequenceList13.removeLastOccurrence((java.lang.Object) charSequenceList22);
        charSequenceList13.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean28 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        java.util.LinkedList<java.io.Serializable> serializableList29 = new java.util.LinkedList<java.io.Serializable>();
        boolean boolean30 = charSequenceList2.equals((java.lang.Object) serializableList29);
        boolean boolean32 = charSequenceList2.offerLast((java.lang.CharSequence) "[]");
        java.util.function.UnaryOperator<java.lang.CharSequence> charSequenceUnaryOperator33 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList2.replaceAll(charSequenceUnaryOperator33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        charSequenceList2.clear();
        java.lang.Object obj6 = charSequenceList2.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence8 = charSequenceList2.remove(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "[]");
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList2.spliterator();
        boolean boolean12 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence13 = charSequenceList2.element();
        java.lang.CharSequence charSequence14 = charSequenceList2.peekLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor15 = charSequenceList2.listIterator();
        java.lang.CharSequence charSequence16 = charSequenceList2.removeFirst();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList19.equals(obj24);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList26 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor27 = charSequenceList19.iterator();
        boolean boolean28 = charSequenceList2.equals((java.lang.Object) charSequenceItor27);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceItor27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        int int9 = charSequenceList2.size();
        charSequenceList2.addLast((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence13 = charSequenceList2.remove(0);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceList17.stream();
        boolean boolean27 = charSequenceList17.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence28 = charSequenceList17.poll();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceList31.spliterator();
        charSequenceList31.clear();
        boolean boolean35 = charSequenceList17.removeLastOccurrence((java.lang.Object) charSequenceList31);
        java.lang.CharSequence charSequence36 = charSequenceList31.peek();
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = charSequenceList40.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        int int46 = charSequenceList40.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = charSequenceList49.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        java.lang.CharSequence[] charSequenceArray55 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56, charSequenceArray55);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator58 = charSequenceList56.spliterator();
        int int59 = charSequenceList56.size();
        boolean boolean60 = charSequenceList49.contains((java.lang.Object) charSequenceList56);
        java.lang.CharSequence charSequence61 = charSequenceList56.removeFirst();
        java.lang.CharSequence charSequence62 = charSequenceList56.pollLast();
        java.lang.CharSequence[] charSequenceArray64 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList65 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList65, charSequenceArray64);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList68 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean69 = charSequenceList65.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList68);
        java.lang.CharSequence charSequence70 = charSequenceList65.peek();
        boolean boolean72 = charSequenceList65.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray74 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList75 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList75, charSequenceArray74);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList78 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean79 = charSequenceList75.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList78);
        boolean boolean80 = charSequenceList65.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList78);
        boolean boolean81 = charSequenceList56.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList78);
        java.lang.CharSequence[] charSequenceArray83 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList84 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList84, charSequenceArray83);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList87 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean88 = charSequenceList84.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList87);
        boolean boolean90 = charSequenceList84.offerFirst((java.lang.CharSequence) "hi!");
        boolean boolean91 = charSequenceList78.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList84);
        boolean boolean93 = charSequenceList78.offer((java.lang.CharSequence) "");
        boolean boolean94 = charSequenceList40.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList78);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean95 = charSequenceList31.addAll((int) (short) -1, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceStream25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "[hi!, ]" + "'", charSequence28, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(charSequence36);
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charSequenceArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + charSequence61 + "' != '" + "" + "'", charSequence61, "");
        org.junit.Assert.assertNull(charSequence62);
        org.junit.Assert.assertNotNull(charSequenceArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + charSequence70 + "' != '" + "hi!" + "'", charSequence70, "hi!");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(charSequenceArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(charSequenceArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceList12.spliterator();
        boolean boolean15 = charSequenceList12.isEmpty();
        java.lang.CharSequence charSequence16 = charSequenceList12.removeLast();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence charSequence24 = charSequenceList19.peek();
        boolean boolean26 = charSequenceList19.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = charSequenceList29.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        boolean boolean34 = charSequenceList19.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.CharSequence charSequence35 = charSequenceList19.pop();
        boolean boolean36 = charSequenceList12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = charSequenceList39.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        java.lang.Object obj44 = null;
        boolean boolean45 = charSequenceList39.equals(obj44);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence charSequence47 = charSequenceList39.peek();
        java.lang.CharSequence charSequence48 = charSequenceList39.remove();
        boolean boolean49 = charSequenceList19.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean50 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList53 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53, charSequenceArray52);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = charSequenceList53.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList56);
        int int59 = charSequenceList53.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean61 = charSequenceList53.contains((java.lang.Object) (-1.0d));
        java.lang.CharSequence charSequence62 = charSequenceList53.getFirst();
        boolean boolean63 = charSequenceList39.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53);
        java.lang.CharSequence[] charSequenceArray65 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList66 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList66, charSequenceArray65);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList69 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean70 = charSequenceList66.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList69);
        java.lang.CharSequence charSequence71 = charSequenceList66.peek();
        java.lang.CharSequence charSequence72 = charSequenceList66.pollFirst();
        charSequenceList66.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray76 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList77 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList77, charSequenceArray76);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList80 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean81 = charSequenceList77.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList80);
        java.lang.Object obj82 = null;
        boolean boolean83 = charSequenceList77.equals(obj82);
        java.lang.CharSequence[] charSequenceArray85 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList86 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList86, charSequenceArray85);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator88 = charSequenceList86.spliterator();
        boolean boolean89 = charSequenceList77.removeLastOccurrence((java.lang.Object) charSequenceList86);
        charSequenceList77.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean92 = charSequenceList66.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList77);
        java.util.LinkedList<java.io.Serializable> serializableList93 = new java.util.LinkedList<java.io.Serializable>();
        boolean boolean94 = charSequenceList66.equals((java.lang.Object) serializableList93);
        boolean boolean96 = charSequenceList66.offerLast((java.lang.CharSequence) "[]");
        boolean boolean97 = charSequenceList53.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList66);
        java.lang.String str98 = charSequenceList66.toString();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[]" + "'", str8, "[]");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "hi!" + "'", charSequence24, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "hi!" + "'", charSequence47, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "hi!" + "'", charSequence48, "hi!");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + charSequence62 + "' != '" + "hi!" + "'", charSequence62, "hi!");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(charSequenceArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + charSequence71 + "' != '" + "hi!" + "'", charSequence71, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence72 + "' != '" + "hi!" + "'", charSequence72, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(charSequenceArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "[hi!, hi!, hi!, []]" + "'", str98, "[hi!, hi!, hi!, []]");
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence25 = null;
        charSequenceList2.addFirst(charSequence25);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream27 = charSequenceList2.stream();
        charSequenceList2.add(0, (java.lang.CharSequence) "[hi!, [[hi!, ]]]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceStream27);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence9 = charSequenceList2.removeLast();
        java.lang.CharSequence charSequence10 = charSequenceList2.peekLast();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceList20.spliterator();
        int int23 = charSequenceList20.size();
        boolean boolean24 = charSequenceList13.contains((java.lang.Object) charSequenceList20);
        java.lang.CharSequence charSequence25 = charSequenceList13.element();
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceList28.spliterator();
        boolean boolean31 = charSequenceList28.isEmpty();
        charSequenceList28.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str34 = charSequenceList28.toString();
        boolean boolean35 = charSequenceList13.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream36 = charSequenceList28.stream();
        boolean boolean37 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence charSequence38 = charSequenceList2.removeFirst();
        java.lang.CharSequence charSequence39 = charSequenceList2.peekLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertNull(charSequence10);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[hi!, ]" + "'", str34, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceStream36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "hi!" + "'", charSequence38, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "" + "'", charSequence39, "");
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceList2.parallelStream();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator21 = charSequenceList19.spliterator();
        int int22 = charSequenceList19.size();
        boolean boolean23 = charSequenceList12.contains((java.lang.Object) charSequenceList19);
        boolean boolean24 = charSequenceList12.isEmpty();
        java.lang.Object obj25 = charSequenceList12.clone();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream26 = charSequenceList12.parallelStream();
        boolean boolean27 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator32 = charSequenceList30.spliterator();
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = charSequenceList35.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42, charSequenceArray41);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator44 = charSequenceList42.spliterator();
        int int45 = charSequenceList42.size();
        boolean boolean46 = charSequenceList35.contains((java.lang.Object) charSequenceList42);
        java.lang.CharSequence charSequence47 = charSequenceList35.element();
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList50 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50, charSequenceArray49);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator52 = charSequenceList50.spliterator();
        boolean boolean53 = charSequenceList50.isEmpty();
        charSequenceList50.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str56 = charSequenceList50.toString();
        boolean boolean57 = charSequenceList35.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50);
        boolean boolean59 = charSequenceList50.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor60 = charSequenceList50.descendingIterator();
        boolean boolean61 = charSequenceList30.removeLastOccurrence((java.lang.Object) charSequenceItor60);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator62 = charSequenceList30.spliterator();
        java.lang.CharSequence charSequence63 = charSequenceList30.getLast();
        java.lang.CharSequence[] charSequenceArray65 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList66 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList66, charSequenceArray65);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator68 = charSequenceList66.spliterator();
        boolean boolean69 = charSequenceList66.isEmpty();
        java.lang.CharSequence charSequence70 = charSequenceList66.removeLast();
        java.lang.CharSequence charSequence71 = charSequenceList66.pollFirst();
        boolean boolean72 = charSequenceList30.contains((java.lang.Object) charSequence71);
        java.lang.CharSequence charSequence73 = charSequenceList30.element();
        boolean boolean74 = charSequenceList12.contains((java.lang.Object) charSequenceList30);
        boolean boolean76 = charSequenceList30.offerFirst((java.lang.CharSequence) "[hi!, [hi!, ]]");
        int int77 = charSequenceList30.size();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator32);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "hi!" + "'", charSequence47, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[hi!, ]" + "'", str56, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(charSequenceItor60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator62);
        org.junit.Assert.assertEquals("'" + charSequence63 + "' != '" + "" + "'", charSequence63, "");
        org.junit.Assert.assertNotNull(charSequenceArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + charSequence70 + "' != '" + "" + "'", charSequence70, "");
        org.junit.Assert.assertNull(charSequence71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + charSequence73 + "' != '" + "" + "'", charSequence73, "");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 2 + "'", int77 == 2);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence charSequence9 = charSequenceList2.peek();
        java.lang.CharSequence charSequence10 = charSequenceList2.getFirst();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence13 = charSequenceList2.set(100, (java.lang.CharSequence) "[[hi!, ], hi!, ]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence charSequence15 = charSequenceList11.removeLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor16 = charSequenceList11.listIterator();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList26 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26, charSequenceArray25);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator28 = charSequenceList26.spliterator();
        int int29 = charSequenceList26.size();
        boolean boolean30 = charSequenceList19.contains((java.lang.Object) charSequenceList26);
        boolean boolean31 = charSequenceList11.remove((java.lang.Object) boolean30);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "" + "'", charSequence15, "");
        org.junit.Assert.assertNotNull(charSequenceItor16);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceList2.stream();
        java.lang.CharSequence charSequence16 = null;
        charSequenceList2.add(0, charSequence16);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator29 = charSequenceList27.spliterator();
        int int30 = charSequenceList27.size();
        boolean boolean31 = charSequenceList20.contains((java.lang.Object) charSequenceList27);
        java.lang.CharSequence charSequence32 = charSequenceList20.element();
        boolean boolean33 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        charSequenceList20.push((java.lang.CharSequence) "[hi!, [[hi!, ]]]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "hi!" + "'", charSequence32, "hi!");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence9 = charSequenceList2.removeLast();
        java.lang.CharSequence charSequence10 = charSequenceList2.peekLast();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence11 = charSequenceList2.getFirst();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertNull(charSequence10);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor10 = charSequenceList2.iterator();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceList20.spliterator();
        int int23 = charSequenceList20.size();
        boolean boolean24 = charSequenceList13.contains((java.lang.Object) charSequenceList20);
        java.lang.CharSequence charSequence25 = charSequenceList13.element();
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceList28.spliterator();
        boolean boolean31 = charSequenceList28.isEmpty();
        charSequenceList28.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str34 = charSequenceList28.toString();
        boolean boolean35 = charSequenceList13.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence charSequence36 = charSequenceList13.getFirst();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor37 = charSequenceList13.listIterator();
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = charSequenceList40.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceList47.spliterator();
        int int50 = charSequenceList47.size();
        boolean boolean51 = charSequenceList40.contains((java.lang.Object) charSequenceList47);
        java.lang.CharSequence charSequence52 = charSequenceList47.removeFirst();
        java.lang.CharSequence charSequence53 = charSequenceList47.pollLast();
        java.lang.CharSequence[] charSequenceArray55 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56, charSequenceArray55);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList59 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean60 = charSequenceList56.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList59);
        java.lang.CharSequence charSequence61 = charSequenceList56.peek();
        boolean boolean63 = charSequenceList56.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray65 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList66 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList66, charSequenceArray65);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList69 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean70 = charSequenceList66.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList69);
        boolean boolean71 = charSequenceList56.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList69);
        boolean boolean72 = charSequenceList47.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList69);
        java.lang.CharSequence[] charSequenceArray74 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList75 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList75, charSequenceArray74);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList78 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean79 = charSequenceList75.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList78);
        boolean boolean81 = charSequenceList75.offerFirst((java.lang.CharSequence) "hi!");
        boolean boolean82 = charSequenceList69.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList75);
        boolean boolean83 = charSequenceList13.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList75);
        boolean boolean84 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        java.lang.CharSequence charSequence86 = charSequenceList13.remove((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList13.add(10, (java.lang.CharSequence) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceItor10);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[hi!, ]" + "'", str34, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "hi!" + "'", charSequence36, "hi!");
        org.junit.Assert.assertNotNull(charSequenceItor37);
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "" + "'", charSequence52, "");
        org.junit.Assert.assertNull(charSequence53);
        org.junit.Assert.assertNotNull(charSequenceArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + charSequence61 + "' != '" + "hi!" + "'", charSequence61, "hi!");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(charSequenceArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(charSequenceArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertEquals("'" + charSequence86 + "' != '" + "hi!" + "'", charSequence86, "hi!");
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        charSequenceList2.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence12 = charSequenceList2.peekLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.CharSequence charSequence4 = charSequenceList2.getLast();
        boolean boolean6 = charSequenceList2.add((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = charSequenceList9.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator18 = charSequenceList16.spliterator();
        int int19 = charSequenceList16.size();
        boolean boolean20 = charSequenceList9.contains((java.lang.Object) charSequenceList16);
        java.lang.CharSequence charSequence21 = charSequenceList9.element();
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceList24.spliterator();
        boolean boolean27 = charSequenceList24.isEmpty();
        charSequenceList24.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str30 = charSequenceList24.toString();
        boolean boolean31 = charSequenceList9.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor32 = charSequenceList9.descendingIterator();
        java.lang.CharSequence charSequence33 = charSequenceList9.peekFirst();
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = charSequenceList36.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        int int42 = charSequenceList36.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence43 = charSequenceList36.removeLast();
        java.lang.CharSequence charSequence44 = charSequenceList36.peekLast();
        charSequenceList36.push((java.lang.CharSequence) "[hi!]");
        boolean boolean47 = charSequenceList9.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36);
        boolean boolean48 = charSequenceList2.removeLastOccurrence((java.lang.Object) boolean47);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "hi!" + "'", charSequence21, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[hi!, ]" + "'", str30, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceItor32);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "hi!" + "'", charSequence33, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "hi!" + "'", charSequence43, "hi!");
        org.junit.Assert.assertNull(charSequence44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = charSequenceList5.clone();
        charSequenceList5.addLast((java.lang.CharSequence) "[hi!, ]");
        boolean boolean11 = charSequenceList5.offerLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence12 = charSequenceList5.pollFirst();
        java.lang.CharSequence charSequence13 = charSequenceList5.removeLast();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = charSequenceList16.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator25 = charSequenceList23.spliterator();
        int int26 = charSequenceList23.size();
        boolean boolean27 = charSequenceList16.contains((java.lang.Object) charSequenceList23);
        java.lang.CharSequence charSequence28 = charSequenceList16.element();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceList31.spliterator();
        boolean boolean34 = charSequenceList31.isEmpty();
        charSequenceList31.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str37 = charSequenceList31.toString();
        boolean boolean38 = charSequenceList16.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean40 = charSequenceList31.offer((java.lang.CharSequence) "");
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor41 = charSequenceList31.listIterator();
        java.lang.CharSequence charSequence42 = charSequenceList31.poll();
        java.lang.CharSequence charSequence43 = charSequenceList31.peek();
        boolean boolean44 = charSequenceList5.equals((java.lang.Object) charSequenceList31);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "[hi!, ]" + "'", charSequence12, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "[hi!, ]" + "'", charSequence13, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "hi!" + "'", charSequence28, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[hi!, ]" + "'", str37, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(charSequenceItor41);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "" + "'", charSequence43, "");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence charSequence9 = charSequenceList2.peek();
        int int11 = charSequenceList2.indexOf((java.lang.Object) (short) 1);
        java.lang.CharSequence charSequence12 = charSequenceList2.removeFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "hi!" + "'", charSequence12, "hi!");
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean10 = charSequenceList2.contains((java.lang.Object) (-1.0d));
        java.lang.CharSequence charSequence11 = charSequenceList2.getFirst();
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = charSequenceList14.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.Object obj19 = null;
        boolean boolean20 = charSequenceList14.equals(obj19);
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator25 = charSequenceList23.spliterator();
        boolean boolean26 = charSequenceList14.removeLastOccurrence((java.lang.Object) charSequenceList23);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = charSequenceList29.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.CharSequence charSequence34 = charSequenceList29.peek();
        boolean boolean36 = charSequenceList29.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean37 = charSequenceList14.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        java.lang.CharSequence charSequence38 = charSequenceList14.pop();
        java.lang.CharSequence charSequence39 = charSequenceList14.peekFirst();
        java.lang.CharSequence charSequence40 = charSequenceList14.peekFirst();
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList43, charSequenceArray42);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = charSequenceList43.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList50 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50, charSequenceArray49);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator52 = charSequenceList50.spliterator();
        int int53 = charSequenceList50.size();
        boolean boolean54 = charSequenceList43.contains((java.lang.Object) charSequenceList50);
        java.lang.CharSequence charSequence55 = charSequenceList43.element();
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList58 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58, charSequenceArray57);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator60 = charSequenceList58.spliterator();
        boolean boolean61 = charSequenceList58.isEmpty();
        charSequenceList58.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str64 = charSequenceList58.toString();
        boolean boolean65 = charSequenceList43.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58);
        boolean boolean67 = charSequenceList58.offer((java.lang.CharSequence) "");
        charSequenceList58.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList58.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        charSequenceList58.addLast((java.lang.CharSequence) "hi!");
        int int76 = charSequenceList14.indexOf((java.lang.Object) charSequenceList58);
        int int77 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList58);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "hi!" + "'", charSequence11, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "hi!" + "'", charSequence38, "hi!");
        org.junit.Assert.assertNull(charSequence39);
        org.junit.Assert.assertNull(charSequence40);
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + charSequence55 + "' != '" + "hi!" + "'", charSequence55, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[hi!, ]" + "'", str64, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.pop();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean14 = charSequenceList2.offer((java.lang.CharSequence) "[hi!, ]");
        boolean boolean16 = charSequenceList2.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence17 = charSequenceList2.getFirst();
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        int int26 = charSequenceList20.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean28 = charSequenceList20.contains((java.lang.Object) (-1.0d));
        java.lang.CharSequence charSequence29 = charSequenceList20.getFirst();
        boolean boolean30 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence31 = charSequenceList20.element();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "[hi!, ]" + "'", charSequence17, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "hi!" + "'", charSequence31, "hi!");
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence charSequence10 = charSequenceList2.poll();
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        boolean boolean13 = charSequenceList11.add((java.lang.CharSequence) "[hi!, [[hi!, ]]]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.Object obj11 = charSequenceList2.clone();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceList15.spliterator();
        int int18 = charSequenceList15.size();
        java.lang.CharSequence charSequence19 = charSequenceList15.remove();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        boolean boolean25 = charSequenceList22.isEmpty();
        charSequenceList22.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean29 = charSequenceList22.offerLast((java.lang.CharSequence) "");
        charSequenceList22.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence32 = charSequenceList22.removeLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor33 = charSequenceList22.listIterator();
        boolean boolean34 = charSequenceList15.removeLastOccurrence((java.lang.Object) charSequenceList22);
        boolean boolean35 = charSequenceList22.isEmpty();
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceList38.spliterator();
        boolean boolean41 = charSequenceList38.isEmpty();
        charSequenceList38.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str44 = charSequenceList38.toString();
        java.lang.CharSequence charSequence45 = charSequenceList38.removeFirst();
        boolean boolean47 = charSequenceList38.removeLastOccurrence((java.lang.Object) (short) 100);
        boolean boolean48 = charSequenceList22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean49 = charSequenceList2.addAll(2, (java.util.Collection<java.lang.CharSequence>) charSequenceList38);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 2, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "" + "'", charSequence32, "");
        org.junit.Assert.assertNotNull(charSequenceItor33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[hi!, ]" + "'", str44, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence45 + "' != '" + "hi!" + "'", charSequence45, "hi!");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor5 = charSequenceList2.descendingIterator();
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList8 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList8.spliterator();
        java.util.LinkedList<java.lang.Comparable<java.lang.String>> strComparableList11 = new java.util.LinkedList<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = charSequenceList8.contains((java.lang.Object) strComparableList11);
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = charSequenceList15.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        int int25 = charSequenceList22.size();
        boolean boolean26 = charSequenceList15.contains((java.lang.Object) charSequenceList22);
        java.lang.CharSequence charSequence27 = charSequenceList15.element();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator39 = charSequenceList37.spliterator();
        int int40 = charSequenceList37.size();
        boolean boolean41 = charSequenceList30.contains((java.lang.Object) charSequenceList37);
        java.lang.CharSequence charSequence42 = charSequenceList30.element();
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator47 = charSequenceList45.spliterator();
        boolean boolean48 = charSequenceList45.isEmpty();
        charSequenceList45.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str51 = charSequenceList45.toString();
        boolean boolean52 = charSequenceList30.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        boolean boolean54 = charSequenceList45.offer((java.lang.CharSequence) "");
        charSequenceList45.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean59 = charSequenceList45.add((java.lang.CharSequence) "");
        int int60 = charSequenceList15.lastIndexOf((java.lang.Object) boolean59);
        boolean boolean61 = charSequenceList8.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray63 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList64 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64, charSequenceArray63);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList67 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean68 = charSequenceList64.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList67);
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList71 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList71, charSequenceArray70);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator73 = charSequenceList71.spliterator();
        int int74 = charSequenceList71.size();
        boolean boolean75 = charSequenceList64.contains((java.lang.Object) charSequenceList71);
        java.lang.CharSequence charSequence76 = charSequenceList64.element();
        java.lang.CharSequence[] charSequenceArray78 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList79 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList79, charSequenceArray78);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator81 = charSequenceList79.spliterator();
        boolean boolean82 = charSequenceList79.isEmpty();
        charSequenceList79.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str85 = charSequenceList79.toString();
        boolean boolean86 = charSequenceList64.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList79);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream87 = charSequenceList79.stream();
        boolean boolean88 = charSequenceList15.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList79);
        boolean boolean89 = charSequenceList2.equals((java.lang.Object) charSequenceList79);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream90 = charSequenceList79.stream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertNotNull(charSequenceItor5);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[hi!, ]" + "'", str51, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(charSequenceArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + charSequence76 + "' != '" + "hi!" + "'", charSequence76, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[hi!, ]" + "'", str85, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(charSequenceStream87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(charSequenceStream90);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence charSequence15 = charSequenceList9.pollLast();
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = charSequenceList18.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        java.lang.CharSequence charSequence23 = charSequenceList18.peek();
        boolean boolean25 = charSequenceList18.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = charSequenceList28.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean33 = charSequenceList18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean34 = charSequenceList9.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        boolean boolean43 = charSequenceList37.offerFirst((java.lang.CharSequence) "hi!");
        boolean boolean44 = charSequenceList31.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceList47.spliterator();
        boolean boolean50 = charSequenceList47.isEmpty();
        java.lang.CharSequence charSequence51 = charSequenceList47.removeLast();
        java.lang.CharSequence[] charSequenceArray53 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList54 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList54, charSequenceArray53);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList57 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean58 = charSequenceList54.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList57);
        java.lang.CharSequence charSequence59 = charSequenceList54.peek();
        boolean boolean61 = charSequenceList54.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray63 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList64 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64, charSequenceArray63);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList67 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean68 = charSequenceList64.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList67);
        boolean boolean69 = charSequenceList54.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList67);
        java.lang.CharSequence charSequence70 = charSequenceList54.pop();
        boolean boolean71 = charSequenceList47.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList54);
        java.lang.CharSequence[] charSequenceArray73 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList74 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList74, charSequenceArray73);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList77 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean78 = charSequenceList74.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList77);
        java.lang.Object obj79 = null;
        boolean boolean80 = charSequenceList74.equals(obj79);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList81 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList74);
        java.lang.CharSequence charSequence82 = charSequenceList74.peek();
        java.lang.CharSequence charSequence83 = charSequenceList74.remove();
        boolean boolean84 = charSequenceList54.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList74);
        boolean boolean85 = charSequenceList31.removeFirstOccurrence((java.lang.Object) charSequenceList74);
        java.lang.String str86 = charSequenceList31.toString();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNull(charSequence15);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "hi!" + "'", charSequence23, "hi!");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "" + "'", charSequence51, "");
        org.junit.Assert.assertNotNull(charSequenceArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + charSequence59 + "' != '" + "hi!" + "'", charSequence59, "hi!");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charSequenceArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + charSequence70 + "' != '" + "hi!" + "'", charSequence70, "hi!");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(charSequenceArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + charSequence82 + "' != '" + "hi!" + "'", charSequence82, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence83 + "' != '" + "hi!" + "'", charSequence83, "hi!");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[]" + "'", str86, "[]");
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence9 = charSequenceList2.removeLast();
        java.lang.Object obj10 = null;
        int int11 = charSequenceList2.lastIndexOf(obj10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence12 = charSequenceList2.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList13.equals(obj18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        boolean boolean25 = charSequenceList13.removeLastOccurrence((java.lang.Object) charSequenceList22);
        java.lang.CharSequence charSequence26 = charSequenceList22.removeLast();
        boolean boolean27 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence charSequence28 = charSequenceList2.pollFirst();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor29 = charSequenceList2.iterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence30 = charSequenceList2.getFirst();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNotNull(charSequenceItor29);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        java.lang.CharSequence charSequence6 = charSequenceList2.remove();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator7 = charSequenceList2.spliterator();
        java.util.LinkedList<java.lang.CharSequence> charSequenceList8 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceSpliterator7);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence charSequence15 = charSequenceList9.pollLast();
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = charSequenceList18.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        java.lang.CharSequence charSequence23 = charSequenceList18.peek();
        boolean boolean25 = charSequenceList18.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = charSequenceList28.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean33 = charSequenceList18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean34 = charSequenceList9.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        boolean boolean43 = charSequenceList37.offerFirst((java.lang.CharSequence) "hi!");
        boolean boolean44 = charSequenceList31.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor45 = charSequenceList37.listIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence47 = charSequenceList37.get(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNull(charSequence15);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "hi!" + "'", charSequence23, "hi!");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceItor45);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList2.spliterator();
        boolean boolean12 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        charSequenceList2.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceList18.spliterator();
        boolean boolean21 = charSequenceList18.isEmpty();
        boolean boolean22 = charSequenceList2.equals((java.lang.Object) charSequenceList18);
        java.lang.CharSequence charSequence24 = charSequenceList2.remove((int) (short) 0);
        java.lang.CharSequence charSequence25 = charSequenceList2.getLast();
        boolean boolean27 = charSequenceList2.offerLast((java.lang.CharSequence) "[hi!]");
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.Object obj35 = charSequenceList33.clone();
        boolean boolean36 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "hi!" + "'", charSequence24, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "[]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        java.util.LinkedList<java.lang.Comparable<java.lang.String>> strComparableList5 = new java.util.LinkedList<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = charSequenceList2.contains((java.lang.Object) strComparableList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = charSequenceList9.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator18 = charSequenceList16.spliterator();
        int int19 = charSequenceList16.size();
        boolean boolean20 = charSequenceList9.contains((java.lang.Object) charSequenceList16);
        java.lang.CharSequence charSequence21 = charSequenceList9.element();
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = charSequenceList24.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceList31.spliterator();
        int int34 = charSequenceList31.size();
        boolean boolean35 = charSequenceList24.contains((java.lang.Object) charSequenceList31);
        java.lang.CharSequence charSequence36 = charSequenceList24.element();
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceList39.spliterator();
        boolean boolean42 = charSequenceList39.isEmpty();
        charSequenceList39.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str45 = charSequenceList39.toString();
        boolean boolean46 = charSequenceList24.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean48 = charSequenceList39.offer((java.lang.CharSequence) "");
        charSequenceList39.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean53 = charSequenceList39.add((java.lang.CharSequence) "");
        int int54 = charSequenceList9.lastIndexOf((java.lang.Object) boolean53);
        boolean boolean55 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList58 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58, charSequenceArray57);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList61 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean62 = charSequenceList58.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList61);
        java.lang.CharSequence charSequence63 = charSequenceList58.peek();
        java.lang.CharSequence charSequence64 = charSequenceList58.pollFirst();
        charSequenceList58.addFirst((java.lang.CharSequence) "hi!");
        int int67 = charSequenceList9.indexOf((java.lang.Object) charSequenceList58);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream68 = charSequenceList58.parallelStream();
        java.lang.CharSequence charSequence69 = charSequenceList58.getFirst();
        java.lang.CharSequence charSequence70 = charSequenceList58.poll();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "hi!" + "'", charSequence21, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "hi!" + "'", charSequence36, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[hi!, ]" + "'", str45, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + charSequence63 + "' != '" + "hi!" + "'", charSequence63, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence64 + "' != '" + "hi!" + "'", charSequence64, "hi!");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(charSequenceStream68);
        org.junit.Assert.assertEquals("'" + charSequence69 + "' != '" + "hi!" + "'", charSequence69, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence70 + "' != '" + "hi!" + "'", charSequence70, "hi!");
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList8 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList8.spliterator();
        boolean boolean11 = charSequenceList8.isEmpty();
        charSequenceList8.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean15 = charSequenceList8.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence16 = charSequenceList8.pop();
        charSequenceList8.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean20 = charSequenceList8.offer((java.lang.CharSequence) "[hi!, ]");
        boolean boolean22 = charSequenceList8.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence23 = charSequenceList8.getFirst();
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList26 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26, charSequenceArray25);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = charSequenceList26.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        int int32 = charSequenceList26.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence33 = charSequenceList26.removeLast();
        java.lang.CharSequence charSequence34 = charSequenceList26.peekLast();
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        java.lang.CharSequence[] charSequenceArray43 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList44 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList44, charSequenceArray43);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator46 = charSequenceList44.spliterator();
        int int47 = charSequenceList44.size();
        boolean boolean48 = charSequenceList37.contains((java.lang.Object) charSequenceList44);
        java.lang.CharSequence charSequence49 = charSequenceList37.element();
        java.lang.CharSequence[] charSequenceArray51 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52, charSequenceArray51);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator54 = charSequenceList52.spliterator();
        boolean boolean55 = charSequenceList52.isEmpty();
        charSequenceList52.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str58 = charSequenceList52.toString();
        boolean boolean59 = charSequenceList37.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream60 = charSequenceList52.stream();
        boolean boolean61 = charSequenceList26.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        java.lang.CharSequence charSequence62 = charSequenceList26.remove();
        boolean boolean63 = charSequenceList8.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26);
        int int64 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList26);
        java.lang.CharSequence[] charSequenceArray66 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList67 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList67, charSequenceArray66);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList70 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean71 = charSequenceList67.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList70);
        java.lang.CharSequence[] charSequenceArray73 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList74 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList74, charSequenceArray73);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator76 = charSequenceList74.spliterator();
        int int77 = charSequenceList74.size();
        boolean boolean78 = charSequenceList67.contains((java.lang.Object) charSequenceList74);
        java.lang.CharSequence charSequence79 = charSequenceList67.element();
        java.lang.CharSequence[] charSequenceArray81 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList82 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList82, charSequenceArray81);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator84 = charSequenceList82.spliterator();
        boolean boolean85 = charSequenceList82.isEmpty();
        charSequenceList82.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str88 = charSequenceList82.toString();
        boolean boolean89 = charSequenceList67.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList82);
        java.lang.CharSequence charSequence90 = null;
        charSequenceList67.addFirst(charSequence90);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream92 = charSequenceList67.stream();
        java.lang.CharSequence charSequence95 = charSequenceList67.set((int) (byte) 1, (java.lang.CharSequence) "[hi!]");
        boolean boolean96 = charSequenceList26.equals((java.lang.Object) (byte) 1);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "[hi!, ]" + "'", charSequence23, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "hi!" + "'", charSequence33, "hi!");
        org.junit.Assert.assertNull(charSequence34);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "hi!" + "'", charSequence49, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[hi!, ]" + "'", str58, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(charSequenceStream60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + charSequence62 + "' != '" + "hi!" + "'", charSequence62, "hi!");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(charSequenceArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + charSequence79 + "' != '" + "hi!" + "'", charSequence79, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[hi!, ]" + "'", str88, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(charSequenceStream92);
        org.junit.Assert.assertEquals("'" + charSequence95 + "' != '" + "hi!" + "'", charSequence95, "hi!");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence22 = charSequenceList17.peek();
        boolean boolean24 = charSequenceList17.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean25 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence26 = charSequenceList2.pop();
        java.lang.CharSequence charSequence27 = charSequenceList2.peekFirst();
        int int28 = charSequenceList2.size();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor29 = charSequenceList2.listIterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNull(charSequence27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(charSequenceItor29);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        java.util.LinkedList<java.lang.CharSequence> charSequenceList0 = new java.util.LinkedList<java.lang.CharSequence>();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor1 = charSequenceList0.descendingIterator();
        charSequenceList0.addFirst((java.lang.CharSequence) "");
        org.junit.Assert.assertNotNull(charSequenceItor1);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        boolean boolean14 = charSequenceList2.isEmpty();
        java.lang.Object obj15 = charSequenceList2.clone();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceList2.parallelStream();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList19.equals(obj24);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = charSequenceList28.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        java.lang.CharSequence charSequence33 = charSequenceList28.peek();
        java.lang.CharSequence charSequence34 = charSequenceList28.pollFirst();
        boolean boolean35 = charSequenceList19.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        boolean boolean36 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence charSequence37 = charSequenceList28.peek();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "hi!" + "'", charSequence33, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(charSequence37);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        java.lang.CharSequence charSequence5 = charSequenceList2.getLast();
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        boolean boolean12 = charSequenceList9.isEmpty();
        java.lang.CharSequence charSequence13 = charSequenceList9.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceList9.stream();
        java.lang.String str15 = charSequenceList9.toString();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator21 = charSequenceList19.spliterator();
        boolean boolean22 = charSequenceList19.isEmpty();
        java.lang.CharSequence charSequence23 = charSequenceList19.removeLast();
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList26 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26, charSequenceArray25);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = charSequenceList26.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        java.lang.CharSequence charSequence31 = charSequenceList26.peek();
        boolean boolean33 = charSequenceList26.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = charSequenceList36.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean41 = charSequenceList26.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence charSequence42 = charSequenceList26.pop();
        boolean boolean43 = charSequenceList19.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26);
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = charSequenceList46.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList49);
        java.lang.Object obj51 = null;
        boolean boolean52 = charSequenceList46.equals(obj51);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList53 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        java.lang.CharSequence charSequence54 = charSequenceList46.peek();
        java.lang.CharSequence charSequence55 = charSequenceList46.remove();
        boolean boolean56 = charSequenceList26.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        boolean boolean57 = charSequenceList9.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        java.lang.CharSequence[] charSequenceArray59 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList60 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList60, charSequenceArray59);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList63 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean64 = charSequenceList60.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList63);
        int int66 = charSequenceList60.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean68 = charSequenceList60.contains((java.lang.Object) (-1.0d));
        java.lang.CharSequence charSequence69 = charSequenceList60.getFirst();
        boolean boolean70 = charSequenceList46.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList60);
        boolean boolean71 = charSequenceList2.remove((java.lang.Object) charSequenceList60);
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList2.add((int) (byte) 10, (java.lang.CharSequence) "[hi!, [[hi!, ]]]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertEquals("'" + charSequence5 + "' != '" + "" + "'", charSequence5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[]" + "'", str6, "[]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[]" + "'", str15, "[]");
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "" + "'", charSequence23, "");
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "hi!" + "'", charSequence31, "hi!");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "hi!" + "'", charSequence54, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence55 + "' != '" + "hi!" + "'", charSequence55, "hi!");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charSequenceArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + charSequence69 + "' != '" + "hi!" + "'", charSequence69, "hi!");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence9 = charSequenceList2.removeLast();
        java.lang.CharSequence charSequence10 = charSequenceList2.peekLast();
        int int11 = charSequenceList2.size();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence14 = charSequenceList2.set((int) (short) 10, (java.lang.CharSequence) "[[hi!, ], hi!, ]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertNull(charSequence10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.peek();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceList2.parallelStream();
        charSequenceList2.push((java.lang.CharSequence) "hi!");
        charSequenceList2.add(0, (java.lang.CharSequence) "[hi!, [hi!, ]]");
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList2.add(100, (java.lang.CharSequence) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence22 = charSequenceList17.peek();
        boolean boolean24 = charSequenceList17.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean25 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence26 = charSequenceList2.pop();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = charSequenceList29.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.CharSequence charSequence34 = charSequenceList29.peek();
        java.lang.CharSequence charSequence35 = charSequenceList29.pollFirst();
        charSequenceList29.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = charSequenceList40.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        java.lang.Object obj45 = null;
        boolean boolean46 = charSequenceList40.equals(obj45);
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator51 = charSequenceList49.spliterator();
        boolean boolean52 = charSequenceList40.removeLastOccurrence((java.lang.Object) charSequenceList49);
        charSequenceList40.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean55 = charSequenceList29.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        boolean boolean56 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.CharSequence> charSequenceItor58 = charSequenceList2.listIterator((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.pollFirst();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.parallelStream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean18 = charSequenceList15.isEmpty();
        java.lang.CharSequence charSequence19 = charSequenceList15.peekLast();
        java.lang.CharSequence charSequence20 = charSequenceList15.poll();
        boolean boolean21 = charSequenceList15.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence22 = charSequenceList15.getFirst();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(charSequence19);
        org.junit.Assert.assertNull(charSequence20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.pop();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence13 = charSequenceList2.poll();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = charSequenceList16.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence charSequence21 = charSequenceList16.peek();
        boolean boolean23 = charSequenceList16.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList26 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26, charSequenceArray25);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = charSequenceList26.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        boolean boolean31 = charSequenceList16.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        charSequenceList16.clear();
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = charSequenceList35.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        java.lang.Object obj40 = charSequenceList38.clone();
        int int41 = charSequenceList16.lastIndexOf((java.lang.Object) charSequenceList38);
        java.lang.CharSequence charSequence42 = charSequenceList38.peekFirst();
        java.lang.CharSequence charSequence43 = charSequenceList38.peekFirst();
        boolean boolean44 = charSequenceList2.removeFirstOccurrence((java.lang.Object) charSequenceList38);
        java.lang.CharSequence charSequence45 = charSequenceList38.pollLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "hi!" + "'", charSequence21, "hi!");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(charSequence42);
        org.junit.Assert.assertNull(charSequence43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(charSequence45);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        java.lang.CharSequence charSequence6 = charSequenceList2.remove();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        boolean boolean12 = charSequenceList9.isEmpty();
        charSequenceList9.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean16 = charSequenceList9.offerLast((java.lang.CharSequence) "");
        charSequenceList9.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence19 = charSequenceList9.removeLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor20 = charSequenceList9.listIterator();
        boolean boolean21 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList9);
        boolean boolean22 = charSequenceList9.isEmpty();
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator27 = charSequenceList25.spliterator();
        boolean boolean28 = charSequenceList25.isEmpty();
        charSequenceList25.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str31 = charSequenceList25.toString();
        java.lang.CharSequence charSequence32 = charSequenceList25.removeFirst();
        boolean boolean34 = charSequenceList25.removeLastOccurrence((java.lang.Object) (short) 100);
        boolean boolean35 = charSequenceList9.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        java.lang.CharSequence charSequence36 = charSequenceList9.peekLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertNotNull(charSequenceItor20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[hi!, ]" + "'", str31, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "hi!" + "'", charSequence32, "hi!");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "" + "'", charSequence36, "");
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        charSequenceList2.clear();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.Object obj26 = charSequenceList24.clone();
        int int27 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList24);
        java.lang.CharSequence charSequence28 = charSequenceList2.peekLast();
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = charSequenceList32.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        java.lang.CharSequence charSequence37 = charSequenceList32.peek();
        boolean boolean39 = charSequenceList32.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42, charSequenceArray41);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = charSequenceList42.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        boolean boolean47 = charSequenceList32.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        charSequenceList32.clear();
        java.lang.CharSequence[] charSequenceArray50 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList51 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList51, charSequenceArray50);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList54 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean55 = charSequenceList51.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList54);
        java.lang.Object obj56 = charSequenceList54.clone();
        int int57 = charSequenceList32.lastIndexOf((java.lang.Object) charSequenceList54);
        java.lang.CharSequence[] charSequenceArray59 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList60 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList60, charSequenceArray59);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList63 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean64 = charSequenceList60.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList63);
        java.lang.CharSequence[] charSequenceArray66 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList67 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList67, charSequenceArray66);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator69 = charSequenceList67.spliterator();
        int int70 = charSequenceList67.size();
        boolean boolean71 = charSequenceList60.contains((java.lang.Object) charSequenceList67);
        java.lang.CharSequence charSequence72 = charSequenceList60.element();
        java.lang.CharSequence[] charSequenceArray74 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList75 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList75, charSequenceArray74);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator77 = charSequenceList75.spliterator();
        boolean boolean78 = charSequenceList75.isEmpty();
        charSequenceList75.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str81 = charSequenceList75.toString();
        boolean boolean82 = charSequenceList60.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList75);
        boolean boolean84 = charSequenceList75.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor85 = charSequenceList75.descendingIterator();
        charSequenceList75.clear();
        boolean boolean87 = charSequenceList32.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList75);
        java.lang.CharSequence charSequence88 = charSequenceList75.peekLast();
        int int89 = charSequenceList29.indexOf((java.lang.Object) charSequence88);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "hi!" + "'", charSequence37, "hi!");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "[]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(charSequenceArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + charSequence72 + "' != '" + "hi!" + "'", charSequence72, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[hi!, ]" + "'", str81, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(charSequenceItor85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(charSequence88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList13.equals(obj18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        boolean boolean25 = charSequenceList13.removeLastOccurrence((java.lang.Object) charSequenceList22);
        java.lang.CharSequence charSequence26 = charSequenceList22.removeLast();
        boolean boolean27 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor28 = charSequenceList2.descendingIterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceItor28);
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceList11.spliterator();
        java.lang.CharSequence charSequence16 = charSequenceList11.element();
        boolean boolean18 = charSequenceList11.offerFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean20 = charSequenceList11.offer((java.lang.CharSequence) "[hi!, [hi!, ]]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence charSequence15 = charSequenceList9.pollLast();
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = charSequenceList18.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        java.lang.CharSequence charSequence23 = charSequenceList18.peek();
        boolean boolean25 = charSequenceList18.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = charSequenceList28.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean33 = charSequenceList18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean34 = charSequenceList9.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        boolean boolean43 = charSequenceList37.offerFirst((java.lang.CharSequence) "hi!");
        boolean boolean44 = charSequenceList31.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        boolean boolean46 = charSequenceList31.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = charSequenceList49.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        java.lang.CharSequence charSequence54 = charSequenceList49.element();
        charSequenceList49.addFirst((java.lang.CharSequence) "");
        int int57 = charSequenceList31.lastIndexOf((java.lang.Object) charSequenceList49);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.CharSequence> charSequenceList60 = charSequenceList31.subList((int) (byte) -1, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: fromIndex = -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNull(charSequence15);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "hi!" + "'", charSequence23, "hi!");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "hi!" + "'", charSequence54, "hi!");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.Object obj22 = null;
        boolean boolean23 = charSequenceList17.equals(obj22);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence25 = charSequenceList17.peek();
        boolean boolean26 = charSequenceList9.equals((java.lang.Object) charSequenceList17);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = charSequenceList29.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.CharSequence charSequence34 = charSequenceList29.peek();
        java.lang.CharSequence charSequence35 = charSequenceList29.pollFirst();
        charSequenceList29.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = charSequenceList40.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        java.lang.Object obj45 = null;
        boolean boolean46 = charSequenceList40.equals(obj45);
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator51 = charSequenceList49.spliterator();
        boolean boolean52 = charSequenceList40.removeLastOccurrence((java.lang.Object) charSequenceList49);
        java.lang.CharSequence charSequence53 = charSequenceList49.removeLast();
        boolean boolean54 = charSequenceList29.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49);
        java.lang.CharSequence charSequence55 = charSequenceList29.pollFirst();
        boolean boolean56 = charSequenceList9.removeLastOccurrence((java.lang.Object) charSequence55);
        java.lang.String str57 = charSequenceList9.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence58 = charSequenceList9.pop();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(charSequence55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[]" + "'", str57, "[]");
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        charSequenceList2.clear();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor6 = charSequenceList2.listIterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertNotNull(charSequenceItor6);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence charSequence17 = charSequenceList12.peek();
        java.lang.CharSequence charSequence18 = charSequenceList12.pollFirst();
        boolean boolean19 = charSequenceList2.contains((java.lang.Object) charSequence18);
        java.lang.CharSequence charSequence20 = charSequenceList2.peekFirst();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor21 = charSequenceList2.descendingIterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "hi!" + "'", charSequence18, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "hi!" + "'", charSequence20, "hi!");
        org.junit.Assert.assertNotNull(charSequenceItor21);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        charSequenceList2.addFirst((java.lang.CharSequence) "[hi!, ]");
        charSequenceList2.clear();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceList15.spliterator();
        java.util.LinkedList<java.lang.Comparable<java.lang.String>> strComparableList18 = new java.util.LinkedList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = charSequenceList15.contains((java.lang.Object) strComparableList18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = charSequenceList22.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        int int32 = charSequenceList29.size();
        boolean boolean33 = charSequenceList22.contains((java.lang.Object) charSequenceList29);
        java.lang.CharSequence charSequence34 = charSequenceList22.element();
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        java.lang.CharSequence[] charSequenceArray43 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList44 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList44, charSequenceArray43);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator46 = charSequenceList44.spliterator();
        int int47 = charSequenceList44.size();
        boolean boolean48 = charSequenceList37.contains((java.lang.Object) charSequenceList44);
        java.lang.CharSequence charSequence49 = charSequenceList37.element();
        java.lang.CharSequence[] charSequenceArray51 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52, charSequenceArray51);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator54 = charSequenceList52.spliterator();
        boolean boolean55 = charSequenceList52.isEmpty();
        charSequenceList52.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str58 = charSequenceList52.toString();
        boolean boolean59 = charSequenceList37.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        boolean boolean61 = charSequenceList52.offer((java.lang.CharSequence) "");
        charSequenceList52.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean66 = charSequenceList52.add((java.lang.CharSequence) "");
        int int67 = charSequenceList22.lastIndexOf((java.lang.Object) boolean66);
        boolean boolean68 = charSequenceList15.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList71 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList71, charSequenceArray70);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList74 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean75 = charSequenceList71.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList74);
        java.lang.CharSequence charSequence76 = charSequenceList71.peek();
        java.lang.CharSequence charSequence77 = charSequenceList71.pollFirst();
        charSequenceList71.addFirst((java.lang.CharSequence) "hi!");
        int int80 = charSequenceList22.indexOf((java.lang.Object) charSequenceList71);
        boolean boolean81 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        boolean boolean83 = charSequenceList2.offer((java.lang.CharSequence) "[[hi!, ]]");
        java.lang.CharSequence charSequence84 = charSequenceList2.peek();
        java.lang.CharSequence charSequence85 = charSequenceList2.getLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "hi!" + "'", charSequence49, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[hi!, ]" + "'", str58, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + charSequence76 + "' != '" + "hi!" + "'", charSequence76, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence77 + "' != '" + "hi!" + "'", charSequence77, "hi!");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertEquals("'" + charSequence84 + "' != '" + "[[hi!, ]]" + "'", charSequence84, "[[hi!, ]]");
        org.junit.Assert.assertEquals("'" + charSequence85 + "' != '" + "[[hi!, ]]" + "'", charSequence85, "[[hi!, ]]");
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray9 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList10 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList10, charSequenceArray9);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = charSequenceList10.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList10.equals(obj15);
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator21 = charSequenceList19.spliterator();
        boolean boolean22 = charSequenceList10.removeLastOccurrence((java.lang.Object) charSequenceList19);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = charSequenceList25.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence charSequence30 = charSequenceList25.peek();
        boolean boolean32 = charSequenceList25.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean33 = charSequenceList10.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        java.lang.CharSequence charSequence34 = charSequenceList10.pop();
        java.lang.CharSequence charSequence35 = charSequenceList10.peekFirst();
        java.lang.CharSequence charSequence36 = charSequenceList10.peekFirst();
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = charSequenceList39.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceList46.spliterator();
        int int49 = charSequenceList46.size();
        boolean boolean50 = charSequenceList39.contains((java.lang.Object) charSequenceList46);
        java.lang.CharSequence charSequence51 = charSequenceList39.element();
        java.lang.CharSequence[] charSequenceArray53 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList54 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList54, charSequenceArray53);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator56 = charSequenceList54.spliterator();
        boolean boolean57 = charSequenceList54.isEmpty();
        charSequenceList54.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str60 = charSequenceList54.toString();
        boolean boolean61 = charSequenceList39.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList54);
        boolean boolean63 = charSequenceList54.offer((java.lang.CharSequence) "");
        charSequenceList54.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList54.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        charSequenceList54.addLast((java.lang.CharSequence) "hi!");
        int int72 = charSequenceList10.indexOf((java.lang.Object) charSequenceList54);
        charSequenceList54.addFirst((java.lang.CharSequence) "");
        int int75 = charSequenceList54.size();
        int int76 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList54);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "hi!" + "'", charSequence30, "hi!");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
        org.junit.Assert.assertNull(charSequence35);
        org.junit.Assert.assertNull(charSequence36);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "hi!" + "'", charSequence51, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[hi!, ]" + "'", str60, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 7 + "'", int75 == 7);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean18 = charSequenceList15.isEmpty();
        java.lang.CharSequence charSequence19 = charSequenceList15.peekLast();
        java.lang.CharSequence charSequence20 = charSequenceList15.poll();
        java.lang.String str21 = charSequenceList15.toString();
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = charSequenceList24.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceList31.spliterator();
        int int34 = charSequenceList31.size();
        boolean boolean35 = charSequenceList24.contains((java.lang.Object) charSequenceList31);
        java.lang.CharSequence charSequence36 = charSequenceList24.element();
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceList39.spliterator();
        boolean boolean42 = charSequenceList39.isEmpty();
        charSequenceList39.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str45 = charSequenceList39.toString();
        boolean boolean46 = charSequenceList24.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean48 = charSequenceList39.offer((java.lang.CharSequence) "");
        charSequenceList39.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList39.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        boolean boolean56 = charSequenceList39.offerFirst((java.lang.CharSequence) "hi!");
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator57 = charSequenceList39.spliterator();
        boolean boolean58 = charSequenceList15.removeFirstOccurrence((java.lang.Object) charSequenceSpliterator57);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator59 = charSequenceList15.spliterator();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor60 = charSequenceList15.listIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence63 = charSequenceList15.set((int) (short) -1, (java.lang.CharSequence) "[hi!, ]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(charSequence19);
        org.junit.Assert.assertNull(charSequence20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[]" + "'", str21, "[]");
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "hi!" + "'", charSequence36, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[hi!, ]" + "'", str45, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator59);
        org.junit.Assert.assertNotNull(charSequenceItor60);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence11 = charSequenceList2.pop();
        java.lang.Object[] objArray12 = charSequenceList2.toArray();
        java.lang.CharSequence charSequence13 = charSequenceList2.peekFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "hi!" + "'", charSequence11, "hi!");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNull(charSequence13);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.pop();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence13 = charSequenceList2.poll();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = charSequenceList16.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence charSequence21 = charSequenceList16.peek();
        boolean boolean23 = charSequenceList16.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList26 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26, charSequenceArray25);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = charSequenceList26.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        boolean boolean31 = charSequenceList16.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        charSequenceList16.clear();
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = charSequenceList35.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        java.lang.Object obj40 = charSequenceList38.clone();
        int int41 = charSequenceList16.lastIndexOf((java.lang.Object) charSequenceList38);
        java.lang.CharSequence charSequence42 = charSequenceList38.peekFirst();
        java.lang.CharSequence charSequence43 = charSequenceList38.peekFirst();
        boolean boolean44 = charSequenceList2.removeFirstOccurrence((java.lang.Object) charSequenceList38);
        charSequenceList38.addLast((java.lang.CharSequence) "");
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.CharSequence> charSequenceList49 = charSequenceList38.subList((int) (byte) 100, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(100) > toIndex(1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "hi!" + "'", charSequence21, "hi!");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(charSequence42);
        org.junit.Assert.assertNull(charSequence43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        java.lang.CharSequence charSequence6 = charSequenceList2.pollLast();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence7 = charSequenceList2.removeFirst();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceList2.parallelStream();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator21 = charSequenceList19.spliterator();
        int int22 = charSequenceList19.size();
        boolean boolean23 = charSequenceList12.contains((java.lang.Object) charSequenceList19);
        boolean boolean24 = charSequenceList12.isEmpty();
        java.lang.Object obj25 = charSequenceList12.clone();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream26 = charSequenceList12.parallelStream();
        boolean boolean27 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.Object[] objArray28 = charSequenceList2.toArray();
        boolean boolean30 = charSequenceList2.add((java.lang.CharSequence) "[hi!, hi!, hi!, []]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence charSequence18 = charSequenceList2.pop();
        java.util.function.UnaryOperator<java.lang.CharSequence> charSequenceUnaryOperator19 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList2.replaceAll(charSequenceUnaryOperator19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "hi!" + "'", charSequence18, "hi!");
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence charSequence15 = charSequenceList11.element();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "" + "'", charSequence15, "");
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        boolean boolean14 = charSequenceList2.isEmpty();
        java.lang.Object obj15 = charSequenceList2.clone();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceList2.parallelStream();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList19.equals(obj24);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = charSequenceList28.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        java.lang.CharSequence charSequence33 = charSequenceList28.peek();
        java.lang.CharSequence charSequence34 = charSequenceList28.pollFirst();
        boolean boolean35 = charSequenceList19.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        boolean boolean36 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor37 = charSequenceList2.listIterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "hi!" + "'", charSequence33, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charSequenceItor37);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        charSequenceList2.clear();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.Object obj26 = charSequenceList24.clone();
        int int27 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList24);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator39 = charSequenceList37.spliterator();
        int int40 = charSequenceList37.size();
        boolean boolean41 = charSequenceList30.contains((java.lang.Object) charSequenceList37);
        java.lang.CharSequence charSequence42 = charSequenceList30.element();
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator47 = charSequenceList45.spliterator();
        boolean boolean48 = charSequenceList45.isEmpty();
        charSequenceList45.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str51 = charSequenceList45.toString();
        boolean boolean52 = charSequenceList30.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        boolean boolean54 = charSequenceList45.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor55 = charSequenceList45.descendingIterator();
        charSequenceList45.clear();
        boolean boolean57 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence58 = charSequenceList45.removeFirst();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[hi!, ]" + "'", str51, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charSequenceItor55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.CharSequence charSequence4 = charSequenceList2.getLast();
        boolean boolean5 = charSequenceList2.isEmpty();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator29 = charSequenceList27.spliterator();
        java.lang.CharSequence charSequence30 = charSequenceList27.getLast();
        java.lang.CharSequence charSequence31 = charSequenceList27.removeLast();
        boolean boolean32 = charSequenceList17.remove((java.lang.Object) charSequenceList27);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.CharSequence> charSequenceList35 = charSequenceList27.subList(10, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator29);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "" + "'", charSequence30, "");
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "" + "'", charSequence31, "");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceList11.spliterator();
        java.lang.CharSequence charSequence16 = charSequenceList11.element();
        boolean boolean18 = charSequenceList11.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence19 = charSequenceList11.pop();
        charSequenceList11.addLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence22 = charSequenceList11.remove();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "[hi!, ]" + "'", charSequence19, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "" + "'", charSequence22, "");
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceList2.parallelStream();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceList18.spliterator();
        int int21 = charSequenceList18.size();
        boolean boolean22 = charSequenceList11.contains((java.lang.Object) charSequenceList18);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = charSequenceList25.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence charSequence30 = charSequenceList25.peek();
        java.lang.CharSequence charSequence31 = charSequenceList25.pollFirst();
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceList34.spliterator();
        boolean boolean37 = charSequenceList34.isEmpty();
        charSequenceList34.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean41 = charSequenceList34.offerLast((java.lang.CharSequence) "");
        charSequenceList34.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean44 = charSequenceList25.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        boolean boolean45 = charSequenceList18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        int int46 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList18);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream47 = charSequenceList18.stream();
        java.lang.CharSequence charSequence48 = charSequenceList18.pop();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "hi!" + "'", charSequence30, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "hi!" + "'", charSequence31, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(charSequenceStream47);
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "" + "'", charSequence48, "");
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence22 = charSequenceList17.peek();
        boolean boolean24 = charSequenceList17.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean25 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence26 = charSequenceList2.pop();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = charSequenceList29.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.CharSequence charSequence34 = charSequenceList29.peek();
        java.lang.CharSequence charSequence35 = charSequenceList29.pollFirst();
        charSequenceList29.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = charSequenceList40.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        java.lang.Object obj45 = null;
        boolean boolean46 = charSequenceList40.equals(obj45);
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator51 = charSequenceList49.spliterator();
        boolean boolean52 = charSequenceList40.removeLastOccurrence((java.lang.Object) charSequenceList49);
        charSequenceList40.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean55 = charSequenceList29.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        boolean boolean56 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        java.lang.Object obj57 = charSequenceList2.clone();
        java.lang.CharSequence charSequence58 = charSequenceList2.peekFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "[]");
        org.junit.Assert.assertNull(charSequence58);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence charSequence15 = charSequenceList9.pollLast();
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = charSequenceList18.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        java.lang.CharSequence charSequence23 = charSequenceList18.peek();
        boolean boolean25 = charSequenceList18.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = charSequenceList28.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean33 = charSequenceList18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean34 = charSequenceList9.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        boolean boolean43 = charSequenceList37.offerFirst((java.lang.CharSequence) "hi!");
        boolean boolean44 = charSequenceList31.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        int int45 = charSequenceList37.size();
        java.lang.CharSequence charSequence47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence48 = charSequenceList37.set((-1), charSequence47);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNull(charSequence15);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "hi!" + "'", charSequence23, "hi!");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        java.util.LinkedList<java.lang.Comparable<java.lang.String>> strComparableList5 = new java.util.LinkedList<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = charSequenceList2.contains((java.lang.Object) strComparableList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = charSequenceList9.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator18 = charSequenceList16.spliterator();
        int int19 = charSequenceList16.size();
        boolean boolean20 = charSequenceList9.contains((java.lang.Object) charSequenceList16);
        java.lang.CharSequence charSequence21 = charSequenceList9.element();
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = charSequenceList24.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceList31.spliterator();
        int int34 = charSequenceList31.size();
        boolean boolean35 = charSequenceList24.contains((java.lang.Object) charSequenceList31);
        java.lang.CharSequence charSequence36 = charSequenceList24.element();
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceList39.spliterator();
        boolean boolean42 = charSequenceList39.isEmpty();
        charSequenceList39.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str45 = charSequenceList39.toString();
        boolean boolean46 = charSequenceList24.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean48 = charSequenceList39.offer((java.lang.CharSequence) "");
        charSequenceList39.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean53 = charSequenceList39.add((java.lang.CharSequence) "");
        int int54 = charSequenceList9.lastIndexOf((java.lang.Object) boolean53);
        boolean boolean55 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.lang.Object obj56 = charSequenceList2.clone();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "hi!" + "'", charSequence21, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "hi!" + "'", charSequence36, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[hi!, ]" + "'", str45, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "[, hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "[, hi!]");
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.Object obj9 = charSequenceList2.clone();
        java.lang.String str10 = charSequenceList2.toString();
        boolean boolean12 = charSequenceList2.add((java.lang.CharSequence) "[hi!, ]");
        java.lang.Object obj13 = charSequenceList2.clone();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "[hi!]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[hi!]" + "'", str10, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "[hi!, [hi!, ]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "[hi!, [hi!, ]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "[hi!, [hi!, ]]");
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList2.spliterator();
        boolean boolean12 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        charSequenceList2.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceList18.spliterator();
        boolean boolean21 = charSequenceList18.isEmpty();
        boolean boolean22 = charSequenceList2.equals((java.lang.Object) charSequenceList18);
        java.lang.CharSequence charSequence24 = charSequenceList2.remove((int) (short) 0);
        java.lang.CharSequence charSequence25 = charSequenceList2.getLast();
        boolean boolean27 = charSequenceList2.offerLast((java.lang.CharSequence) "[hi!]");
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        int int36 = charSequenceList30.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence39 = charSequenceList30.set((int) (byte) 0, (java.lang.CharSequence) "[hi!, ]");
        int int40 = charSequenceList2.indexOf((java.lang.Object) charSequence39);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "hi!" + "'", charSequence24, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "hi!" + "'", charSequence39, "hi!");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence charSequence9 = charSequenceList2.removeFirst();
        boolean boolean11 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor12 = charSequenceList2.listIterator();
        java.lang.Object obj13 = charSequenceList2.clone();
        java.util.Collection<java.lang.CharSequence> charSequenceCollection15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = charSequenceList2.addAll(10, charSequenceCollection15);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(charSequenceItor12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "[, hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "[, hi!]");
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList2.spliterator();
        boolean boolean12 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence13 = charSequenceList2.element();
        java.lang.CharSequence charSequence14 = charSequenceList2.peekLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor15 = charSequenceList2.listIterator();
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = charSequenceList18.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        java.lang.Object obj23 = null;
        boolean boolean24 = charSequenceList18.equals(obj23);
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = charSequenceList27.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        java.lang.CharSequence charSequence32 = charSequenceList27.peek();
        java.lang.CharSequence charSequence33 = charSequenceList27.pollFirst();
        boolean boolean34 = charSequenceList18.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        java.lang.CharSequence charSequence42 = charSequenceList37.peek();
        int int43 = charSequenceList18.indexOf((java.lang.Object) charSequence42);
        int int44 = charSequenceList2.indexOf((java.lang.Object) charSequence42);
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList50 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean51 = charSequenceList47.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList50);
        java.lang.Object obj52 = null;
        boolean boolean53 = charSequenceList47.equals(obj52);
        java.lang.CharSequence[] charSequenceArray55 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56, charSequenceArray55);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList59 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean60 = charSequenceList56.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList59);
        java.lang.CharSequence charSequence61 = charSequenceList56.peek();
        java.lang.CharSequence charSequence62 = charSequenceList56.pollFirst();
        boolean boolean63 = charSequenceList47.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56);
        java.lang.CharSequence[] charSequenceArray65 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList66 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList66, charSequenceArray65);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList69 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean70 = charSequenceList66.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList69);
        java.lang.CharSequence charSequence71 = charSequenceList66.peek();
        int int72 = charSequenceList47.indexOf((java.lang.Object) charSequence71);
        java.lang.CharSequence charSequence73 = charSequenceList47.pop();
        boolean boolean74 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "hi!" + "'", charSequence32, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "hi!" + "'", charSequence33, "hi!");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charSequenceArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + charSequence61 + "' != '" + "hi!" + "'", charSequence61, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence62 + "' != '" + "hi!" + "'", charSequence62, "hi!");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(charSequenceArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + charSequence71 + "' != '" + "hi!" + "'", charSequence71, "hi!");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertEquals("'" + charSequence73 + "' != '" + "hi!" + "'", charSequence73, "hi!");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        int int9 = charSequenceList2.size();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor10 = charSequenceList2.descendingIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence13 = charSequenceList2.set((int) (short) 1, (java.lang.CharSequence) "[hi!, ]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(charSequenceItor10);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceList2.parallelStream();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator21 = charSequenceList19.spliterator();
        int int22 = charSequenceList19.size();
        boolean boolean23 = charSequenceList12.contains((java.lang.Object) charSequenceList19);
        boolean boolean24 = charSequenceList12.isEmpty();
        java.lang.Object obj25 = charSequenceList12.clone();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream26 = charSequenceList12.parallelStream();
        boolean boolean27 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence charSequence28 = charSequenceList2.element();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "hi!" + "'", charSequence28, "hi!");
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        int int27 = charSequenceList2.indexOf((java.lang.Object) charSequence26);
        int int28 = charSequenceList2.size();
        charSequenceList2.addFirst((java.lang.CharSequence) "");
        charSequenceList2.add((int) (byte) 0, (java.lang.CharSequence) "[hi!, ]");
        boolean boolean35 = charSequenceList2.offerLast((java.lang.CharSequence) "[]");
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = charSequenceList39.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceList46.spliterator();
        int int49 = charSequenceList46.size();
        boolean boolean50 = charSequenceList39.contains((java.lang.Object) charSequenceList46);
        java.lang.CharSequence charSequence51 = charSequenceList39.element();
        java.lang.CharSequence[] charSequenceArray53 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList54 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList54, charSequenceArray53);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator56 = charSequenceList54.spliterator();
        boolean boolean57 = charSequenceList54.isEmpty();
        charSequenceList54.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str60 = charSequenceList54.toString();
        boolean boolean61 = charSequenceList39.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList54);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor62 = charSequenceList39.descendingIterator();
        java.lang.CharSequence charSequence63 = charSequenceList39.peekFirst();
        java.lang.CharSequence[] charSequenceArray66 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList67 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList67, charSequenceArray66);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList70 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean71 = charSequenceList67.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList70);
        java.lang.Object obj72 = null;
        boolean boolean73 = charSequenceList67.equals(obj72);
        java.lang.CharSequence[] charSequenceArray75 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList76 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList76, charSequenceArray75);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList79 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean80 = charSequenceList76.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList79);
        java.lang.CharSequence charSequence81 = charSequenceList76.peek();
        java.lang.CharSequence charSequence82 = charSequenceList76.pollFirst();
        boolean boolean83 = charSequenceList67.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList76);
        java.lang.CharSequence[] charSequenceArray85 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList86 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList86, charSequenceArray85);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList89 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean90 = charSequenceList86.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList89);
        java.lang.CharSequence charSequence91 = charSequenceList86.peek();
        int int92 = charSequenceList67.indexOf((java.lang.Object) charSequence91);
        int int93 = charSequenceList67.size();
        java.lang.Object obj94 = charSequenceList67.clone();
        boolean boolean95 = charSequenceList39.addAll((int) (short) 1, (java.util.Collection<java.lang.CharSequence>) charSequenceList67);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean96 = charSequenceList2.addAll(7, (java.util.Collection<java.lang.CharSequence>) charSequenceList67);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 7, Size: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "hi!" + "'", charSequence51, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[hi!, ]" + "'", str60, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(charSequenceItor62);
        org.junit.Assert.assertEquals("'" + charSequence63 + "' != '" + "hi!" + "'", charSequence63, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(charSequenceArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + charSequence81 + "' != '" + "hi!" + "'", charSequence81, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence82 + "' != '" + "hi!" + "'", charSequence82, "hi!");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(charSequenceArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + charSequence91 + "' != '" + "hi!" + "'", charSequence91, "hi!");
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        boolean boolean14 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence15 = charSequenceList2.remove();
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        boolean boolean18 = charSequenceList2.add((java.lang.CharSequence) "[hi!, [[hi!, ]]]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "hi!" + "'", charSequence15, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceList2.parallelStream();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceList18.spliterator();
        int int21 = charSequenceList18.size();
        boolean boolean22 = charSequenceList11.contains((java.lang.Object) charSequenceList18);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = charSequenceList25.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence charSequence30 = charSequenceList25.peek();
        java.lang.CharSequence charSequence31 = charSequenceList25.pollFirst();
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceList34.spliterator();
        boolean boolean37 = charSequenceList34.isEmpty();
        charSequenceList34.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean41 = charSequenceList34.offerLast((java.lang.CharSequence) "");
        charSequenceList34.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean44 = charSequenceList25.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        boolean boolean45 = charSequenceList18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        int int46 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList18);
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = charSequenceList49.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        java.lang.CharSequence charSequence54 = charSequenceList49.peek();
        java.lang.CharSequence charSequence55 = charSequenceList49.pollFirst();
        charSequenceList49.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray59 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList60 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList60, charSequenceArray59);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList63 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean64 = charSequenceList60.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList63);
        java.lang.Object obj65 = null;
        boolean boolean66 = charSequenceList60.equals(obj65);
        java.lang.CharSequence[] charSequenceArray68 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList69 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList69, charSequenceArray68);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator71 = charSequenceList69.spliterator();
        boolean boolean72 = charSequenceList60.removeLastOccurrence((java.lang.Object) charSequenceList69);
        charSequenceList60.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean75 = charSequenceList49.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList60);
        java.lang.CharSequence charSequence76 = charSequenceList49.remove();
        boolean boolean77 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "hi!" + "'", charSequence30, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "hi!" + "'", charSequence31, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "hi!" + "'", charSequence54, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence55 + "' != '" + "hi!" + "'", charSequence55, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(charSequenceArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertEquals("'" + charSequence76 + "' != '" + "hi!" + "'", charSequence76, "hi!");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.pop();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean14 = charSequenceList2.offer((java.lang.CharSequence) "[hi!, ]");
        boolean boolean16 = charSequenceList2.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence17 = charSequenceList2.getFirst();
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        int int26 = charSequenceList20.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence27 = charSequenceList20.removeLast();
        java.lang.CharSequence charSequence28 = charSequenceList20.peekLast();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceList38.spliterator();
        int int41 = charSequenceList38.size();
        boolean boolean42 = charSequenceList31.contains((java.lang.Object) charSequenceList38);
        java.lang.CharSequence charSequence43 = charSequenceList31.element();
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceList46.spliterator();
        boolean boolean49 = charSequenceList46.isEmpty();
        charSequenceList46.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str52 = charSequenceList46.toString();
        boolean boolean53 = charSequenceList31.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceList46.stream();
        boolean boolean55 = charSequenceList20.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        boolean boolean56 = charSequenceList2.contains((java.lang.Object) charSequenceList20);
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor57 = charSequenceList20.listIterator();
        java.lang.CharSequence charSequence58 = charSequenceList20.removeLast();
        java.lang.Object obj59 = charSequenceList20.clone();
        java.lang.CharSequence[] charSequenceArray62 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList63 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList63, charSequenceArray62);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList66 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean67 = charSequenceList63.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList66);
        java.lang.CharSequence[] charSequenceArray69 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList70 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList70, charSequenceArray69);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator72 = charSequenceList70.spliterator();
        int int73 = charSequenceList70.size();
        boolean boolean74 = charSequenceList63.contains((java.lang.Object) charSequenceList70);
        java.lang.CharSequence charSequence75 = charSequenceList63.element();
        int int76 = charSequenceList63.size();
        java.lang.CharSequence[] charSequenceArray78 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList79 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList79, charSequenceArray78);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList82 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean83 = charSequenceList79.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList82);
        java.lang.Object obj84 = charSequenceList82.clone();
        charSequenceList82.addLast((java.lang.CharSequence) "[hi!, ]");
        boolean boolean88 = charSequenceList82.offerLast((java.lang.CharSequence) "[hi!, ]");
        boolean boolean89 = charSequenceList63.removeLastOccurrence((java.lang.Object) charSequenceList82);
        boolean boolean90 = charSequenceList20.addAll((int) (short) 0, (java.util.Collection<java.lang.CharSequence>) charSequenceList82);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "[hi!, ]" + "'", charSequence17, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "hi!" + "'", charSequence43, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[hi!, ]" + "'", str52, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charSequenceItor57);
        org.junit.Assert.assertEquals("'" + charSequence58 + "' != '" + "" + "'", charSequence58, "");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(charSequenceArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + charSequence75 + "' != '" + "hi!" + "'", charSequence75, "hi!");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "[]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList13.equals(obj18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        boolean boolean25 = charSequenceList13.removeLastOccurrence((java.lang.Object) charSequenceList22);
        java.lang.CharSequence charSequence26 = charSequenceList22.removeLast();
        boolean boolean27 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence charSequence28 = charSequenceList2.pollFirst();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceList31.spliterator();
        boolean boolean34 = charSequenceList31.isEmpty();
        charSequenceList31.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean38 = charSequenceList31.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence39 = charSequenceList31.pop();
        charSequenceList31.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence42 = charSequenceList31.poll();
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean49 = charSequenceList45.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList48);
        java.lang.CharSequence charSequence50 = charSequenceList45.peek();
        boolean boolean52 = charSequenceList45.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList55 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55, charSequenceArray54);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList58 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean59 = charSequenceList55.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList58);
        boolean boolean60 = charSequenceList45.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58);
        charSequenceList45.clear();
        java.lang.CharSequence[] charSequenceArray63 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList64 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64, charSequenceArray63);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList67 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean68 = charSequenceList64.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList67);
        java.lang.Object obj69 = charSequenceList67.clone();
        int int70 = charSequenceList45.lastIndexOf((java.lang.Object) charSequenceList67);
        java.lang.CharSequence charSequence71 = charSequenceList67.peekFirst();
        java.lang.CharSequence charSequence72 = charSequenceList67.peekFirst();
        boolean boolean73 = charSequenceList31.removeFirstOccurrence((java.lang.Object) charSequenceList67);
        boolean boolean74 = charSequenceList2.remove((java.lang.Object) boolean73);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "hi!" + "'", charSequence39, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "hi!" + "'", charSequence50, "hi!");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(charSequenceArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "[]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNull(charSequence71);
        org.junit.Assert.assertNull(charSequence72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList2.spliterator();
        boolean boolean12 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        charSequenceList2.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceList18.spliterator();
        boolean boolean21 = charSequenceList18.isEmpty();
        boolean boolean22 = charSequenceList2.equals((java.lang.Object) charSequenceList18);
        java.lang.CharSequence charSequence24 = charSequenceList2.remove((int) (short) 0);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = charSequenceList28.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        java.lang.CharSequence charSequence33 = charSequenceList28.peek();
        java.lang.CharSequence charSequence34 = charSequenceList28.pollFirst();
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator39 = charSequenceList37.spliterator();
        boolean boolean40 = charSequenceList37.isEmpty();
        charSequenceList37.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean44 = charSequenceList37.offerLast((java.lang.CharSequence) "");
        charSequenceList37.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean47 = charSequenceList28.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor48 = charSequenceList37.descendingIterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream49 = charSequenceList37.stream();
        java.lang.CharSequence charSequence50 = charSequenceList37.element();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean51 = charSequenceList2.addAll((int) (byte) 10, (java.util.Collection<java.lang.CharSequence>) charSequenceList37);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "hi!" + "'", charSequence24, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "hi!" + "'", charSequence33, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(charSequenceItor48);
        org.junit.Assert.assertNotNull(charSequenceStream49);
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "[hi!, ]" + "'", charSequence50, "[hi!, ]");
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence charSequence19 = charSequenceList2.peek();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = charSequenceList22.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        int int32 = charSequenceList29.size();
        boolean boolean33 = charSequenceList22.contains((java.lang.Object) charSequenceList29);
        java.lang.CharSequence charSequence34 = charSequenceList22.element();
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator39 = charSequenceList37.spliterator();
        boolean boolean40 = charSequenceList37.isEmpty();
        charSequenceList37.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str43 = charSequenceList37.toString();
        boolean boolean44 = charSequenceList22.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        boolean boolean46 = charSequenceList37.offer((java.lang.CharSequence) "");
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor47 = charSequenceList37.listIterator();
        java.lang.CharSequence charSequence48 = charSequenceList37.poll();
        int int49 = charSequenceList37.size();
        int int50 = charSequenceList2.indexOf((java.lang.Object) charSequenceList37);
        java.lang.Object obj51 = null;
        int int52 = charSequenceList37.indexOf(obj51);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "hi!" + "'", charSequence19, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[hi!, ]" + "'", str43, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceItor47);
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "hi!" + "'", charSequence48, "hi!");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        charSequenceList2.clear();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.Object obj26 = charSequenceList24.clone();
        int int27 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList24);
        java.lang.CharSequence charSequence28 = charSequenceList2.peekLast();
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        java.lang.CharSequence charSequence30 = charSequenceList2.poll();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNull(charSequence30);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceList2.parallelStream();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence9 = charSequenceList2.getLast();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        java.lang.CharSequence charSequence25 = charSequenceList20.peek();
        boolean boolean27 = charSequenceList20.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        boolean boolean35 = charSequenceList20.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        boolean boolean36 = charSequenceList33.isEmpty();
        boolean boolean37 = charSequenceList15.equals((java.lang.Object) charSequenceList33);
        java.lang.CharSequence charSequence38 = charSequenceList15.peek();
        java.lang.CharSequence[] charSequenceArray40 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList41 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList41, charSequenceArray40);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList44 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean45 = charSequenceList41.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList44);
        java.lang.Object obj46 = null;
        boolean boolean47 = charSequenceList41.equals(obj46);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList50 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50, charSequenceArray49);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator52 = charSequenceList50.spliterator();
        boolean boolean53 = charSequenceList41.removeLastOccurrence((java.lang.Object) charSequenceList50);
        java.lang.CharSequence[] charSequenceArray55 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56, charSequenceArray55);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList59 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean60 = charSequenceList56.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList59);
        java.lang.CharSequence charSequence61 = charSequenceList56.peek();
        boolean boolean63 = charSequenceList56.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean64 = charSequenceList41.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56);
        java.lang.CharSequence charSequence65 = charSequenceList41.pop();
        java.lang.CharSequence charSequence66 = charSequenceList41.peekFirst();
        int int67 = charSequenceList15.indexOf((java.lang.Object) charSequence66);
        java.util.function.UnaryOperator<java.lang.CharSequence> charSequenceUnaryOperator68 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList15.replaceAll(charSequenceUnaryOperator68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(charSequence38);
        org.junit.Assert.assertNotNull(charSequenceArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charSequenceArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + charSequence61 + "' != '" + "hi!" + "'", charSequence61, "hi!");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + charSequence65 + "' != '" + "hi!" + "'", charSequence65, "hi!");
        org.junit.Assert.assertNull(charSequence66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.pop();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean14 = charSequenceList2.offer((java.lang.CharSequence) "[hi!, ]");
        boolean boolean16 = charSequenceList2.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence17 = charSequenceList2.getFirst();
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        int int26 = charSequenceList20.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence27 = charSequenceList20.removeLast();
        java.lang.CharSequence charSequence28 = charSequenceList20.peekLast();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceList38.spliterator();
        int int41 = charSequenceList38.size();
        boolean boolean42 = charSequenceList31.contains((java.lang.Object) charSequenceList38);
        java.lang.CharSequence charSequence43 = charSequenceList31.element();
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceList46.spliterator();
        boolean boolean49 = charSequenceList46.isEmpty();
        charSequenceList46.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str52 = charSequenceList46.toString();
        boolean boolean53 = charSequenceList31.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceList46.stream();
        boolean boolean55 = charSequenceList20.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        boolean boolean56 = charSequenceList2.contains((java.lang.Object) charSequenceList20);
        java.lang.CharSequence charSequence57 = charSequenceList20.poll();
        java.lang.CharSequence charSequence58 = charSequenceList20.remove();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence60 = charSequenceList20.get(0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "[hi!, ]" + "'", charSequence17, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "hi!" + "'", charSequence43, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[hi!, ]" + "'", str52, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + charSequence57 + "' != '" + "hi!" + "'", charSequence57, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence58 + "' != '" + "" + "'", charSequence58, "");
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList13.equals(obj18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        boolean boolean25 = charSequenceList13.removeLastOccurrence((java.lang.Object) charSequenceList22);
        charSequenceList13.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean28 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        java.util.LinkedList<java.io.Serializable> serializableList29 = new java.util.LinkedList<java.io.Serializable>();
        boolean boolean30 = charSequenceList2.equals((java.lang.Object) serializableList29);
        java.lang.CharSequence charSequence32 = charSequenceList2.remove(0);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "hi!" + "'", charSequence32, "hi!");
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence charSequence15 = charSequenceList9.pollLast();
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = charSequenceList18.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        java.lang.CharSequence charSequence23 = charSequenceList18.peek();
        boolean boolean25 = charSequenceList18.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = charSequenceList28.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean33 = charSequenceList18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean34 = charSequenceList9.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        boolean boolean43 = charSequenceList37.offerFirst((java.lang.CharSequence) "hi!");
        boolean boolean44 = charSequenceList31.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        boolean boolean46 = charSequenceList31.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence47 = charSequenceList31.getLast();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.CharSequence> charSequenceItor49 = charSequenceList31.listIterator((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNull(charSequence15);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "hi!" + "'", charSequence23, "hi!");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "" + "'", charSequence47, "");
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = charSequenceList9.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence charSequence14 = charSequenceList9.peek();
        boolean boolean16 = charSequenceList9.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        boolean boolean24 = charSequenceList9.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence charSequence25 = charSequenceList9.pop();
        boolean boolean26 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = charSequenceList29.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList29.equals(obj34);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        java.lang.CharSequence charSequence37 = charSequenceList29.peek();
        java.lang.CharSequence charSequence38 = charSequenceList29.remove();
        boolean boolean39 = charSequenceList9.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        charSequenceList9.clear();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "hi!" + "'", charSequence37, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "hi!" + "'", charSequence38, "hi!");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence charSequence18 = charSequenceList15.poll();
        charSequenceList15.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.Object obj21 = charSequenceList15.clone();
        java.lang.CharSequence charSequence22 = charSequenceList15.remove();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(charSequence18);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "[[hi!, ]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "[[hi!, ]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "[[hi!, ]]");
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "[hi!, ]" + "'", charSequence22, "[hi!, ]");
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence charSequence15 = charSequenceList9.pollLast();
        charSequenceList9.addLast((java.lang.CharSequence) "[hi!, [hi!, ]]");
        java.lang.CharSequence charSequence18 = charSequenceList9.peek();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        boolean boolean25 = charSequenceList22.isEmpty();
        charSequenceList22.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str28 = charSequenceList22.toString();
        java.lang.CharSequence charSequence29 = charSequenceList22.removeFirst();
        boolean boolean31 = charSequenceList22.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = charSequenceList34.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        java.lang.CharSequence[] charSequenceArray40 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList41 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList41, charSequenceArray40);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator43 = charSequenceList41.spliterator();
        int int44 = charSequenceList41.size();
        boolean boolean45 = charSequenceList34.contains((java.lang.Object) charSequenceList41);
        java.lang.CharSequence charSequence46 = charSequenceList34.element();
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator51 = charSequenceList49.spliterator();
        boolean boolean52 = charSequenceList49.isEmpty();
        charSequenceList49.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str55 = charSequenceList49.toString();
        boolean boolean56 = charSequenceList34.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49);
        boolean boolean58 = charSequenceList49.offer((java.lang.CharSequence) "");
        charSequenceList49.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList49.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        charSequenceList49.addLast((java.lang.CharSequence) "hi!");
        boolean boolean67 = charSequenceList22.removeFirstOccurrence((java.lang.Object) "hi!");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean68 = charSequenceList9.addAll((int) (short) -1, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNull(charSequence15);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "[hi!, [hi!, ]]" + "'", charSequence18, "[hi!, [hi!, ]]");
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[hi!, ]" + "'", str28, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charSequenceArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + charSequence46 + "' != '" + "hi!" + "'", charSequence46, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[hi!, ]" + "'", str55, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence charSequence9 = charSequenceList2.removeFirst();
        boolean boolean11 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor12 = charSequenceList2.listIterator();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = charSequenceList16.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence charSequence21 = charSequenceList16.peek();
        boolean boolean23 = charSequenceList16.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList16.spliterator();
        boolean boolean26 = charSequenceList16.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence27 = charSequenceList16.element();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator28 = charSequenceList16.spliterator();
        java.lang.CharSequence charSequence29 = charSequenceList16.poll();
        boolean boolean30 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        charSequenceList16.push((java.lang.CharSequence) "[hi!, hi!, hi!, []]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(charSequenceItor12);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "hi!" + "'", charSequence21, "hi!");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertNotNull(charSequenceSpliterator28);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence25 = charSequenceList2.getFirst();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor26 = charSequenceList2.listIterator();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = charSequenceList29.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceList36.spliterator();
        int int39 = charSequenceList36.size();
        boolean boolean40 = charSequenceList29.contains((java.lang.Object) charSequenceList36);
        java.lang.CharSequence charSequence41 = charSequenceList36.removeFirst();
        java.lang.CharSequence charSequence42 = charSequenceList36.pollLast();
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean49 = charSequenceList45.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList48);
        java.lang.CharSequence charSequence50 = charSequenceList45.peek();
        boolean boolean52 = charSequenceList45.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList55 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55, charSequenceArray54);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList58 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean59 = charSequenceList55.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList58);
        boolean boolean60 = charSequenceList45.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58);
        boolean boolean61 = charSequenceList36.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58);
        java.lang.CharSequence[] charSequenceArray63 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList64 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64, charSequenceArray63);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList67 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean68 = charSequenceList64.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList67);
        boolean boolean70 = charSequenceList64.offerFirst((java.lang.CharSequence) "hi!");
        boolean boolean71 = charSequenceList58.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64);
        boolean boolean72 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64);
        java.lang.CharSequence charSequence73 = charSequenceList64.remove();
        charSequenceList64.addFirst((java.lang.CharSequence) "");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertNotNull(charSequenceItor26);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "" + "'", charSequence41, "");
        org.junit.Assert.assertNull(charSequence42);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "hi!" + "'", charSequence50, "hi!");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(charSequenceArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + charSequence73 + "' != '" + "hi!" + "'", charSequence73, "hi!");
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        int int27 = charSequenceList2.indexOf((java.lang.Object) charSequence26);
        int int28 = charSequenceList2.size();
        java.lang.CharSequence charSequence29 = charSequenceList2.pop();
        charSequenceList2.push((java.lang.CharSequence) "[hi!]");
        charSequenceList2.addLast((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = charSequenceList36.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence charSequence41 = charSequenceList36.peek();
        boolean boolean43 = charSequenceList36.add((java.lang.CharSequence) "[hi!, ]");
        boolean boolean44 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36);
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceList47.spliterator();
        int int50 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList47);
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList53 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53, charSequenceArray52);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator55 = charSequenceList53.spliterator();
        boolean boolean56 = charSequenceList53.isEmpty();
        charSequenceList53.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str59 = charSequenceList53.toString();
        java.lang.CharSequence charSequence60 = charSequenceList53.removeFirst();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream61 = charSequenceList53.parallelStream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator62 = charSequenceList53.spliterator();
        int int63 = charSequenceList47.lastIndexOf((java.lang.Object) charSequenceList53);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[hi!, ]" + "'", str59, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence60 + "' != '" + "hi!" + "'", charSequence60, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream61);
        org.junit.Assert.assertNotNull(charSequenceSpliterator62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceList11.spliterator();
        java.lang.CharSequence charSequence16 = charSequenceList11.element();
        boolean boolean18 = charSequenceList11.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceList28.spliterator();
        int int31 = charSequenceList28.size();
        boolean boolean32 = charSequenceList21.contains((java.lang.Object) charSequenceList28);
        java.lang.CharSequence charSequence33 = charSequenceList21.element();
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceList36.spliterator();
        boolean boolean39 = charSequenceList36.isEmpty();
        charSequenceList36.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str42 = charSequenceList36.toString();
        boolean boolean43 = charSequenceList21.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36);
        boolean boolean45 = charSequenceList36.offer((java.lang.CharSequence) "");
        charSequenceList36.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean50 = charSequenceList36.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence51 = charSequenceList36.poll();
        java.lang.CharSequence charSequence52 = charSequenceList36.peek();
        int int53 = charSequenceList11.indexOf((java.lang.Object) charSequenceList36);
        java.lang.CharSequence charSequence54 = charSequenceList36.removeFirst();
        java.lang.CharSequence[] charSequenceArray56 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList57 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList57, charSequenceArray56);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList60 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean61 = charSequenceList57.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList60);
        java.lang.CharSequence charSequence62 = charSequenceList57.peek();
        boolean boolean64 = charSequenceList57.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray66 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList67 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList67, charSequenceArray66);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList70 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean71 = charSequenceList67.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList70);
        boolean boolean72 = charSequenceList57.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList70);
        java.lang.CharSequence charSequence73 = charSequenceList57.pop();
        java.lang.CharSequence[] charSequenceArray75 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList76 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList76, charSequenceArray75);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList79 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean80 = charSequenceList76.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList79);
        java.lang.CharSequence charSequence81 = charSequenceList76.peek();
        java.lang.CharSequence charSequence82 = charSequenceList76.poll();
        boolean boolean83 = charSequenceList57.remove((java.lang.Object) charSequence82);
        java.lang.CharSequence charSequence84 = charSequenceList57.peekFirst();
        java.lang.CharSequence[] charSequenceArray86 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList87 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList87, charSequenceArray86);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList90 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean91 = charSequenceList87.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList90);
        charSequenceList90.push((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence94 = charSequenceList90.pollFirst();
        boolean boolean95 = charSequenceList57.remove((java.lang.Object) charSequenceList90);
        int int96 = charSequenceList36.lastIndexOf((java.lang.Object) charSequenceList57);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "hi!" + "'", charSequence33, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[hi!, ]" + "'", str42, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "hi!" + "'", charSequence51, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "hi!" + "'", charSequence52, "hi!");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "hi!" + "'", charSequence54, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + charSequence62 + "' != '" + "hi!" + "'", charSequence62, "hi!");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(charSequenceArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + charSequence73 + "' != '" + "hi!" + "'", charSequence73, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + charSequence81 + "' != '" + "hi!" + "'", charSequence81, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence82 + "' != '" + "hi!" + "'", charSequence82, "hi!");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(charSequence84);
        org.junit.Assert.assertNotNull(charSequenceArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + charSequence94 + "' != '" + "" + "'", charSequence94, "");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-1) + "'", int96 == (-1));
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceList2.parallelStream();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator21 = charSequenceList19.spliterator();
        int int22 = charSequenceList19.size();
        boolean boolean23 = charSequenceList12.contains((java.lang.Object) charSequenceList19);
        boolean boolean24 = charSequenceList12.isEmpty();
        java.lang.Object obj25 = charSequenceList12.clone();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream26 = charSequenceList12.parallelStream();
        boolean boolean27 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.Object[] objArray28 = charSequenceList2.toArray();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence30 = charSequenceList2.get((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[hi!]");
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        charSequenceList5.push((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor9 = charSequenceList5.descendingIterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceItor9);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.Object[] objArray15 = charSequenceList9.toArray();
        java.lang.CharSequence charSequence17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence18 = charSequenceList9.set(100, charSequence17);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.lang.String str8 = charSequenceList2.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor9 = charSequenceList2.descendingIterator();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence charSequence17 = charSequenceList12.peek();
        boolean boolean19 = charSequenceList12.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = charSequenceList22.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        boolean boolean27 = charSequenceList12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        boolean boolean28 = charSequenceList25.isEmpty();
        java.lang.CharSequence charSequence29 = charSequenceList25.peekLast();
        java.lang.CharSequence charSequence30 = charSequenceList25.poll();
        java.lang.String str31 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = charSequenceList34.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        java.lang.CharSequence[] charSequenceArray40 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList41 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList41, charSequenceArray40);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator43 = charSequenceList41.spliterator();
        int int44 = charSequenceList41.size();
        boolean boolean45 = charSequenceList34.contains((java.lang.Object) charSequenceList41);
        java.lang.CharSequence charSequence46 = charSequenceList34.element();
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator51 = charSequenceList49.spliterator();
        boolean boolean52 = charSequenceList49.isEmpty();
        charSequenceList49.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str55 = charSequenceList49.toString();
        boolean boolean56 = charSequenceList34.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49);
        boolean boolean58 = charSequenceList49.offer((java.lang.CharSequence) "");
        charSequenceList49.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList49.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        boolean boolean66 = charSequenceList49.offerFirst((java.lang.CharSequence) "hi!");
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator67 = charSequenceList49.spliterator();
        boolean boolean68 = charSequenceList25.removeFirstOccurrence((java.lang.Object) charSequenceSpliterator67);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator69 = charSequenceList25.spliterator();
        java.lang.CharSequence charSequence70 = charSequenceList25.peekLast();
        java.lang.CharSequence charSequence71 = charSequenceList25.pollLast();
        boolean boolean72 = charSequenceList2.equals((java.lang.Object) charSequenceList25);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[]" + "'", str8, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor9);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(charSequence29);
        org.junit.Assert.assertNull(charSequence30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[]" + "'", str31, "[]");
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charSequenceArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + charSequence46 + "' != '" + "hi!" + "'", charSequence46, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[hi!, ]" + "'", str55, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator69);
        org.junit.Assert.assertNull(charSequence70);
        org.junit.Assert.assertNull(charSequence71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.poll();
        java.lang.String str9 = charSequenceList2.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence10 = charSequenceList2.getLast();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[]" + "'", str9, "[]");
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean10 = charSequenceList2.contains((java.lang.Object) (-1.0d));
        boolean boolean11 = charSequenceList2.isEmpty();
        java.lang.String str12 = charSequenceList2.toString();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        java.lang.CharSequence charSequence6 = charSequenceList2.remove();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        boolean boolean12 = charSequenceList9.isEmpty();
        charSequenceList9.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean16 = charSequenceList9.offerLast((java.lang.CharSequence) "");
        charSequenceList9.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence19 = charSequenceList9.removeLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor20 = charSequenceList9.listIterator();
        boolean boolean21 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence22 = charSequenceList2.peek();
        charSequenceList2.clear();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertNotNull(charSequenceItor20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(charSequence22);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceList12.spliterator();
        boolean boolean15 = charSequenceList12.isEmpty();
        java.lang.CharSequence charSequence16 = charSequenceList12.removeLast();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence charSequence24 = charSequenceList19.peek();
        boolean boolean26 = charSequenceList19.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = charSequenceList29.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        boolean boolean34 = charSequenceList19.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.CharSequence charSequence35 = charSequenceList19.pop();
        boolean boolean36 = charSequenceList12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = charSequenceList39.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        java.lang.Object obj44 = null;
        boolean boolean45 = charSequenceList39.equals(obj44);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence charSequence47 = charSequenceList39.peek();
        java.lang.CharSequence charSequence48 = charSequenceList39.remove();
        boolean boolean49 = charSequenceList19.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean50 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList53 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53, charSequenceArray52);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = charSequenceList53.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList56);
        int int59 = charSequenceList53.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean61 = charSequenceList53.contains((java.lang.Object) (-1.0d));
        java.lang.CharSequence charSequence62 = charSequenceList53.getFirst();
        boolean boolean63 = charSequenceList39.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53);
        java.lang.CharSequence[] charSequenceArray65 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList66 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList66, charSequenceArray65);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList69 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean70 = charSequenceList66.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList69);
        java.lang.CharSequence charSequence71 = charSequenceList66.peek();
        java.lang.CharSequence charSequence72 = charSequenceList66.pollFirst();
        charSequenceList66.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray76 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList77 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList77, charSequenceArray76);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList80 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean81 = charSequenceList77.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList80);
        java.lang.Object obj82 = null;
        boolean boolean83 = charSequenceList77.equals(obj82);
        java.lang.CharSequence[] charSequenceArray85 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList86 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList86, charSequenceArray85);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator88 = charSequenceList86.spliterator();
        boolean boolean89 = charSequenceList77.removeLastOccurrence((java.lang.Object) charSequenceList86);
        charSequenceList77.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean92 = charSequenceList66.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList77);
        java.util.LinkedList<java.io.Serializable> serializableList93 = new java.util.LinkedList<java.io.Serializable>();
        boolean boolean94 = charSequenceList66.equals((java.lang.Object) serializableList93);
        boolean boolean96 = charSequenceList66.offerLast((java.lang.CharSequence) "[]");
        boolean boolean97 = charSequenceList53.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList66);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor98 = charSequenceList66.descendingIterator();
        java.lang.CharSequence charSequence99 = charSequenceList66.element();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[]" + "'", str8, "[]");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "hi!" + "'", charSequence24, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "hi!" + "'", charSequence47, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "hi!" + "'", charSequence48, "hi!");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + charSequence62 + "' != '" + "hi!" + "'", charSequence62, "hi!");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(charSequenceArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + charSequence71 + "' != '" + "hi!" + "'", charSequence71, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence72 + "' != '" + "hi!" + "'", charSequence72, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(charSequenceArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(charSequenceItor98);
        org.junit.Assert.assertEquals("'" + charSequence99 + "' != '" + "hi!" + "'", charSequence99, "hi!");
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor25 = charSequenceList2.descendingIterator();
        java.lang.CharSequence charSequence26 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.Object obj35 = null;
        boolean boolean36 = charSequenceList30.equals(obj35);
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = charSequenceList39.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        java.lang.CharSequence charSequence44 = charSequenceList39.peek();
        java.lang.CharSequence charSequence45 = charSequenceList39.pollFirst();
        boolean boolean46 = charSequenceList30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = charSequenceList49.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        java.lang.CharSequence charSequence54 = charSequenceList49.peek();
        int int55 = charSequenceList30.indexOf((java.lang.Object) charSequence54);
        int int56 = charSequenceList30.size();
        java.lang.Object obj57 = charSequenceList30.clone();
        boolean boolean58 = charSequenceList2.addAll((int) (short) 1, (java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList59 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        java.lang.CharSequence charSequence60 = charSequenceList59.poll();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence61 = charSequenceList59.getFirst();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceItor25);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "hi!" + "'", charSequence44, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence45 + "' != '" + "hi!" + "'", charSequence45, "hi!");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "hi!" + "'", charSequence54, "hi!");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + charSequence60 + "' != '" + "hi!" + "'", charSequence60, "hi!");
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        java.lang.CharSequence charSequence10 = charSequenceList9.peekLast();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList13.equals(obj18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        boolean boolean25 = charSequenceList13.removeLastOccurrence((java.lang.Object) charSequenceList22);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = charSequenceList28.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        java.lang.CharSequence charSequence33 = charSequenceList28.peek();
        boolean boolean35 = charSequenceList28.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean36 = charSequenceList13.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence charSequence37 = charSequenceList13.pop();
        java.lang.CharSequence charSequence38 = charSequenceList13.peekFirst();
        int int39 = charSequenceList9.indexOf((java.lang.Object) charSequenceList13);
        boolean boolean40 = charSequenceList13.isEmpty();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "hi!" + "'", charSequence33, "hi!");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "hi!" + "'", charSequence37, "hi!");
        org.junit.Assert.assertNull(charSequence38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        java.lang.CharSequence charSequence6 = charSequenceList2.remove();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        boolean boolean12 = charSequenceList9.isEmpty();
        charSequenceList9.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean16 = charSequenceList9.offerLast((java.lang.CharSequence) "");
        charSequenceList9.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence19 = charSequenceList9.removeLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor20 = charSequenceList9.listIterator();
        boolean boolean21 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList9);
        boolean boolean23 = charSequenceList9.offer((java.lang.CharSequence) "hi!");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor24 = charSequenceList9.iterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertNotNull(charSequenceItor20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceItor24);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = charSequenceList16.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence charSequence21 = charSequenceList16.peek();
        java.lang.CharSequence charSequence22 = charSequenceList16.pollFirst();
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator27 = charSequenceList25.spliterator();
        boolean boolean28 = charSequenceList25.isEmpty();
        charSequenceList25.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean32 = charSequenceList25.offerLast((java.lang.CharSequence) "");
        charSequenceList25.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean35 = charSequenceList16.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        boolean boolean36 = charSequenceList9.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        boolean boolean38 = charSequenceList9.offer((java.lang.CharSequence) "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "hi!" + "'", charSequence21, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor25 = charSequenceList2.descendingIterator();
        java.lang.CharSequence charSequence26 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = charSequenceList29.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        int int35 = charSequenceList29.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence36 = charSequenceList29.removeLast();
        java.lang.CharSequence charSequence37 = charSequenceList29.peekLast();
        charSequenceList29.push((java.lang.CharSequence) "[hi!]");
        boolean boolean40 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.CharSequence> charSequenceItor42 = charSequenceList2.listIterator((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceItor25);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "hi!" + "'", charSequence36, "hi!");
        org.junit.Assert.assertNull(charSequence37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor25 = charSequenceList2.descendingIterator();
        java.lang.CharSequence charSequence26 = charSequenceList2.pollLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceItor25);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.pop();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean14 = charSequenceList2.offer((java.lang.CharSequence) "[hi!, ]");
        boolean boolean16 = charSequenceList2.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence17 = charSequenceList2.getFirst();
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        int int26 = charSequenceList20.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence27 = charSequenceList20.removeLast();
        java.lang.CharSequence charSequence28 = charSequenceList20.peekLast();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceList38.spliterator();
        int int41 = charSequenceList38.size();
        boolean boolean42 = charSequenceList31.contains((java.lang.Object) charSequenceList38);
        java.lang.CharSequence charSequence43 = charSequenceList31.element();
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceList46.spliterator();
        boolean boolean49 = charSequenceList46.isEmpty();
        charSequenceList46.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str52 = charSequenceList46.toString();
        boolean boolean53 = charSequenceList31.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceList46.stream();
        boolean boolean55 = charSequenceList20.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        boolean boolean56 = charSequenceList2.contains((java.lang.Object) charSequenceList20);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.CharSequence> charSequenceList59 = charSequenceList2.subList(1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "[hi!, ]" + "'", charSequence17, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "hi!" + "'", charSequence43, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[hi!, ]" + "'", str52, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = charSequenceList5.clone();
        charSequenceList5.addLast((java.lang.CharSequence) "[hi!, ]");
        boolean boolean11 = charSequenceList5.offerLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence12 = charSequenceList5.pollFirst();
        java.lang.CharSequence charSequence13 = charSequenceList5.pollLast();
        boolean boolean15 = charSequenceList5.offerFirst((java.lang.CharSequence) "[hi!, [[hi!, ]]]");
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceList5.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.CharSequence> charSequenceList19 = charSequenceList5.subList((int) (byte) -1, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: fromIndex = -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "[hi!, ]" + "'", charSequence12, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "[hi!, ]" + "'", charSequence13, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        java.lang.CharSequence charSequence9 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence charSequence17 = charSequenceList12.peek();
        boolean boolean19 = charSequenceList12.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = charSequenceList22.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        boolean boolean27 = charSequenceList12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        charSequenceList12.clear();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.Object obj36 = charSequenceList34.clone();
        int int37 = charSequenceList12.lastIndexOf((java.lang.Object) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = charSequenceList40.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceList47.spliterator();
        int int50 = charSequenceList47.size();
        boolean boolean51 = charSequenceList40.contains((java.lang.Object) charSequenceList47);
        java.lang.CharSequence charSequence52 = charSequenceList40.element();
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList55 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55, charSequenceArray54);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator57 = charSequenceList55.spliterator();
        boolean boolean58 = charSequenceList55.isEmpty();
        charSequenceList55.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str61 = charSequenceList55.toString();
        boolean boolean62 = charSequenceList40.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55);
        boolean boolean64 = charSequenceList55.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor65 = charSequenceList55.descendingIterator();
        charSequenceList55.clear();
        boolean boolean67 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55);
        boolean boolean68 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor69 = charSequenceList12.iterator();
        java.lang.CharSequence charSequence70 = charSequenceList12.pollLast();
        charSequenceList12.push((java.lang.CharSequence) "[[hi!, ], hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "[]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "hi!" + "'", charSequence52, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[hi!, ]" + "'", str61, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(charSequenceItor65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(charSequenceItor69);
        org.junit.Assert.assertNull(charSequence70);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.pop();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean14 = charSequenceList2.offer((java.lang.CharSequence) "[hi!, ]");
        boolean boolean16 = charSequenceList2.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence17 = charSequenceList2.getFirst();
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        int int26 = charSequenceList20.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean28 = charSequenceList20.contains((java.lang.Object) (-1.0d));
        java.lang.CharSequence charSequence29 = charSequenceList20.getFirst();
        boolean boolean30 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence31 = charSequenceList2.pop();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "[hi!, ]" + "'", charSequence17, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "hi!" + "'", charSequence31, "hi!");
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.pop();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean14 = charSequenceList2.offer((java.lang.CharSequence) "[hi!, ]");
        boolean boolean16 = charSequenceList2.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence17 = charSequenceList2.getFirst();
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        int int26 = charSequenceList20.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence27 = charSequenceList20.removeLast();
        java.lang.CharSequence charSequence28 = charSequenceList20.peekLast();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceList38.spliterator();
        int int41 = charSequenceList38.size();
        boolean boolean42 = charSequenceList31.contains((java.lang.Object) charSequenceList38);
        java.lang.CharSequence charSequence43 = charSequenceList31.element();
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceList46.spliterator();
        boolean boolean49 = charSequenceList46.isEmpty();
        charSequenceList46.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str52 = charSequenceList46.toString();
        boolean boolean53 = charSequenceList31.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceList46.stream();
        boolean boolean55 = charSequenceList20.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        boolean boolean56 = charSequenceList2.contains((java.lang.Object) charSequenceList20);
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor57 = charSequenceList20.listIterator();
        java.lang.CharSequence charSequence58 = charSequenceList20.removeLast();
        java.lang.Object[] objArray59 = charSequenceList20.toArray();
        boolean boolean61 = charSequenceList20.contains((java.lang.Object) (-1.0f));
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "[hi!, ]" + "'", charSequence17, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "hi!" + "'", charSequence43, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[hi!, ]" + "'", str52, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charSequenceItor57);
        org.junit.Assert.assertEquals("'" + charSequence58 + "' != '" + "" + "'", charSequence58, "");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList2.removeLastOccurrence(obj9);
        boolean boolean12 = charSequenceList2.remove((java.lang.Object) (short) 10);
        java.lang.CharSequence charSequence13 = charSequenceList2.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceList2.stream();
        java.lang.Object obj15 = charSequenceList2.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence17 = charSequenceList2.get((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[]");
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean18 = charSequenceList15.isEmpty();
        java.lang.CharSequence charSequence19 = charSequenceList15.peekLast();
        java.lang.CharSequence charSequence20 = charSequenceList15.poll();
        boolean boolean21 = charSequenceList15.isEmpty();
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceList24.spliterator();
        int int27 = charSequenceList24.size();
        java.lang.CharSequence charSequence28 = charSequenceList24.remove();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceList31.spliterator();
        boolean boolean34 = charSequenceList31.isEmpty();
        charSequenceList31.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean38 = charSequenceList31.offerLast((java.lang.CharSequence) "");
        charSequenceList31.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence41 = charSequenceList31.removeLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor42 = charSequenceList31.listIterator();
        boolean boolean43 = charSequenceList24.removeLastOccurrence((java.lang.Object) charSequenceList31);
        boolean boolean44 = charSequenceList31.isEmpty();
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList50 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean51 = charSequenceList47.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList50);
        java.lang.CharSequence charSequence52 = charSequenceList47.peek();
        java.lang.CharSequence charSequence53 = charSequenceList47.pollFirst();
        java.lang.CharSequence[] charSequenceArray55 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56, charSequenceArray55);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator58 = charSequenceList56.spliterator();
        boolean boolean59 = charSequenceList56.isEmpty();
        charSequenceList56.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean63 = charSequenceList56.offerLast((java.lang.CharSequence) "");
        charSequenceList56.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean66 = charSequenceList47.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor67 = charSequenceList56.descendingIterator();
        boolean boolean68 = charSequenceList31.removeFirstOccurrence((java.lang.Object) charSequenceList56);
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList71 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList71, charSequenceArray70);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList74 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean75 = charSequenceList71.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList74);
        java.lang.CharSequence charSequence76 = charSequenceList71.peek();
        java.lang.CharSequence charSequence77 = charSequenceList71.pollFirst();
        java.lang.CharSequence[] charSequenceArray79 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList80 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList80, charSequenceArray79);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator82 = charSequenceList80.spliterator();
        boolean boolean83 = charSequenceList80.isEmpty();
        charSequenceList80.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean87 = charSequenceList80.offerLast((java.lang.CharSequence) "");
        charSequenceList80.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean90 = charSequenceList71.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList80);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor91 = charSequenceList80.descendingIterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream92 = charSequenceList80.stream();
        java.lang.CharSequence charSequence93 = charSequenceList80.element();
        boolean boolean95 = charSequenceList80.offer((java.lang.CharSequence) "hi!");
        boolean boolean96 = charSequenceList31.remove((java.lang.Object) boolean95);
        boolean boolean97 = charSequenceList15.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence98 = charSequenceList15.removeFirst();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(charSequence19);
        org.junit.Assert.assertNull(charSequence20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "" + "'", charSequence41, "");
        org.junit.Assert.assertNotNull(charSequenceItor42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "hi!" + "'", charSequence52, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "hi!" + "'", charSequence53, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(charSequenceItor67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + charSequence76 + "' != '" + "hi!" + "'", charSequence76, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence77 + "' != '" + "hi!" + "'", charSequence77, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(charSequenceItor91);
        org.junit.Assert.assertNotNull(charSequenceStream92);
        org.junit.Assert.assertEquals("'" + charSequence93 + "' != '" + "[hi!, ]" + "'", charSequence93, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence charSequence10 = charSequenceList2.poll();
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = charSequenceList14.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceList21.spliterator();
        int int24 = charSequenceList21.size();
        boolean boolean25 = charSequenceList14.contains((java.lang.Object) charSequenceList21);
        java.lang.CharSequence charSequence26 = charSequenceList14.element();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        boolean boolean32 = charSequenceList29.isEmpty();
        charSequenceList29.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str35 = charSequenceList29.toString();
        boolean boolean36 = charSequenceList14.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        charSequenceList29.addLast((java.lang.CharSequence) "");
        boolean boolean39 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        charSequenceList29.addLast((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray43 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList44 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList44, charSequenceArray43);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = charSequenceList44.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList47);
        java.lang.Object obj49 = null;
        boolean boolean50 = charSequenceList44.equals(obj49);
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList53 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53, charSequenceArray52);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator55 = charSequenceList53.spliterator();
        boolean boolean56 = charSequenceList44.removeLastOccurrence((java.lang.Object) charSequenceList53);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator57 = charSequenceList53.spliterator();
        java.lang.CharSequence charSequence58 = charSequenceList53.element();
        boolean boolean60 = charSequenceList53.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence61 = charSequenceList53.pop();
        int int62 = charSequenceList53.size();
        boolean boolean63 = charSequenceList29.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53);
        java.lang.CharSequence[] charSequenceArray65 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList66 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList66, charSequenceArray65);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator68 = charSequenceList66.spliterator();
        int int69 = charSequenceList66.size();
        java.lang.CharSequence[] charSequenceArray71 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList72 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList72, charSequenceArray71);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator74 = charSequenceList72.spliterator();
        boolean boolean75 = charSequenceList72.isEmpty();
        java.lang.CharSequence charSequence76 = charSequenceList72.removeLast();
        int int77 = charSequenceList66.lastIndexOf((java.lang.Object) charSequenceList72);
        boolean boolean78 = charSequenceList29.equals((java.lang.Object) charSequenceList72);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[hi!, ]" + "'", str35, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(charSequenceArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator57);
        org.junit.Assert.assertEquals("'" + charSequence58 + "' != '" + "" + "'", charSequence58, "");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + charSequence61 + "' != '" + "[hi!, ]" + "'", charSequence61, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(charSequenceArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + charSequence76 + "' != '" + "" + "'", charSequence76, "");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence charSequence15 = charSequenceList9.pollLast();
        charSequenceList9.addLast((java.lang.CharSequence) "[hi!, [hi!, ]]");
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        boolean boolean28 = charSequenceList21.add((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence31 = charSequenceList21.set(0, (java.lang.CharSequence) "[hi!]");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean32 = charSequenceList9.addAll((int) (short) 100, (java.util.Collection<java.lang.CharSequence>) charSequenceList21);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNull(charSequence15);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "hi!" + "'", charSequence31, "hi!");
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence charSequence15 = charSequenceList9.pollLast();
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = charSequenceList18.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        java.lang.CharSequence charSequence23 = charSequenceList18.peek();
        boolean boolean25 = charSequenceList18.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = charSequenceList28.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean33 = charSequenceList18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean34 = charSequenceList9.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        boolean boolean43 = charSequenceList37.offerFirst((java.lang.CharSequence) "hi!");
        boolean boolean44 = charSequenceList31.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceList47.spliterator();
        boolean boolean50 = charSequenceList47.isEmpty();
        java.lang.CharSequence charSequence51 = charSequenceList47.removeLast();
        java.lang.CharSequence[] charSequenceArray53 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList54 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList54, charSequenceArray53);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList57 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean58 = charSequenceList54.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList57);
        java.lang.CharSequence charSequence59 = charSequenceList54.peek();
        boolean boolean61 = charSequenceList54.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray63 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList64 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64, charSequenceArray63);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList67 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean68 = charSequenceList64.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList67);
        boolean boolean69 = charSequenceList54.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList67);
        java.lang.CharSequence charSequence70 = charSequenceList54.pop();
        boolean boolean71 = charSequenceList47.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList54);
        java.lang.CharSequence[] charSequenceArray73 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList74 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList74, charSequenceArray73);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList77 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean78 = charSequenceList74.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList77);
        java.lang.Object obj79 = null;
        boolean boolean80 = charSequenceList74.equals(obj79);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList81 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList74);
        java.lang.CharSequence charSequence82 = charSequenceList74.peek();
        java.lang.CharSequence charSequence83 = charSequenceList74.remove();
        boolean boolean84 = charSequenceList54.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList74);
        boolean boolean85 = charSequenceList31.removeFirstOccurrence((java.lang.Object) charSequenceList74);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence88 = charSequenceList74.set((int) (short) 1, (java.lang.CharSequence) "[hi!, [hi!, ]]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNull(charSequence15);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "hi!" + "'", charSequence23, "hi!");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "" + "'", charSequence51, "");
        org.junit.Assert.assertNotNull(charSequenceArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + charSequence59 + "' != '" + "hi!" + "'", charSequence59, "hi!");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charSequenceArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + charSequence70 + "' != '" + "hi!" + "'", charSequence70, "hi!");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(charSequenceArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + charSequence82 + "' != '" + "hi!" + "'", charSequence82, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence83 + "' != '" + "hi!" + "'", charSequence83, "hi!");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        boolean boolean14 = charSequenceList2.isEmpty();
        java.lang.Object obj15 = charSequenceList2.clone();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceList2.parallelStream();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList19.equals(obj24);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = charSequenceList28.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        java.lang.CharSequence charSequence33 = charSequenceList28.peek();
        java.lang.CharSequence charSequence34 = charSequenceList28.pollFirst();
        boolean boolean35 = charSequenceList19.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        boolean boolean36 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        charSequenceList28.addLast((java.lang.CharSequence) "[]");
        charSequenceList28.clear();
        java.util.Collection<java.lang.CharSequence> charSequenceCollection40 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean41 = charSequenceList28.removeAll(charSequenceCollection40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "hi!" + "'", charSequence33, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        charSequenceList2.clear();
        java.lang.Object obj6 = charSequenceList2.clone();
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.removeLastOccurrence(obj7);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList13.equals(obj18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        boolean boolean25 = charSequenceList13.removeLastOccurrence((java.lang.Object) charSequenceList22);
        charSequenceList13.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean28 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        java.util.LinkedList<java.io.Serializable> serializableList29 = new java.util.LinkedList<java.io.Serializable>();
        boolean boolean30 = charSequenceList2.equals((java.lang.Object) serializableList29);
        java.lang.CharSequence charSequence32 = charSequenceList2.get(0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.CharSequence> charSequenceItor34 = charSequenceList2.listIterator((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "hi!" + "'", charSequence32, "hi!");
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator29 = charSequenceList27.spliterator();
        java.lang.CharSequence charSequence30 = charSequenceList27.getLast();
        java.lang.CharSequence charSequence31 = charSequenceList27.removeLast();
        boolean boolean32 = charSequenceList17.remove((java.lang.Object) charSequenceList27);
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = charSequenceList35.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        java.lang.CharSequence charSequence40 = charSequenceList35.peek();
        java.lang.CharSequence charSequence41 = charSequenceList35.pollFirst();
        charSequenceList35.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = charSequenceList46.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList49);
        java.lang.Object obj51 = null;
        boolean boolean52 = charSequenceList46.equals(obj51);
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList55 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55, charSequenceArray54);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator57 = charSequenceList55.spliterator();
        boolean boolean58 = charSequenceList46.removeLastOccurrence((java.lang.Object) charSequenceList55);
        charSequenceList46.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean61 = charSequenceList35.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        boolean boolean62 = charSequenceList27.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        java.lang.CharSequence charSequence63 = charSequenceList27.peekFirst();
        java.lang.CharSequence charSequence64 = charSequenceList27.poll();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator29);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "" + "'", charSequence30, "");
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "" + "'", charSequence31, "");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "hi!" + "'", charSequence40, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(charSequence63);
        org.junit.Assert.assertNull(charSequence64);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence22 = charSequenceList17.peek();
        boolean boolean24 = charSequenceList17.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean25 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        charSequenceList17.clear();
        java.util.Collection<java.lang.CharSequence> charSequenceCollection27 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean28 = charSequenceList17.containsAll(charSequenceCollection27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.Collection.iterator()\" because \"c\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.Object obj11 = charSequenceList2.clone();
        java.lang.String str12 = charSequenceList2.toString();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "[hi!]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence charSequence15 = charSequenceList9.pollLast();
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = charSequenceList18.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        java.lang.CharSequence charSequence23 = charSequenceList18.peek();
        boolean boolean25 = charSequenceList18.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = charSequenceList28.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean33 = charSequenceList18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean34 = charSequenceList9.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        boolean boolean43 = charSequenceList37.offerFirst((java.lang.CharSequence) "hi!");
        boolean boolean44 = charSequenceList31.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        int int45 = charSequenceList37.size();
        int int47 = charSequenceList37.indexOf((java.lang.Object) "[hi!, [[hi!, ]]]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNull(charSequence15);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "hi!" + "'", charSequence23, "hi!");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceList12.spliterator();
        boolean boolean15 = charSequenceList12.isEmpty();
        java.lang.CharSequence charSequence16 = charSequenceList12.removeLast();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence charSequence24 = charSequenceList19.peek();
        boolean boolean26 = charSequenceList19.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = charSequenceList29.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        boolean boolean34 = charSequenceList19.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.CharSequence charSequence35 = charSequenceList19.pop();
        boolean boolean36 = charSequenceList12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = charSequenceList39.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        java.lang.Object obj44 = null;
        boolean boolean45 = charSequenceList39.equals(obj44);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence charSequence47 = charSequenceList39.peek();
        java.lang.CharSequence charSequence48 = charSequenceList39.remove();
        boolean boolean49 = charSequenceList19.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean50 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean52 = charSequenceList2.add((java.lang.CharSequence) "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence54 = charSequenceList2.get((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[]" + "'", str8, "[]");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "hi!" + "'", charSequence24, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "hi!" + "'", charSequence47, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "hi!" + "'", charSequence48, "hi!");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.removeFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceList17.getLast();
        boolean boolean29 = charSequenceList17.removeLastOccurrence((java.lang.Object) 100.0d);
        java.lang.CharSequence charSequence30 = charSequenceList17.getFirst();
        java.lang.CharSequence charSequence31 = charSequenceList17.peekLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream32 = charSequenceList17.stream();
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = charSequenceList35.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        java.lang.CharSequence charSequence40 = charSequenceList35.peek();
        boolean boolean42 = charSequenceList35.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean49 = charSequenceList45.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList48);
        boolean boolean50 = charSequenceList35.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48);
        boolean boolean51 = charSequenceList48.isEmpty();
        java.lang.CharSequence charSequence52 = charSequenceList48.peekLast();
        java.lang.CharSequence charSequence53 = charSequenceList48.poll();
        java.lang.String str54 = charSequenceList48.toString();
        java.lang.CharSequence[] charSequenceArray56 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList57 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList57, charSequenceArray56);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList60 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean61 = charSequenceList57.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList60);
        java.lang.CharSequence[] charSequenceArray63 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList64 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64, charSequenceArray63);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator66 = charSequenceList64.spliterator();
        int int67 = charSequenceList64.size();
        boolean boolean68 = charSequenceList57.contains((java.lang.Object) charSequenceList64);
        java.lang.CharSequence charSequence69 = charSequenceList57.element();
        java.lang.CharSequence[] charSequenceArray71 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList72 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList72, charSequenceArray71);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator74 = charSequenceList72.spliterator();
        boolean boolean75 = charSequenceList72.isEmpty();
        charSequenceList72.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str78 = charSequenceList72.toString();
        boolean boolean79 = charSequenceList57.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList72);
        boolean boolean81 = charSequenceList72.offer((java.lang.CharSequence) "");
        charSequenceList72.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList72.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        boolean boolean89 = charSequenceList72.offerFirst((java.lang.CharSequence) "hi!");
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator90 = charSequenceList72.spliterator();
        boolean boolean91 = charSequenceList48.removeFirstOccurrence((java.lang.Object) charSequenceSpliterator90);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator92 = charSequenceList48.spliterator();
        java.lang.CharSequence charSequence93 = charSequenceList48.peekLast();
        java.lang.CharSequence charSequence94 = charSequenceList48.pollLast();
        boolean boolean95 = charSequenceList17.contains((java.lang.Object) charSequence94);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "hi!" + "'", charSequence30, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "" + "'", charSequence31, "");
        org.junit.Assert.assertNotNull(charSequenceStream32);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "hi!" + "'", charSequence40, "hi!");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(charSequence52);
        org.junit.Assert.assertNull(charSequence53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[]" + "'", str54, "[]");
        org.junit.Assert.assertNotNull(charSequenceArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charSequenceArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + charSequence69 + "' != '" + "hi!" + "'", charSequence69, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[hi!, ]" + "'", str78, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator92);
        org.junit.Assert.assertNull(charSequence93);
        org.junit.Assert.assertNull(charSequence94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceList11.spliterator();
        java.lang.CharSequence charSequence16 = charSequenceList11.element();
        boolean boolean18 = charSequenceList11.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceList28.spliterator();
        int int31 = charSequenceList28.size();
        boolean boolean32 = charSequenceList21.contains((java.lang.Object) charSequenceList28);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream33 = charSequenceList21.stream();
        boolean boolean34 = charSequenceList11.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor35 = charSequenceList11.iterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(charSequenceStream33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceItor35);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        int int27 = charSequenceList2.indexOf((java.lang.Object) charSequence26);
        int int28 = charSequenceList2.size();
        charSequenceList2.addFirst((java.lang.CharSequence) "");
        charSequenceList2.add((int) (byte) 0, (java.lang.CharSequence) "[hi!, ]");
        charSequenceList2.clear();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = charSequenceList9.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence charSequence14 = charSequenceList9.peek();
        boolean boolean16 = charSequenceList9.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        boolean boolean24 = charSequenceList9.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence charSequence25 = charSequenceList9.pop();
        boolean boolean26 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.lang.Object[] objArray27 = charSequenceList9.toArray();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence29 = charSequenceList9.remove((int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        charSequenceList2.clear();
        java.lang.Object obj6 = charSequenceList2.clone();
        java.lang.Object[] objArray7 = charSequenceList2.toArray();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence22 = charSequenceList17.peek();
        boolean boolean24 = charSequenceList17.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean25 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence26 = charSequenceList2.pop();
        java.util.function.UnaryOperator<java.lang.CharSequence> charSequenceUnaryOperator27 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList2.replaceAll(charSequenceUnaryOperator27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        java.lang.Object obj5 = charSequenceList2.clone();
        java.lang.CharSequence charSequence6 = charSequenceList2.poll();
        charSequenceList2.clear();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[]");
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceList2.parallelStream();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator21 = charSequenceList19.spliterator();
        int int22 = charSequenceList19.size();
        boolean boolean23 = charSequenceList12.contains((java.lang.Object) charSequenceList19);
        boolean boolean24 = charSequenceList12.isEmpty();
        java.lang.Object obj25 = charSequenceList12.clone();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream26 = charSequenceList12.parallelStream();
        boolean boolean27 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator32 = charSequenceList30.spliterator();
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = charSequenceList35.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42, charSequenceArray41);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator44 = charSequenceList42.spliterator();
        int int45 = charSequenceList42.size();
        boolean boolean46 = charSequenceList35.contains((java.lang.Object) charSequenceList42);
        java.lang.CharSequence charSequence47 = charSequenceList35.element();
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList50 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50, charSequenceArray49);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator52 = charSequenceList50.spliterator();
        boolean boolean53 = charSequenceList50.isEmpty();
        charSequenceList50.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str56 = charSequenceList50.toString();
        boolean boolean57 = charSequenceList35.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50);
        boolean boolean59 = charSequenceList50.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor60 = charSequenceList50.descendingIterator();
        boolean boolean61 = charSequenceList30.removeLastOccurrence((java.lang.Object) charSequenceItor60);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator62 = charSequenceList30.spliterator();
        java.lang.CharSequence charSequence63 = charSequenceList30.getLast();
        java.lang.CharSequence[] charSequenceArray65 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList66 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList66, charSequenceArray65);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator68 = charSequenceList66.spliterator();
        boolean boolean69 = charSequenceList66.isEmpty();
        java.lang.CharSequence charSequence70 = charSequenceList66.removeLast();
        java.lang.CharSequence charSequence71 = charSequenceList66.pollFirst();
        boolean boolean72 = charSequenceList30.contains((java.lang.Object) charSequence71);
        java.lang.CharSequence charSequence73 = charSequenceList30.element();
        boolean boolean74 = charSequenceList12.contains((java.lang.Object) charSequenceList30);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor75 = charSequenceList30.iterator();
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList30.add((int) '4', (java.lang.CharSequence) "[[hi!, ]]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator32);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "hi!" + "'", charSequence47, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[hi!, ]" + "'", str56, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(charSequenceItor60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator62);
        org.junit.Assert.assertEquals("'" + charSequence63 + "' != '" + "" + "'", charSequence63, "");
        org.junit.Assert.assertNotNull(charSequenceArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + charSequence70 + "' != '" + "" + "'", charSequence70, "");
        org.junit.Assert.assertNull(charSequence71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + charSequence73 + "' != '" + "" + "'", charSequence73, "");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(charSequenceItor75);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList8 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList8.spliterator();
        int int11 = charSequenceList8.size();
        boolean boolean12 = charSequenceList2.contains((java.lang.Object) charSequenceList8);
        java.lang.CharSequence charSequence13 = charSequenceList8.removeLast();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator18 = charSequenceList16.spliterator();
        boolean boolean19 = charSequenceList16.isEmpty();
        charSequenceList16.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str22 = charSequenceList16.toString();
        java.lang.CharSequence charSequence23 = charSequenceList16.removeFirst();
        boolean boolean25 = charSequenceList16.offer((java.lang.CharSequence) "hi!");
        boolean boolean26 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.CharSequence charSequence27 = charSequenceList8.peek();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[hi!, ]" + "'", str22, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "hi!" + "'", charSequence23, "hi!");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(charSequence27);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence9 = charSequenceList2.removeLast();
        java.lang.CharSequence charSequence10 = charSequenceList2.peekLast();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceList20.spliterator();
        int int23 = charSequenceList20.size();
        boolean boolean24 = charSequenceList13.contains((java.lang.Object) charSequenceList20);
        java.lang.CharSequence charSequence25 = charSequenceList13.element();
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceList28.spliterator();
        boolean boolean31 = charSequenceList28.isEmpty();
        charSequenceList28.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str34 = charSequenceList28.toString();
        boolean boolean35 = charSequenceList13.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream36 = charSequenceList28.stream();
        boolean boolean37 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence charSequence38 = charSequenceList28.getLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertNull(charSequence10);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[hi!, ]" + "'", str34, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceStream36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "" + "'", charSequence38, "");
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        charSequenceList2.clear();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.Object obj26 = charSequenceList24.clone();
        int int27 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList24);
        java.lang.CharSequence charSequence28 = charSequenceList24.peekFirst();
        java.lang.CharSequence charSequence29 = charSequenceList24.peekFirst();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = charSequenceList32.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        java.lang.Object obj37 = null;
        boolean boolean38 = charSequenceList32.equals(obj37);
        java.lang.CharSequence[] charSequenceArray40 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList41 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList41, charSequenceArray40);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator43 = charSequenceList41.spliterator();
        boolean boolean44 = charSequenceList32.removeLastOccurrence((java.lang.Object) charSequenceList41);
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList50 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean51 = charSequenceList47.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList50);
        java.lang.CharSequence charSequence52 = charSequenceList47.peek();
        boolean boolean54 = charSequenceList47.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean55 = charSequenceList32.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47);
        java.lang.CharSequence charSequence56 = charSequenceList32.pop();
        java.lang.CharSequence charSequence57 = charSequenceList32.peekFirst();
        java.lang.CharSequence charSequence58 = charSequenceList32.peekFirst();
        java.lang.CharSequence[] charSequenceArray60 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList61 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList61, charSequenceArray60);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList64 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean65 = charSequenceList61.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList64);
        java.lang.CharSequence[] charSequenceArray67 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList68 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList68, charSequenceArray67);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator70 = charSequenceList68.spliterator();
        int int71 = charSequenceList68.size();
        boolean boolean72 = charSequenceList61.contains((java.lang.Object) charSequenceList68);
        java.lang.CharSequence charSequence73 = charSequenceList61.element();
        java.lang.CharSequence[] charSequenceArray75 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList76 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList76, charSequenceArray75);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator78 = charSequenceList76.spliterator();
        boolean boolean79 = charSequenceList76.isEmpty();
        charSequenceList76.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str82 = charSequenceList76.toString();
        boolean boolean83 = charSequenceList61.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList76);
        boolean boolean85 = charSequenceList76.offer((java.lang.CharSequence) "");
        charSequenceList76.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList76.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        charSequenceList76.addLast((java.lang.CharSequence) "hi!");
        int int94 = charSequenceList32.indexOf((java.lang.Object) charSequenceList76);
        charSequenceList76.addFirst((java.lang.CharSequence) "");
        int int97 = charSequenceList76.size();
        boolean boolean98 = charSequenceList24.remove((java.lang.Object) int97);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNull(charSequence29);
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charSequenceArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "hi!" + "'", charSequence52, "hi!");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + charSequence56 + "' != '" + "hi!" + "'", charSequence56, "hi!");
        org.junit.Assert.assertNull(charSequence57);
        org.junit.Assert.assertNull(charSequence58);
        org.junit.Assert.assertNotNull(charSequenceArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(charSequenceArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + charSequence73 + "' != '" + "hi!" + "'", charSequence73, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[hi!, ]" + "'", str82, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 7 + "'", int97 == 7);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence9 = charSequenceList2.removeLast();
        java.lang.CharSequence charSequence10 = charSequenceList2.peekLast();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceList20.spliterator();
        int int23 = charSequenceList20.size();
        boolean boolean24 = charSequenceList13.contains((java.lang.Object) charSequenceList20);
        java.lang.CharSequence charSequence25 = charSequenceList13.element();
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceList28.spliterator();
        boolean boolean31 = charSequenceList28.isEmpty();
        charSequenceList28.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str34 = charSequenceList28.toString();
        boolean boolean35 = charSequenceList13.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream36 = charSequenceList28.stream();
        boolean boolean37 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence charSequence38 = charSequenceList2.remove();
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "", "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42, charSequenceArray41);
        java.lang.CharSequence charSequence44 = charSequenceList42.pollFirst();
        boolean boolean45 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        java.lang.CharSequence charSequence46 = null;
        boolean boolean47 = charSequenceList42.offer(charSequence46);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertNull(charSequence10);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[hi!, ]" + "'", str34, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceStream36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "hi!" + "'", charSequence38, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "" + "'", charSequence44, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceList17.getLast();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator32 = charSequenceList30.spliterator();
        boolean boolean33 = charSequenceList30.isEmpty();
        charSequenceList30.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean37 = charSequenceList30.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence38 = charSequenceList30.pop();
        charSequenceList30.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence43 = charSequenceList30.set((int) (short) 0, (java.lang.CharSequence) "");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream44 = charSequenceList30.parallelStream();
        boolean boolean45 = charSequenceList17.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        boolean boolean47 = charSequenceList30.offer((java.lang.CharSequence) "");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "hi!" + "'", charSequence38, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "hi!" + "'", charSequence43, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = charSequenceList5.clone();
        charSequenceList5.addLast((java.lang.CharSequence) "[hi!, ]");
        boolean boolean11 = charSequenceList5.offerLast((java.lang.CharSequence) "[hi!, ]");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence13 = charSequenceList5.get(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence charSequence18 = charSequenceList2.pop();
        boolean boolean19 = charSequenceList2.isEmpty();
        java.lang.Object obj20 = null;
        boolean boolean21 = charSequenceList2.removeFirstOccurrence(obj20);
        charSequenceList2.add(0, (java.lang.CharSequence) "[hi!, hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "hi!" + "'", charSequence18, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence charSequence15 = charSequenceList9.pollLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor16 = charSequenceList9.listIterator();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator21 = charSequenceList19.spliterator();
        int int22 = charSequenceList19.size();
        java.lang.CharSequence charSequence23 = charSequenceList19.remove();
        boolean boolean24 = charSequenceList9.contains((java.lang.Object) charSequence23);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence25 = charSequenceList9.getFirst();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNull(charSequence15);
        org.junit.Assert.assertNotNull(charSequenceItor16);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "" + "'", charSequence23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence22 = charSequenceList17.peek();
        boolean boolean24 = charSequenceList17.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean25 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence26 = charSequenceList2.pop();
        java.lang.CharSequence charSequence27 = charSequenceList2.peekFirst();
        java.lang.CharSequence charSequence28 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceList38.spliterator();
        int int41 = charSequenceList38.size();
        boolean boolean42 = charSequenceList31.contains((java.lang.Object) charSequenceList38);
        java.lang.CharSequence charSequence43 = charSequenceList31.element();
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceList46.spliterator();
        boolean boolean49 = charSequenceList46.isEmpty();
        charSequenceList46.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str52 = charSequenceList46.toString();
        boolean boolean53 = charSequenceList31.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        boolean boolean55 = charSequenceList46.offer((java.lang.CharSequence) "");
        charSequenceList46.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList46.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        charSequenceList46.addLast((java.lang.CharSequence) "hi!");
        int int64 = charSequenceList2.indexOf((java.lang.Object) charSequenceList46);
        charSequenceList46.addLast((java.lang.CharSequence) "[[hi!, ], hi!, ]");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence68 = charSequenceList46.remove((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNull(charSequence27);
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "hi!" + "'", charSequence43, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[hi!, ]" + "'", str52, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList13.equals(obj18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        boolean boolean25 = charSequenceList13.removeLastOccurrence((java.lang.Object) charSequenceList22);
        charSequenceList13.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean28 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        java.lang.CharSequence charSequence29 = charSequenceList2.remove();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = charSequenceList32.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        java.lang.CharSequence charSequence37 = charSequenceList32.peek();
        boolean boolean39 = charSequenceList32.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceList32.spliterator();
        boolean boolean42 = charSequenceList32.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence43 = charSequenceList32.element();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream44 = charSequenceList32.stream();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor45 = charSequenceList32.listIterator();
        boolean boolean47 = charSequenceList32.offer((java.lang.CharSequence) "[]");
        boolean boolean48 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "hi!" + "'", charSequence37, "hi!");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "hi!" + "'", charSequence43, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream44);
        org.junit.Assert.assertNotNull(charSequenceItor45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceList17.remove();
        java.lang.CharSequence charSequence28 = charSequenceList17.peekLast();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence charSequence36 = charSequenceList31.peek();
        boolean boolean38 = charSequenceList31.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray40 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList41 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList41, charSequenceArray40);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList44 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean45 = charSequenceList41.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList44);
        boolean boolean46 = charSequenceList31.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList44);
        charSequenceList31.clear();
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList50 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50, charSequenceArray49);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList53 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean54 = charSequenceList50.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList53);
        java.lang.Object obj55 = charSequenceList53.clone();
        int int56 = charSequenceList31.lastIndexOf((java.lang.Object) charSequenceList53);
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor58 = charSequenceList31.listIterator(0);
        java.lang.CharSequence charSequence59 = charSequenceList31.pollFirst();
        java.lang.CharSequence[] charSequenceArray61 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList62 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList62, charSequenceArray61);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList65 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean66 = charSequenceList62.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList65);
        java.lang.Object obj67 = null;
        boolean boolean68 = charSequenceList62.equals(obj67);
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList71 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList71, charSequenceArray70);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator73 = charSequenceList71.spliterator();
        boolean boolean74 = charSequenceList62.removeLastOccurrence((java.lang.Object) charSequenceList71);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator75 = charSequenceList71.spliterator();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor76 = charSequenceList71.iterator();
        int int77 = charSequenceList31.indexOf((java.lang.Object) charSequenceItor76);
        boolean boolean78 = charSequenceList17.contains((java.lang.Object) charSequenceItor76);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "hi!" + "'", charSequence36, "hi!");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charSequenceArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "[]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(charSequenceItor58);
        org.junit.Assert.assertNull(charSequence59);
        org.junit.Assert.assertNotNull(charSequenceArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator75);
        org.junit.Assert.assertNotNull(charSequenceItor76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceList17.getLast();
        boolean boolean29 = charSequenceList17.removeLastOccurrence((java.lang.Object) 100.0d);
        java.lang.CharSequence charSequence30 = charSequenceList17.getFirst();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.CharSequence> charSequenceItor32 = charSequenceList17.listIterator((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "hi!" + "'", charSequence30, "hi!");
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator29 = charSequenceList27.spliterator();
        java.lang.CharSequence charSequence30 = charSequenceList27.getLast();
        java.lang.CharSequence charSequence31 = charSequenceList27.removeLast();
        boolean boolean32 = charSequenceList17.remove((java.lang.Object) charSequenceList27);
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = charSequenceList35.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        java.lang.CharSequence charSequence40 = charSequenceList35.peek();
        java.lang.CharSequence charSequence41 = charSequenceList35.pollFirst();
        charSequenceList35.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = charSequenceList46.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList49);
        java.lang.Object obj51 = null;
        boolean boolean52 = charSequenceList46.equals(obj51);
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList55 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55, charSequenceArray54);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator57 = charSequenceList55.spliterator();
        boolean boolean58 = charSequenceList46.removeLastOccurrence((java.lang.Object) charSequenceList55);
        charSequenceList46.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean61 = charSequenceList35.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        boolean boolean62 = charSequenceList27.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        charSequenceList35.push((java.lang.CharSequence) "[hi!, hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator29);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "" + "'", charSequence30, "");
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "" + "'", charSequence31, "");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "hi!" + "'", charSequence40, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList2.spliterator();
        boolean boolean12 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence13 = charSequenceList2.element();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceList2.spliterator();
        java.lang.CharSequence charSequence15 = charSequenceList2.poll();
        java.lang.CharSequence charSequence16 = charSequenceList2.pollLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "hi!" + "'", charSequence15, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        java.util.LinkedList<java.lang.Comparable<java.lang.String>> strComparableList5 = new java.util.LinkedList<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = charSequenceList2.contains((java.lang.Object) strComparableList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = charSequenceList9.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator18 = charSequenceList16.spliterator();
        int int19 = charSequenceList16.size();
        boolean boolean20 = charSequenceList9.contains((java.lang.Object) charSequenceList16);
        java.lang.CharSequence charSequence21 = charSequenceList9.element();
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = charSequenceList24.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceList31.spliterator();
        int int34 = charSequenceList31.size();
        boolean boolean35 = charSequenceList24.contains((java.lang.Object) charSequenceList31);
        java.lang.CharSequence charSequence36 = charSequenceList24.element();
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceList39.spliterator();
        boolean boolean42 = charSequenceList39.isEmpty();
        charSequenceList39.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str45 = charSequenceList39.toString();
        boolean boolean46 = charSequenceList24.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean48 = charSequenceList39.offer((java.lang.CharSequence) "");
        charSequenceList39.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean53 = charSequenceList39.add((java.lang.CharSequence) "");
        int int54 = charSequenceList9.lastIndexOf((java.lang.Object) boolean53);
        boolean boolean55 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        boolean boolean57 = charSequenceList9.remove((java.lang.Object) (short) 100);
        java.lang.CharSequence charSequence58 = charSequenceList9.peekLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "hi!" + "'", charSequence21, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "hi!" + "'", charSequence36, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[hi!, ]" + "'", str45, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + charSequence58 + "' != '" + "hi!" + "'", charSequence58, "hi!");
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor25 = charSequenceList2.descendingIterator();
        java.lang.CharSequence charSequence26 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.Object obj35 = null;
        boolean boolean36 = charSequenceList30.equals(obj35);
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = charSequenceList39.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        java.lang.CharSequence charSequence44 = charSequenceList39.peek();
        java.lang.CharSequence charSequence45 = charSequenceList39.pollFirst();
        boolean boolean46 = charSequenceList30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = charSequenceList49.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        java.lang.CharSequence charSequence54 = charSequenceList49.peek();
        int int55 = charSequenceList30.indexOf((java.lang.Object) charSequence54);
        int int56 = charSequenceList30.size();
        java.lang.Object obj57 = charSequenceList30.clone();
        boolean boolean58 = charSequenceList2.addAll((int) (short) 1, (java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        java.lang.CharSequence charSequence59 = charSequenceList2.removeFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceItor25);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "hi!" + "'", charSequence44, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence45 + "' != '" + "hi!" + "'", charSequence45, "hi!");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "hi!" + "'", charSequence54, "hi!");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + charSequence59 + "' != '" + "hi!" + "'", charSequence59, "hi!");
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        java.lang.Object obj25 = null;
        boolean boolean26 = charSequenceList20.equals(obj25);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        boolean boolean32 = charSequenceList20.removeLastOccurrence((java.lang.Object) charSequenceList29);
        boolean boolean33 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence34 = charSequenceList2.poll();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.CharSequence> charSequenceList37 = charSequenceList2.subList((int) (byte) -1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: fromIndex = -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(charSequence34);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        java.util.LinkedList<java.lang.CharSequence> charSequenceList0 = new java.util.LinkedList<java.lang.CharSequence>();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor1 = charSequenceList0.descendingIterator();
        charSequenceList0.addFirst((java.lang.CharSequence) "[[hi!, ], hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceItor1);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean18 = charSequenceList15.isEmpty();
        charSequenceList15.clear();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        int int9 = charSequenceList2.size();
        boolean boolean11 = charSequenceList2.add((java.lang.CharSequence) "[hi!, ]");
        boolean boolean13 = charSequenceList2.offerLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator18 = charSequenceList16.spliterator();
        boolean boolean19 = charSequenceList16.isEmpty();
        java.lang.CharSequence charSequence20 = charSequenceList16.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream21 = charSequenceList16.stream();
        java.lang.String str22 = charSequenceList16.toString();
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList26 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26, charSequenceArray25);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator28 = charSequenceList26.spliterator();
        boolean boolean29 = charSequenceList26.isEmpty();
        java.lang.CharSequence charSequence30 = charSequenceList26.removeLast();
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList33, charSequenceArray32);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean37 = charSequenceList33.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList36);
        java.lang.CharSequence charSequence38 = charSequenceList33.peek();
        boolean boolean40 = charSequenceList33.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList43, charSequenceArray42);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = charSequenceList43.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        boolean boolean48 = charSequenceList33.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        java.lang.CharSequence charSequence49 = charSequenceList33.pop();
        boolean boolean50 = charSequenceList26.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList53 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53, charSequenceArray52);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = charSequenceList53.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList56);
        java.lang.Object obj58 = null;
        boolean boolean59 = charSequenceList53.equals(obj58);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList60 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList53);
        java.lang.CharSequence charSequence61 = charSequenceList53.peek();
        java.lang.CharSequence charSequence62 = charSequenceList53.remove();
        boolean boolean63 = charSequenceList33.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53);
        boolean boolean64 = charSequenceList16.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList53);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor65 = charSequenceList53.descendingIterator();
        boolean boolean66 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertNotNull(charSequenceStream21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[]" + "'", str22, "[]");
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "" + "'", charSequence30, "");
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "hi!" + "'", charSequence38, "hi!");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "hi!" + "'", charSequence49, "hi!");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + charSequence61 + "' != '" + "hi!" + "'", charSequence61, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence62 + "' != '" + "hi!" + "'", charSequence62, "hi!");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(charSequenceItor65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        java.lang.CharSequence charSequence9 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence charSequence17 = charSequenceList12.peek();
        boolean boolean19 = charSequenceList12.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = charSequenceList22.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        boolean boolean27 = charSequenceList12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        charSequenceList12.clear();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.Object obj36 = charSequenceList34.clone();
        int int37 = charSequenceList12.lastIndexOf((java.lang.Object) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = charSequenceList40.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceList47.spliterator();
        int int50 = charSequenceList47.size();
        boolean boolean51 = charSequenceList40.contains((java.lang.Object) charSequenceList47);
        java.lang.CharSequence charSequence52 = charSequenceList40.element();
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList55 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55, charSequenceArray54);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator57 = charSequenceList55.spliterator();
        boolean boolean58 = charSequenceList55.isEmpty();
        charSequenceList55.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str61 = charSequenceList55.toString();
        boolean boolean62 = charSequenceList40.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55);
        boolean boolean64 = charSequenceList55.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor65 = charSequenceList55.descendingIterator();
        charSequenceList55.clear();
        boolean boolean67 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55);
        boolean boolean68 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor69 = charSequenceList12.iterator();
        java.lang.CharSequence charSequence70 = charSequenceList12.pollLast();
        java.lang.CharSequence[] charSequenceArray72 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList73 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList73, charSequenceArray72);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator75 = charSequenceList73.spliterator();
        boolean boolean76 = charSequenceList73.isEmpty();
        java.lang.CharSequence charSequence77 = charSequenceList73.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream78 = charSequenceList73.stream();
        java.lang.String str79 = charSequenceList73.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor80 = charSequenceList73.descendingIterator();
        charSequenceList73.push((java.lang.CharSequence) "[hi!, ]");
        boolean boolean83 = charSequenceList12.equals((java.lang.Object) charSequenceList73);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "[]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "hi!" + "'", charSequence52, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[hi!, ]" + "'", str61, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(charSequenceItor65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(charSequenceItor69);
        org.junit.Assert.assertNull(charSequence70);
        org.junit.Assert.assertNotNull(charSequenceArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + charSequence77 + "' != '" + "" + "'", charSequence77, "");
        org.junit.Assert.assertNotNull(charSequenceStream78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[]" + "'", str79, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor80);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        java.lang.CharSequence charSequence5 = charSequenceList2.getLast();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeFirst();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence7 = charSequenceList2.getLast();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertEquals("'" + charSequence5 + "' != '" + "" + "'", charSequence5, "");
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean10 = charSequenceList2.offerLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        boolean boolean19 = charSequenceList13.offerFirst((java.lang.CharSequence) "hi!");
        int int20 = charSequenceList2.lastIndexOf((java.lang.Object) "hi!");
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList26 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean27 = charSequenceList23.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList26);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator32 = charSequenceList30.spliterator();
        int int33 = charSequenceList30.size();
        boolean boolean34 = charSequenceList23.contains((java.lang.Object) charSequenceList30);
        java.lang.CharSequence charSequence35 = charSequenceList23.element();
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceList38.spliterator();
        boolean boolean41 = charSequenceList38.isEmpty();
        charSequenceList38.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str44 = charSequenceList38.toString();
        boolean boolean45 = charSequenceList23.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        boolean boolean47 = charSequenceList38.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor48 = charSequenceList38.descendingIterator();
        boolean boolean49 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceList38.spliterator();
        java.lang.Object obj51 = charSequenceList38.clone();
        boolean boolean53 = charSequenceList38.add((java.lang.CharSequence) "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[hi!, ]" + "'", str44, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceItor48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "[hi!, , ]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "[hi!, , ]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "[hi!, , ]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList8 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList8.spliterator();
        int int11 = charSequenceList8.size();
        boolean boolean12 = charSequenceList2.contains((java.lang.Object) charSequenceList8);
        java.lang.CharSequence charSequence13 = charSequenceList8.removeLast();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator18 = charSequenceList16.spliterator();
        boolean boolean19 = charSequenceList16.isEmpty();
        charSequenceList16.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str22 = charSequenceList16.toString();
        java.lang.CharSequence charSequence23 = charSequenceList16.removeFirst();
        boolean boolean25 = charSequenceList16.offer((java.lang.CharSequence) "hi!");
        boolean boolean26 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        java.util.LinkedList<java.lang.Comparable<java.lang.String>> strComparableList32 = new java.util.LinkedList<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = charSequenceList29.contains((java.lang.Object) strComparableList32);
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = charSequenceList36.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList43, charSequenceArray42);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator45 = charSequenceList43.spliterator();
        int int46 = charSequenceList43.size();
        boolean boolean47 = charSequenceList36.contains((java.lang.Object) charSequenceList43);
        java.lang.CharSequence charSequence48 = charSequenceList36.element();
        java.lang.CharSequence[] charSequenceArray50 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList51 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList51, charSequenceArray50);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList54 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean55 = charSequenceList51.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList54);
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList58 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58, charSequenceArray57);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator60 = charSequenceList58.spliterator();
        int int61 = charSequenceList58.size();
        boolean boolean62 = charSequenceList51.contains((java.lang.Object) charSequenceList58);
        java.lang.CharSequence charSequence63 = charSequenceList51.element();
        java.lang.CharSequence[] charSequenceArray65 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList66 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList66, charSequenceArray65);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator68 = charSequenceList66.spliterator();
        boolean boolean69 = charSequenceList66.isEmpty();
        charSequenceList66.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str72 = charSequenceList66.toString();
        boolean boolean73 = charSequenceList51.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList66);
        boolean boolean75 = charSequenceList66.offer((java.lang.CharSequence) "");
        charSequenceList66.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean80 = charSequenceList66.add((java.lang.CharSequence) "");
        int int81 = charSequenceList36.lastIndexOf((java.lang.Object) boolean80);
        boolean boolean82 = charSequenceList29.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36);
        boolean boolean84 = charSequenceList36.remove((java.lang.Object) (short) 100);
        int int85 = charSequenceList36.size();
        int int86 = charSequenceList16.lastIndexOf((java.lang.Object) int85);
        java.lang.CharSequence charSequence87 = charSequenceList16.element();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor89 = charSequenceList16.listIterator((int) (short) 0);
        boolean boolean91 = charSequenceList16.offerLast((java.lang.CharSequence) "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[hi!, ]" + "'", str22, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "hi!" + "'", charSequence23, "hi!");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "hi!" + "'", charSequence48, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + charSequence63 + "' != '" + "hi!" + "'", charSequence63, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[hi!, ]" + "'", str72, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence87 + "' != '" + "" + "'", charSequence87, "");
        org.junit.Assert.assertNotNull(charSequenceItor89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        java.lang.Object obj25 = null;
        boolean boolean26 = charSequenceList20.equals(obj25);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        boolean boolean32 = charSequenceList20.removeLastOccurrence((java.lang.Object) charSequenceList29);
        boolean boolean33 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = charSequenceList36.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.Object obj41 = null;
        boolean boolean42 = charSequenceList36.equals(obj41);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean49 = charSequenceList45.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList48);
        java.lang.CharSequence charSequence50 = charSequenceList45.peek();
        java.lang.CharSequence charSequence51 = charSequenceList45.pollFirst();
        boolean boolean52 = charSequenceList36.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        java.lang.CharSequence charSequence53 = charSequenceList36.peek();
        int int54 = charSequenceList2.indexOf((java.lang.Object) charSequenceList36);
        boolean boolean56 = charSequenceList2.offer((java.lang.CharSequence) "[]");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor57 = charSequenceList2.iterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "hi!" + "'", charSequence50, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "hi!" + "'", charSequence51, "hi!");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "hi!" + "'", charSequence53, "hi!");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charSequenceItor57);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        int int27 = charSequenceList2.indexOf((java.lang.Object) charSequence26);
        int int28 = charSequenceList2.size();
        java.lang.CharSequence charSequence29 = charSequenceList2.poll();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceList2.spliterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceList11.spliterator();
        java.lang.CharSequence charSequence16 = charSequenceList11.element();
        boolean boolean18 = charSequenceList11.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceList28.spliterator();
        int int31 = charSequenceList28.size();
        boolean boolean32 = charSequenceList21.contains((java.lang.Object) charSequenceList28);
        java.lang.CharSequence charSequence33 = charSequenceList21.element();
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceList36.spliterator();
        boolean boolean39 = charSequenceList36.isEmpty();
        charSequenceList36.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str42 = charSequenceList36.toString();
        boolean boolean43 = charSequenceList21.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36);
        boolean boolean45 = charSequenceList36.offer((java.lang.CharSequence) "");
        charSequenceList36.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean50 = charSequenceList36.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence51 = charSequenceList36.poll();
        java.lang.CharSequence charSequence52 = charSequenceList36.peek();
        int int53 = charSequenceList11.indexOf((java.lang.Object) charSequenceList36);
        java.lang.CharSequence charSequence54 = charSequenceList11.getFirst();
        java.lang.CharSequence[] charSequenceArray56 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList57 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList57, charSequenceArray56);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator59 = charSequenceList57.spliterator();
        boolean boolean60 = charSequenceList57.isEmpty();
        charSequenceList57.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean64 = charSequenceList57.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence65 = charSequenceList57.pop();
        charSequenceList57.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence68 = charSequenceList57.peek();
        boolean boolean69 = charSequenceList11.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList57);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "hi!" + "'", charSequence33, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[hi!, ]" + "'", str42, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "hi!" + "'", charSequence51, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "hi!" + "'", charSequence52, "hi!");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "[hi!, ]" + "'", charSequence54, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + charSequence65 + "' != '" + "hi!" + "'", charSequence65, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence68 + "' != '" + "hi!" + "'", charSequence68, "hi!");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList13.equals(obj18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        boolean boolean25 = charSequenceList13.removeLastOccurrence((java.lang.Object) charSequenceList22);
        java.lang.CharSequence charSequence26 = charSequenceList22.removeLast();
        boolean boolean27 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        boolean boolean28 = charSequenceList2.isEmpty();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence charSequence15 = charSequenceList9.pollLast();
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = charSequenceList18.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        java.lang.CharSequence charSequence23 = charSequenceList18.peek();
        boolean boolean25 = charSequenceList18.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = charSequenceList28.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean33 = charSequenceList18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean34 = charSequenceList9.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        boolean boolean43 = charSequenceList37.offerFirst((java.lang.CharSequence) "hi!");
        boolean boolean44 = charSequenceList31.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceList47.spliterator();
        boolean boolean50 = charSequenceList47.isEmpty();
        java.lang.CharSequence charSequence51 = charSequenceList47.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream52 = charSequenceList47.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream53 = charSequenceList47.parallelStream();
        java.lang.Object[] objArray54 = charSequenceList47.toArray();
        boolean boolean55 = charSequenceList37.remove((java.lang.Object) objArray54);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence57 = charSequenceList37.remove((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNull(charSequence15);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "hi!" + "'", charSequence23, "hi!");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "" + "'", charSequence51, "");
        org.junit.Assert.assertNotNull(charSequenceStream52);
        org.junit.Assert.assertNotNull(charSequenceStream53);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        charSequenceList2.clear();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.Object obj26 = charSequenceList24.clone();
        int int27 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList24);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator39 = charSequenceList37.spliterator();
        int int40 = charSequenceList37.size();
        boolean boolean41 = charSequenceList30.contains((java.lang.Object) charSequenceList37);
        java.lang.CharSequence charSequence42 = charSequenceList30.element();
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator47 = charSequenceList45.spliterator();
        boolean boolean48 = charSequenceList45.isEmpty();
        charSequenceList45.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str51 = charSequenceList45.toString();
        boolean boolean52 = charSequenceList30.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        boolean boolean54 = charSequenceList45.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor55 = charSequenceList45.descendingIterator();
        charSequenceList45.clear();
        boolean boolean57 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        java.lang.CharSequence charSequence58 = charSequenceList45.peekLast();
        boolean boolean60 = charSequenceList45.offerLast((java.lang.CharSequence) "[hi!, [hi!, ]]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[hi!, ]" + "'", str51, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charSequenceItor55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(charSequence58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor27 = charSequenceList17.descendingIterator();
        java.lang.CharSequence charSequence28 = charSequenceList17.removeLast();
        java.lang.CharSequence charSequence29 = null;
        boolean boolean30 = charSequenceList17.add(charSequence29);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceItor27);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence22 = charSequenceList17.peek();
        boolean boolean24 = charSequenceList17.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean25 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence26 = charSequenceList2.pop();
        java.lang.CharSequence charSequence27 = charSequenceList2.peekFirst();
        java.lang.CharSequence charSequence28 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceList38.spliterator();
        int int41 = charSequenceList38.size();
        boolean boolean42 = charSequenceList31.contains((java.lang.Object) charSequenceList38);
        java.lang.CharSequence charSequence43 = charSequenceList31.element();
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceList46.spliterator();
        boolean boolean49 = charSequenceList46.isEmpty();
        charSequenceList46.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str52 = charSequenceList46.toString();
        boolean boolean53 = charSequenceList31.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        boolean boolean55 = charSequenceList46.offer((java.lang.CharSequence) "");
        charSequenceList46.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList46.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        charSequenceList46.addLast((java.lang.CharSequence) "hi!");
        int int64 = charSequenceList2.indexOf((java.lang.Object) charSequenceList46);
        charSequenceList2.addLast((java.lang.CharSequence) "[[hi!, ], hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNull(charSequence27);
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "hi!" + "'", charSequence43, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[hi!, ]" + "'", str52, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        java.lang.CharSequence charSequence6 = charSequenceList2.remove();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        boolean boolean12 = charSequenceList9.isEmpty();
        charSequenceList9.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean16 = charSequenceList9.offerLast((java.lang.CharSequence) "");
        charSequenceList9.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence19 = charSequenceList9.removeLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor20 = charSequenceList9.listIterator();
        boolean boolean21 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList9);
        boolean boolean22 = charSequenceList2.isEmpty();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertNotNull(charSequenceItor20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        boolean boolean14 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence15 = charSequenceList2.remove();
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = charSequenceList18.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator27 = charSequenceList25.spliterator();
        int int28 = charSequenceList25.size();
        boolean boolean29 = charSequenceList18.contains((java.lang.Object) charSequenceList25);
        java.lang.CharSequence charSequence30 = charSequenceList18.element();
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList33, charSequenceArray32);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator35 = charSequenceList33.spliterator();
        boolean boolean36 = charSequenceList33.isEmpty();
        charSequenceList33.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str39 = charSequenceList33.toString();
        boolean boolean40 = charSequenceList18.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        boolean boolean42 = charSequenceList33.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence43 = charSequenceList33.pollFirst();
        boolean boolean44 = charSequenceList2.contains((java.lang.Object) charSequence43);
        java.lang.CharSequence charSequence45 = charSequenceList2.pollFirst();
        java.lang.CharSequence charSequence46 = charSequenceList2.poll();
        java.lang.CharSequence charSequence47 = charSequenceList2.pollLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "hi!" + "'", charSequence15, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "hi!" + "'", charSequence30, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[hi!, ]" + "'", str39, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "hi!" + "'", charSequence43, "hi!");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(charSequence45);
        org.junit.Assert.assertNull(charSequence46);
        org.junit.Assert.assertNull(charSequence47);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence charSequence15 = charSequenceList9.pollLast();
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = charSequenceList18.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        java.lang.CharSequence charSequence23 = charSequenceList18.peek();
        boolean boolean25 = charSequenceList18.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = charSequenceList28.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean33 = charSequenceList18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean34 = charSequenceList9.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        boolean boolean43 = charSequenceList37.offerFirst((java.lang.CharSequence) "hi!");
        boolean boolean44 = charSequenceList31.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        boolean boolean46 = charSequenceList31.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence47 = charSequenceList31.poll();
        java.lang.CharSequence charSequence48 = charSequenceList31.pollLast();
        charSequenceList31.push((java.lang.CharSequence) "[hi!, [[hi!, ]]]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNull(charSequence15);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "hi!" + "'", charSequence23, "hi!");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "" + "'", charSequence47, "");
        org.junit.Assert.assertNull(charSequence48);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceList12.spliterator();
        boolean boolean15 = charSequenceList12.isEmpty();
        java.lang.CharSequence charSequence16 = charSequenceList12.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream17 = charSequenceList12.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream18 = charSequenceList12.parallelStream();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = charSequenceList22.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        int int32 = charSequenceList29.size();
        boolean boolean33 = charSequenceList22.contains((java.lang.Object) charSequenceList29);
        boolean boolean34 = charSequenceList22.isEmpty();
        java.lang.Object obj35 = charSequenceList22.clone();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream36 = charSequenceList22.parallelStream();
        boolean boolean37 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence charSequence38 = charSequenceList12.getFirst();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean39 = charSequenceList2.addAll((int) 'a', (java.util.Collection<java.lang.CharSequence>) charSequenceList12);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
        org.junit.Assert.assertNotNull(charSequenceStream17);
        org.junit.Assert.assertNotNull(charSequenceStream18);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceStream36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "hi!" + "'", charSequence38, "hi!");
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence11 = charSequenceList2.pop();
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = charSequenceList14.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceList21.spliterator();
        int int24 = charSequenceList21.size();
        boolean boolean25 = charSequenceList14.contains((java.lang.Object) charSequenceList21);
        java.lang.CharSequence charSequence26 = charSequenceList14.element();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        boolean boolean32 = charSequenceList29.isEmpty();
        charSequenceList29.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str35 = charSequenceList29.toString();
        boolean boolean36 = charSequenceList14.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        boolean boolean38 = charSequenceList29.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence39 = charSequenceList29.getLast();
        boolean boolean41 = charSequenceList29.removeLastOccurrence((java.lang.Object) 100.0d);
        java.lang.CharSequence charSequence42 = charSequenceList29.getFirst();
        java.lang.CharSequence charSequence43 = charSequenceList29.peekLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream44 = charSequenceList29.stream();
        boolean boolean45 = charSequenceList2.equals((java.lang.Object) charSequenceList29);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "hi!" + "'", charSequence11, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[hi!, ]" + "'", str35, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "" + "'", charSequence39, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "" + "'", charSequence43, "");
        org.junit.Assert.assertNotNull(charSequenceStream44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence22 = charSequenceList17.peek();
        boolean boolean24 = charSequenceList17.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean25 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence26 = charSequenceList2.pop();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = charSequenceList29.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.CharSequence charSequence34 = charSequenceList29.peek();
        java.lang.CharSequence charSequence35 = charSequenceList29.pollFirst();
        charSequenceList29.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = charSequenceList40.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        java.lang.Object obj45 = null;
        boolean boolean46 = charSequenceList40.equals(obj45);
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator51 = charSequenceList49.spliterator();
        boolean boolean52 = charSequenceList40.removeLastOccurrence((java.lang.Object) charSequenceList49);
        charSequenceList40.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean55 = charSequenceList29.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        boolean boolean56 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        java.lang.Object obj57 = charSequenceList2.clone();
        charSequenceList2.push((java.lang.CharSequence) "[hi!, hi!, hi!, []]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "[]");
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor25 = charSequenceList2.descendingIterator();
        java.lang.CharSequence charSequence26 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.Object obj35 = null;
        boolean boolean36 = charSequenceList30.equals(obj35);
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = charSequenceList39.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        java.lang.CharSequence charSequence44 = charSequenceList39.peek();
        java.lang.CharSequence charSequence45 = charSequenceList39.pollFirst();
        boolean boolean46 = charSequenceList30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = charSequenceList49.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        java.lang.CharSequence charSequence54 = charSequenceList49.peek();
        int int55 = charSequenceList30.indexOf((java.lang.Object) charSequence54);
        int int56 = charSequenceList30.size();
        java.lang.Object obj57 = charSequenceList30.clone();
        boolean boolean58 = charSequenceList2.addAll((int) (short) 1, (java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        java.lang.CharSequence charSequence59 = charSequenceList2.getFirst();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence61 = charSequenceList2.remove((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceItor25);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "hi!" + "'", charSequence44, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence45 + "' != '" + "hi!" + "'", charSequence45, "hi!");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "hi!" + "'", charSequence54, "hi!");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + charSequence59 + "' != '" + "hi!" + "'", charSequence59, "hi!");
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        int int15 = charSequenceList2.size();
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = charSequenceList18.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        java.lang.Object obj23 = charSequenceList21.clone();
        charSequenceList21.addLast((java.lang.CharSequence) "[hi!, ]");
        boolean boolean27 = charSequenceList21.offerLast((java.lang.CharSequence) "[hi!, ]");
        boolean boolean28 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList21);
        charSequenceList2.addLast((java.lang.CharSequence) "[hi!, hi!, ]");
        java.lang.Object obj31 = null;
        boolean boolean32 = charSequenceList2.contains(obj31);
        java.lang.CharSequence charSequence33 = charSequenceList2.pollLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "[hi!, hi!, ]" + "'", charSequence33, "[hi!, hi!, ]");
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList2.spliterator();
        boolean boolean12 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        charSequenceList2.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceList18.spliterator();
        boolean boolean21 = charSequenceList18.isEmpty();
        boolean boolean22 = charSequenceList2.equals((java.lang.Object) charSequenceList18);
        java.lang.CharSequence charSequence24 = charSequenceList2.remove((int) (short) 0);
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = charSequenceList27.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceList34.spliterator();
        int int37 = charSequenceList34.size();
        boolean boolean38 = charSequenceList27.contains((java.lang.Object) charSequenceList34);
        java.lang.CharSequence charSequence39 = charSequenceList27.element();
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42, charSequenceArray41);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator44 = charSequenceList42.spliterator();
        boolean boolean45 = charSequenceList42.isEmpty();
        charSequenceList42.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str48 = charSequenceList42.toString();
        boolean boolean49 = charSequenceList27.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        boolean boolean51 = charSequenceList42.offer((java.lang.CharSequence) "");
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor52 = charSequenceList42.listIterator();
        java.lang.CharSequence charSequence53 = charSequenceList42.poll();
        java.lang.CharSequence charSequence54 = charSequenceList42.peek();
        java.lang.CharSequence[] charSequenceArray56 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList57 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList57, charSequenceArray56);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList60 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean61 = charSequenceList57.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList60);
        java.lang.Object obj62 = null;
        boolean boolean63 = charSequenceList57.equals(obj62);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList64 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList57);
        java.lang.CharSequence charSequence65 = charSequenceList57.peek();
        boolean boolean66 = charSequenceList42.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList57);
        java.lang.CharSequence charSequence67 = charSequenceList57.pollFirst();
        boolean boolean68 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequence67);
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList71 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList71, charSequenceArray70);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList74 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean75 = charSequenceList71.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList74);
        java.lang.CharSequence[] charSequenceArray77 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList78 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList78, charSequenceArray77);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator80 = charSequenceList78.spliterator();
        int int81 = charSequenceList78.size();
        boolean boolean82 = charSequenceList71.contains((java.lang.Object) charSequenceList78);
        java.lang.CharSequence charSequence83 = charSequenceList71.element();
        java.lang.CharSequence[] charSequenceArray85 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList86 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList86, charSequenceArray85);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator88 = charSequenceList86.spliterator();
        boolean boolean89 = charSequenceList86.isEmpty();
        charSequenceList86.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str92 = charSequenceList86.toString();
        boolean boolean93 = charSequenceList71.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList86);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor94 = charSequenceList71.descendingIterator();
        java.lang.CharSequence charSequence95 = charSequenceList71.peekFirst();
        boolean boolean96 = charSequenceList2.contains((java.lang.Object) charSequenceList71);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "hi!" + "'", charSequence24, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "hi!" + "'", charSequence39, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[hi!, ]" + "'", str48, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charSequenceItor52);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "hi!" + "'", charSequence53, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "" + "'", charSequence54, "");
        org.junit.Assert.assertNotNull(charSequenceArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + charSequence65 + "' != '" + "hi!" + "'", charSequence65, "hi!");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + charSequence67 + "' != '" + "hi!" + "'", charSequence67, "hi!");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(charSequenceArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + charSequence83 + "' != '" + "hi!" + "'", charSequence83, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[hi!, ]" + "'", str92, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(charSequenceItor94);
        org.junit.Assert.assertEquals("'" + charSequence95 + "' != '" + "hi!" + "'", charSequence95, "hi!");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        boolean boolean11 = charSequenceList9.offer((java.lang.CharSequence) "[[hi!, ]]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence charSequence17 = charSequenceList12.peek();
        java.lang.CharSequence charSequence18 = charSequenceList12.pollFirst();
        boolean boolean19 = charSequenceList2.contains((java.lang.Object) charSequence18);
        java.lang.CharSequence charSequence20 = charSequenceList2.remove();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence23 = charSequenceList2.set((int) (byte) -1, (java.lang.CharSequence) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "hi!" + "'", charSequence18, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "hi!" + "'", charSequence20, "hi!");
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence charSequence18 = charSequenceList2.pop();
        boolean boolean19 = charSequenceList2.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence20 = charSequenceList2.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "hi!" + "'", charSequence18, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence[] charSequenceArray9 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList10 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList10, charSequenceArray9);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = charSequenceList10.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        int int20 = charSequenceList17.size();
        boolean boolean21 = charSequenceList10.contains((java.lang.Object) charSequenceList17);
        java.lang.CharSequence charSequence22 = charSequenceList10.element();
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator27 = charSequenceList25.spliterator();
        boolean boolean28 = charSequenceList25.isEmpty();
        charSequenceList25.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str31 = charSequenceList25.toString();
        boolean boolean32 = charSequenceList10.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        boolean boolean34 = charSequenceList25.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor35 = charSequenceList25.descendingIterator();
        boolean boolean36 = charSequenceList25.isEmpty();
        int int37 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList25);
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator42 = charSequenceList40.spliterator();
        int int43 = charSequenceList40.size();
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceList46.spliterator();
        int int49 = charSequenceList46.size();
        boolean boolean50 = charSequenceList40.contains((java.lang.Object) charSequenceList46);
        java.lang.CharSequence charSequence51 = charSequenceList46.removeLast();
        java.lang.CharSequence[] charSequenceArray53 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList54 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList54, charSequenceArray53);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator56 = charSequenceList54.spliterator();
        boolean boolean57 = charSequenceList54.isEmpty();
        charSequenceList54.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str60 = charSequenceList54.toString();
        java.lang.CharSequence charSequence61 = charSequenceList54.removeFirst();
        boolean boolean63 = charSequenceList54.offer((java.lang.CharSequence) "hi!");
        boolean boolean64 = charSequenceList46.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList54);
        boolean boolean65 = charSequenceList2.removeLastOccurrence((java.lang.Object) boolean64);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[hi!, ]" + "'", str31, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceItor35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "" + "'", charSequence51, "");
        org.junit.Assert.assertNotNull(charSequenceArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[hi!, ]" + "'", str60, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence61 + "' != '" + "hi!" + "'", charSequence61, "hi!");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = charSequenceList5.clone();
        charSequenceList5.addLast((java.lang.CharSequence) "[hi!, ]");
        boolean boolean11 = charSequenceList5.offerLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence12 = charSequenceList5.pollFirst();
        java.lang.CharSequence charSequence13 = charSequenceList5.removeLast();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = charSequenceList16.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence charSequence21 = charSequenceList16.peek();
        boolean boolean23 = charSequenceList16.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList26 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26, charSequenceArray25);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = charSequenceList26.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        boolean boolean31 = charSequenceList16.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        boolean boolean32 = charSequenceList29.isEmpty();
        java.lang.CharSequence charSequence33 = charSequenceList29.peekLast();
        java.lang.CharSequence charSequence34 = charSequenceList29.poll();
        java.lang.String str35 = charSequenceList29.toString();
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList41 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean42 = charSequenceList38.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList41);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator47 = charSequenceList45.spliterator();
        int int48 = charSequenceList45.size();
        boolean boolean49 = charSequenceList38.contains((java.lang.Object) charSequenceList45);
        java.lang.CharSequence charSequence50 = charSequenceList38.element();
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList53 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53, charSequenceArray52);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator55 = charSequenceList53.spliterator();
        boolean boolean56 = charSequenceList53.isEmpty();
        charSequenceList53.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str59 = charSequenceList53.toString();
        boolean boolean60 = charSequenceList38.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53);
        boolean boolean62 = charSequenceList53.offer((java.lang.CharSequence) "");
        charSequenceList53.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList53.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        boolean boolean70 = charSequenceList53.offerFirst((java.lang.CharSequence) "hi!");
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator71 = charSequenceList53.spliterator();
        boolean boolean72 = charSequenceList29.removeFirstOccurrence((java.lang.Object) charSequenceSpliterator71);
        boolean boolean73 = charSequenceList5.removeLastOccurrence((java.lang.Object) boolean72);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "[hi!, ]" + "'", charSequence12, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "[hi!, ]" + "'", charSequence13, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "hi!" + "'", charSequence21, "hi!");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(charSequence33);
        org.junit.Assert.assertNull(charSequence34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[]" + "'", str35, "[]");
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "hi!" + "'", charSequence50, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[hi!, ]" + "'", str59, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = charSequenceList5.clone();
        charSequenceList5.addLast((java.lang.CharSequence) "[hi!, ]");
        boolean boolean11 = charSequenceList5.offerLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence12 = charSequenceList5.pollFirst();
        java.lang.CharSequence charSequence13 = charSequenceList5.pollLast();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator18 = charSequenceList16.spliterator();
        boolean boolean19 = charSequenceList16.isEmpty();
        java.lang.CharSequence charSequence20 = charSequenceList16.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream21 = charSequenceList16.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream22 = charSequenceList16.parallelStream();
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList26 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26, charSequenceArray25);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = charSequenceList26.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList33, charSequenceArray32);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator35 = charSequenceList33.spliterator();
        int int36 = charSequenceList33.size();
        boolean boolean37 = charSequenceList26.contains((java.lang.Object) charSequenceList33);
        boolean boolean38 = charSequenceList26.isEmpty();
        java.lang.Object obj39 = charSequenceList26.clone();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream40 = charSequenceList26.parallelStream();
        boolean boolean41 = charSequenceList16.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList26);
        java.lang.Object[] objArray42 = charSequenceList16.toArray();
        charSequenceList16.clear();
        java.lang.CharSequence charSequence44 = charSequenceList16.peekLast();
        boolean boolean45 = charSequenceList5.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "[hi!, ]" + "'", charSequence12, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "[hi!, ]" + "'", charSequence13, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertNotNull(charSequenceStream21);
        org.junit.Assert.assertNotNull(charSequenceStream22);
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceStream40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertNull(charSequence44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList8 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList8.spliterator();
        boolean boolean11 = charSequenceList8.isEmpty();
        java.lang.CharSequence charSequence12 = charSequenceList8.removeLast();
        int int13 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList8);
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = charSequenceList16.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator25 = charSequenceList23.spliterator();
        int int26 = charSequenceList23.size();
        boolean boolean27 = charSequenceList16.contains((java.lang.Object) charSequenceList23);
        java.lang.CharSequence charSequence28 = charSequenceList23.removeFirst();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceList38.spliterator();
        int int41 = charSequenceList38.size();
        boolean boolean42 = charSequenceList31.contains((java.lang.Object) charSequenceList38);
        java.lang.CharSequence charSequence43 = charSequenceList31.element();
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceList46.spliterator();
        boolean boolean49 = charSequenceList46.isEmpty();
        charSequenceList46.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str52 = charSequenceList46.toString();
        boolean boolean53 = charSequenceList31.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor54 = charSequenceList31.descendingIterator();
        java.lang.CharSequence charSequence55 = charSequenceList31.peekFirst();
        int int56 = charSequenceList23.indexOf((java.lang.Object) charSequenceList31);
        charSequenceList23.addLast((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence59 = charSequenceList23.peekFirst();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream60 = charSequenceList23.stream();
        boolean boolean61 = charSequenceList8.removeFirstOccurrence((java.lang.Object) charSequenceList23);
        boolean boolean63 = charSequenceList8.offerFirst((java.lang.CharSequence) "[]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "hi!" + "'", charSequence43, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[hi!, ]" + "'", str52, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceItor54);
        org.junit.Assert.assertEquals("'" + charSequence55 + "' != '" + "hi!" + "'", charSequence55, "hi!");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence59 + "' != '" + "hi!" + "'", charSequence59, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        java.lang.CharSequence charSequence6 = charSequenceList2.remove();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        boolean boolean12 = charSequenceList9.isEmpty();
        charSequenceList9.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean16 = charSequenceList9.offerLast((java.lang.CharSequence) "");
        charSequenceList9.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence19 = charSequenceList9.removeLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor20 = charSequenceList9.listIterator();
        boolean boolean21 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence22 = charSequenceList2.peek();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence23 = charSequenceList2.removeLast();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertNotNull(charSequenceItor20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(charSequence22);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        boolean boolean14 = charSequenceList2.isEmpty();
        java.lang.Object obj15 = charSequenceList2.clone();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceList2.parallelStream();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList19.equals(obj24);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = charSequenceList28.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        java.lang.CharSequence charSequence33 = charSequenceList28.peek();
        java.lang.CharSequence charSequence34 = charSequenceList28.pollFirst();
        boolean boolean35 = charSequenceList19.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        boolean boolean36 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        boolean boolean38 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        boolean boolean40 = charSequenceList2.offerLast((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence41 = charSequenceList2.pop();
        java.lang.Object obj42 = charSequenceList2.clone();
        charSequenceList2.clear();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "hi!" + "'", charSequence33, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "[, hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "[, hi!]");
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        int int27 = charSequenceList2.indexOf((java.lang.Object) charSequence26);
        int int28 = charSequenceList2.size();
        java.lang.CharSequence charSequence29 = charSequenceList2.pop();
        charSequenceList2.push((java.lang.CharSequence) "[hi!]");
        charSequenceList2.addLast((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = charSequenceList36.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence charSequence41 = charSequenceList36.peek();
        boolean boolean43 = charSequenceList36.add((java.lang.CharSequence) "[hi!, ]");
        boolean boolean44 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36);
        java.lang.CharSequence charSequence45 = charSequenceList36.removeLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + charSequence45 + "' != '" + "[hi!, ]" + "'", charSequence45, "[hi!, ]");
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        java.util.LinkedList<java.lang.CharSequence> charSequenceList0 = new java.util.LinkedList<java.lang.CharSequence>();
        java.lang.CharSequence charSequence1 = charSequenceList0.poll();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor2 = charSequenceList0.iterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence4 = charSequenceList0.get(0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(charSequence1);
        org.junit.Assert.assertNotNull(charSequenceItor2);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceList2.parallelStream();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceList18.spliterator();
        int int21 = charSequenceList18.size();
        boolean boolean22 = charSequenceList11.contains((java.lang.Object) charSequenceList18);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = charSequenceList25.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence charSequence30 = charSequenceList25.peek();
        java.lang.CharSequence charSequence31 = charSequenceList25.pollFirst();
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceList34.spliterator();
        boolean boolean37 = charSequenceList34.isEmpty();
        charSequenceList34.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean41 = charSequenceList34.offerLast((java.lang.CharSequence) "");
        charSequenceList34.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean44 = charSequenceList25.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        boolean boolean45 = charSequenceList18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        int int46 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList18);
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = charSequenceList49.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        java.lang.Object obj54 = charSequenceList52.clone();
        charSequenceList52.addLast((java.lang.CharSequence) "[hi!, ]");
        boolean boolean58 = charSequenceList52.offerLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence59 = charSequenceList52.pollFirst();
        java.lang.CharSequence charSequence60 = charSequenceList52.removeLast();
        int int61 = charSequenceList18.indexOf((java.lang.Object) charSequenceList52);
        boolean boolean63 = charSequenceList18.offer((java.lang.CharSequence) "[hi!, [hi!, ]]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "hi!" + "'", charSequence30, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "hi!" + "'", charSequence31, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + charSequence59 + "' != '" + "[hi!, ]" + "'", charSequence59, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence60 + "' != '" + "[hi!, ]" + "'", charSequence60, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList13.equals(obj18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        boolean boolean25 = charSequenceList13.removeLastOccurrence((java.lang.Object) charSequenceList22);
        java.lang.CharSequence charSequence26 = charSequenceList22.removeLast();
        boolean boolean27 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator39 = charSequenceList37.spliterator();
        int int40 = charSequenceList37.size();
        boolean boolean41 = charSequenceList30.contains((java.lang.Object) charSequenceList37);
        java.lang.CharSequence charSequence42 = charSequenceList30.element();
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator47 = charSequenceList45.spliterator();
        boolean boolean48 = charSequenceList45.isEmpty();
        charSequenceList45.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str51 = charSequenceList45.toString();
        boolean boolean52 = charSequenceList30.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        boolean boolean54 = charSequenceList45.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor55 = charSequenceList45.descendingIterator();
        boolean boolean56 = charSequenceList22.remove((java.lang.Object) charSequenceItor55);
        charSequenceList22.addFirst((java.lang.CharSequence) "[hi!, [[hi!, ]]]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[hi!, ]" + "'", str51, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charSequenceItor55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream15 = charSequenceList9.parallelStream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNotNull(charSequenceStream15);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceList17.stream();
        boolean boolean27 = charSequenceList17.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence28 = charSequenceList17.poll();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceList31.spliterator();
        charSequenceList31.clear();
        boolean boolean35 = charSequenceList17.removeLastOccurrence((java.lang.Object) charSequenceList31);
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList41 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean42 = charSequenceList38.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList41);
        java.lang.Object obj43 = null;
        boolean boolean44 = charSequenceList38.equals(obj43);
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceList47.spliterator();
        boolean boolean50 = charSequenceList38.removeLastOccurrence((java.lang.Object) charSequenceList47);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator51 = charSequenceList47.spliterator();
        java.lang.CharSequence charSequence52 = charSequenceList47.element();
        boolean boolean54 = charSequenceList47.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence[] charSequenceArray56 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList57 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList57, charSequenceArray56);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList60 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean61 = charSequenceList57.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList60);
        java.lang.CharSequence[] charSequenceArray63 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList64 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64, charSequenceArray63);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator66 = charSequenceList64.spliterator();
        int int67 = charSequenceList64.size();
        boolean boolean68 = charSequenceList57.contains((java.lang.Object) charSequenceList64);
        java.lang.CharSequence charSequence69 = charSequenceList57.element();
        java.lang.CharSequence[] charSequenceArray71 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList72 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList72, charSequenceArray71);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator74 = charSequenceList72.spliterator();
        boolean boolean75 = charSequenceList72.isEmpty();
        charSequenceList72.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str78 = charSequenceList72.toString();
        boolean boolean79 = charSequenceList57.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList72);
        boolean boolean81 = charSequenceList72.offer((java.lang.CharSequence) "");
        charSequenceList72.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean86 = charSequenceList72.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence87 = charSequenceList72.poll();
        java.lang.CharSequence charSequence88 = charSequenceList72.peek();
        int int89 = charSequenceList47.indexOf((java.lang.Object) charSequenceList72);
        java.lang.CharSequence charSequence90 = charSequenceList72.removeFirst();
        boolean boolean91 = charSequenceList17.contains((java.lang.Object) charSequence90);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceStream25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "[hi!, ]" + "'", charSequence28, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator51);
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "" + "'", charSequence52, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charSequenceArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charSequenceArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + charSequence69 + "' != '" + "hi!" + "'", charSequence69, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[hi!, ]" + "'", str78, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertEquals("'" + charSequence87 + "' != '" + "hi!" + "'", charSequence87, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence88 + "' != '" + "hi!" + "'", charSequence88, "hi!");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence90 + "' != '" + "hi!" + "'", charSequence90, "hi!");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        java.lang.Object obj25 = null;
        boolean boolean26 = charSequenceList20.equals(obj25);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        boolean boolean32 = charSequenceList20.removeLastOccurrence((java.lang.Object) charSequenceList29);
        boolean boolean33 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = charSequenceList36.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.Object obj41 = null;
        boolean boolean42 = charSequenceList36.equals(obj41);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean49 = charSequenceList45.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList48);
        java.lang.CharSequence charSequence50 = charSequenceList45.peek();
        java.lang.CharSequence charSequence51 = charSequenceList45.pollFirst();
        boolean boolean52 = charSequenceList36.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        java.lang.CharSequence charSequence53 = charSequenceList36.peek();
        int int54 = charSequenceList2.indexOf((java.lang.Object) charSequenceList36);
        java.lang.CharSequence charSequence55 = charSequenceList36.peekLast();
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList58 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58, charSequenceArray57);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList61 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean62 = charSequenceList58.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList61);
        java.lang.CharSequence[] charSequenceArray64 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList65 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList65, charSequenceArray64);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator67 = charSequenceList65.spliterator();
        int int68 = charSequenceList65.size();
        boolean boolean69 = charSequenceList58.contains((java.lang.Object) charSequenceList65);
        boolean boolean70 = charSequenceList36.contains((java.lang.Object) charSequenceList58);
        java.lang.CharSequence charSequence71 = charSequenceList36.peek();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "hi!" + "'", charSequence50, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "hi!" + "'", charSequence51, "hi!");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "hi!" + "'", charSequence53, "hi!");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence55 + "' != '" + "hi!" + "'", charSequence55, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(charSequenceArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + charSequence71 + "' != '" + "hi!" + "'", charSequence71, "hi!");
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList8 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList8.spliterator();
        boolean boolean11 = charSequenceList8.isEmpty();
        charSequenceList8.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean15 = charSequenceList8.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence16 = charSequenceList8.pop();
        charSequenceList8.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean20 = charSequenceList8.offer((java.lang.CharSequence) "[hi!, ]");
        boolean boolean22 = charSequenceList8.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence23 = charSequenceList8.getFirst();
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList26 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26, charSequenceArray25);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = charSequenceList26.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        int int32 = charSequenceList26.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence33 = charSequenceList26.removeLast();
        java.lang.CharSequence charSequence34 = charSequenceList26.peekLast();
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        java.lang.CharSequence[] charSequenceArray43 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList44 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList44, charSequenceArray43);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator46 = charSequenceList44.spliterator();
        int int47 = charSequenceList44.size();
        boolean boolean48 = charSequenceList37.contains((java.lang.Object) charSequenceList44);
        java.lang.CharSequence charSequence49 = charSequenceList37.element();
        java.lang.CharSequence[] charSequenceArray51 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52, charSequenceArray51);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator54 = charSequenceList52.spliterator();
        boolean boolean55 = charSequenceList52.isEmpty();
        charSequenceList52.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str58 = charSequenceList52.toString();
        boolean boolean59 = charSequenceList37.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream60 = charSequenceList52.stream();
        boolean boolean61 = charSequenceList26.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        java.lang.CharSequence charSequence62 = charSequenceList26.remove();
        boolean boolean63 = charSequenceList8.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26);
        int int64 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList26);
        java.lang.CharSequence charSequence65 = charSequenceList26.pollFirst();
        java.lang.Object[] objArray66 = charSequenceList26.toArray();
        boolean boolean68 = charSequenceList26.offer((java.lang.CharSequence) "[hi!, hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "[hi!, ]" + "'", charSequence23, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "hi!" + "'", charSequence33, "hi!");
        org.junit.Assert.assertNull(charSequence34);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "hi!" + "'", charSequence49, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[hi!, ]" + "'", str58, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(charSequenceStream60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + charSequence62 + "' != '" + "hi!" + "'", charSequence62, "hi!");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence65 + "' != '" + "" + "'", charSequence65, "");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList13.equals(obj18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        boolean boolean25 = charSequenceList13.removeLastOccurrence((java.lang.Object) charSequenceList22);
        java.lang.CharSequence charSequence26 = charSequenceList22.removeLast();
        boolean boolean27 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator28 = charSequenceList2.spliterator();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceList31.spliterator();
        int int34 = charSequenceList31.size();
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator39 = charSequenceList37.spliterator();
        int int40 = charSequenceList37.size();
        boolean boolean41 = charSequenceList31.contains((java.lang.Object) charSequenceList37);
        java.lang.CharSequence charSequence42 = charSequenceList37.removeLast();
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean49 = charSequenceList45.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList48);
        java.lang.CharSequence charSequence50 = charSequenceList45.peek();
        boolean boolean52 = charSequenceList45.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence charSequence53 = charSequenceList45.poll();
        java.util.LinkedList<java.lang.CharSequence> charSequenceList54 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        java.lang.CharSequence[] charSequenceArray56 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList57 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList57, charSequenceArray56);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList60 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean61 = charSequenceList57.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList60);
        java.lang.CharSequence[] charSequenceArray63 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList64 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64, charSequenceArray63);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator66 = charSequenceList64.spliterator();
        int int67 = charSequenceList64.size();
        boolean boolean68 = charSequenceList57.contains((java.lang.Object) charSequenceList64);
        java.lang.CharSequence charSequence69 = charSequenceList57.element();
        java.lang.CharSequence[] charSequenceArray71 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList72 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList72, charSequenceArray71);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator74 = charSequenceList72.spliterator();
        boolean boolean75 = charSequenceList72.isEmpty();
        charSequenceList72.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str78 = charSequenceList72.toString();
        boolean boolean79 = charSequenceList57.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList72);
        charSequenceList72.addLast((java.lang.CharSequence) "");
        boolean boolean82 = charSequenceList45.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList72);
        boolean boolean83 = charSequenceList37.remove((java.lang.Object) boolean82);
        boolean boolean84 = charSequenceList2.removeLastOccurrence((java.lang.Object) boolean82);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence85 = charSequenceList2.element();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator28);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "" + "'", charSequence42, "");
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "hi!" + "'", charSequence50, "hi!");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "hi!" + "'", charSequence53, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charSequenceArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + charSequence69 + "' != '" + "hi!" + "'", charSequence69, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[hi!, ]" + "'", str78, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceList12.spliterator();
        boolean boolean15 = charSequenceList12.isEmpty();
        java.lang.CharSequence charSequence16 = charSequenceList12.removeLast();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence charSequence24 = charSequenceList19.peek();
        boolean boolean26 = charSequenceList19.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = charSequenceList29.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        boolean boolean34 = charSequenceList19.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.CharSequence charSequence35 = charSequenceList19.pop();
        boolean boolean36 = charSequenceList12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = charSequenceList39.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        java.lang.Object obj44 = null;
        boolean boolean45 = charSequenceList39.equals(obj44);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence charSequence47 = charSequenceList39.peek();
        java.lang.CharSequence charSequence48 = charSequenceList39.remove();
        boolean boolean49 = charSequenceList19.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean50 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList53 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53, charSequenceArray52);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = charSequenceList53.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList56);
        int int59 = charSequenceList53.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean61 = charSequenceList53.contains((java.lang.Object) (-1.0d));
        java.lang.CharSequence charSequence62 = charSequenceList53.getFirst();
        boolean boolean63 = charSequenceList39.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53);
        java.lang.CharSequence charSequence64 = charSequenceList39.peek();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator65 = charSequenceList39.spliterator();
        java.lang.CharSequence charSequence66 = charSequenceList39.removeLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[]" + "'", str8, "[]");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "hi!" + "'", charSequence24, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "hi!" + "'", charSequence47, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "hi!" + "'", charSequence48, "hi!");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + charSequence62 + "' != '" + "hi!" + "'", charSequence62, "hi!");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + charSequence64 + "' != '" + "hi!" + "'", charSequence64, "hi!");
        org.junit.Assert.assertNotNull(charSequenceSpliterator65);
        org.junit.Assert.assertEquals("'" + charSequence66 + "' != '" + "hi!" + "'", charSequence66, "hi!");
    }
}

