package org.approximations.experiment.linkedlist;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.pop();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean14 = charSequenceList2.offer((java.lang.CharSequence) "[hi!, ]");
        boolean boolean16 = charSequenceList2.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence17 = charSequenceList2.getFirst();
        java.lang.CharSequence charSequence18 = charSequenceList2.element();
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList2.add(7, (java.lang.CharSequence) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 7, Size: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "[hi!, ]" + "'", charSequence17, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "[hi!, ]" + "'", charSequence18, "[hi!, ]");
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList13.equals(obj18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        boolean boolean25 = charSequenceList13.removeLastOccurrence((java.lang.Object) charSequenceList22);
        charSequenceList13.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean28 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        java.lang.CharSequence charSequence29 = charSequenceList13.pollLast();
        java.lang.Object obj30 = charSequenceList13.clone();
        java.lang.CharSequence charSequence31 = charSequenceList13.pop();
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = charSequenceList34.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        java.lang.CharSequence[] charSequenceArray40 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList41 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList41, charSequenceArray40);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator43 = charSequenceList41.spliterator();
        int int44 = charSequenceList41.size();
        boolean boolean45 = charSequenceList34.contains((java.lang.Object) charSequenceList41);
        java.lang.CharSequence charSequence46 = charSequenceList34.element();
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator51 = charSequenceList49.spliterator();
        boolean boolean52 = charSequenceList49.isEmpty();
        charSequenceList49.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str55 = charSequenceList49.toString();
        boolean boolean56 = charSequenceList34.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49);
        boolean boolean58 = charSequenceList49.offer((java.lang.CharSequence) "");
        charSequenceList49.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList49.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator65 = charSequenceList49.spliterator();
        boolean boolean66 = charSequenceList13.remove((java.lang.Object) charSequenceSpliterator65);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "hi!" + "'", charSequence31, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charSequenceArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + charSequence46 + "' != '" + "hi!" + "'", charSequence46, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[hi!, ]" + "'", str55, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.Object obj9 = charSequenceList2.clone();
        java.lang.CharSequence charSequence10 = charSequenceList2.peekFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        java.lang.CharSequence charSequence6 = charSequenceList2.remove();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        boolean boolean12 = charSequenceList9.isEmpty();
        charSequenceList9.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean16 = charSequenceList9.offerLast((java.lang.CharSequence) "");
        charSequenceList9.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence19 = charSequenceList9.removeLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor20 = charSequenceList9.listIterator();
        boolean boolean21 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList9);
        boolean boolean22 = charSequenceList9.isEmpty();
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = charSequenceList25.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence charSequence30 = charSequenceList25.peek();
        java.lang.CharSequence charSequence31 = charSequenceList25.pollFirst();
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceList34.spliterator();
        boolean boolean37 = charSequenceList34.isEmpty();
        charSequenceList34.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean41 = charSequenceList34.offerLast((java.lang.CharSequence) "");
        charSequenceList34.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean44 = charSequenceList25.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor45 = charSequenceList34.descendingIterator();
        boolean boolean46 = charSequenceList9.removeFirstOccurrence((java.lang.Object) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = charSequenceList49.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        java.lang.CharSequence charSequence54 = charSequenceList49.peek();
        java.lang.CharSequence charSequence55 = charSequenceList49.pollFirst();
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList58 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58, charSequenceArray57);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator60 = charSequenceList58.spliterator();
        boolean boolean61 = charSequenceList58.isEmpty();
        charSequenceList58.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean65 = charSequenceList58.offerLast((java.lang.CharSequence) "");
        charSequenceList58.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean68 = charSequenceList49.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor69 = charSequenceList58.descendingIterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream70 = charSequenceList58.stream();
        java.lang.CharSequence charSequence71 = charSequenceList58.element();
        boolean boolean73 = charSequenceList58.offer((java.lang.CharSequence) "hi!");
        boolean boolean74 = charSequenceList9.remove((java.lang.Object) boolean73);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream75 = charSequenceList9.stream();
        boolean boolean77 = charSequenceList9.offerFirst((java.lang.CharSequence) "[hi!, [hi!, ]]");
        java.lang.Object obj78 = null;
        boolean boolean79 = charSequenceList9.equals(obj78);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertNotNull(charSequenceItor20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "hi!" + "'", charSequence30, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "hi!" + "'", charSequence31, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceItor45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "hi!" + "'", charSequence54, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence55 + "' != '" + "hi!" + "'", charSequence55, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(charSequenceItor69);
        org.junit.Assert.assertNotNull(charSequenceStream70);
        org.junit.Assert.assertEquals("'" + charSequence71 + "' != '" + "[hi!, ]" + "'", charSequence71, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(charSequenceStream75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence charSequence18 = charSequenceList2.pop();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        java.lang.CharSequence charSequence27 = charSequenceList21.poll();
        boolean boolean28 = charSequenceList2.remove((java.lang.Object) charSequence27);
        java.lang.CharSequence charSequence29 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = charSequenceList32.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        charSequenceList35.push((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence39 = charSequenceList35.pollFirst();
        boolean boolean40 = charSequenceList2.remove((java.lang.Object) charSequenceList35);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream41 = charSequenceList35.stream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "hi!" + "'", charSequence18, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(charSequence29);
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "" + "'", charSequence39, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(charSequenceStream41);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence charSequence19 = charSequenceList2.peek();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = charSequenceList22.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        int int32 = charSequenceList29.size();
        boolean boolean33 = charSequenceList22.contains((java.lang.Object) charSequenceList29);
        java.lang.CharSequence charSequence34 = charSequenceList22.element();
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator39 = charSequenceList37.spliterator();
        boolean boolean40 = charSequenceList37.isEmpty();
        charSequenceList37.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str43 = charSequenceList37.toString();
        boolean boolean44 = charSequenceList22.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        boolean boolean46 = charSequenceList37.offer((java.lang.CharSequence) "");
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor47 = charSequenceList37.listIterator();
        java.lang.CharSequence charSequence48 = charSequenceList37.poll();
        int int49 = charSequenceList37.size();
        int int50 = charSequenceList2.indexOf((java.lang.Object) charSequenceList37);
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList53 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53, charSequenceArray52);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = charSequenceList53.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList56);
        java.lang.Object obj58 = null;
        boolean boolean59 = charSequenceList53.equals(obj58);
        java.lang.CharSequence[] charSequenceArray61 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList62 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList62, charSequenceArray61);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator64 = charSequenceList62.spliterator();
        boolean boolean65 = charSequenceList53.removeLastOccurrence((java.lang.Object) charSequenceList62);
        charSequenceList53.addLast((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray69 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList70 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList70, charSequenceArray69);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator72 = charSequenceList70.spliterator();
        int int73 = charSequenceList70.size();
        java.lang.CharSequence[] charSequenceArray75 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList76 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList76, charSequenceArray75);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator78 = charSequenceList76.spliterator();
        int int79 = charSequenceList76.size();
        boolean boolean80 = charSequenceList70.contains((java.lang.Object) charSequenceList76);
        boolean boolean81 = charSequenceList53.contains((java.lang.Object) boolean80);
        boolean boolean82 = charSequenceList37.removeFirstOccurrence((java.lang.Object) boolean80);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor83 = charSequenceList37.iterator();
        boolean boolean84 = charSequenceList37.isEmpty();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "hi!" + "'", charSequence19, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[hi!, ]" + "'", str43, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceItor47);
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "hi!" + "'", charSequence48, "hi!");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(charSequenceArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(charSequenceArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(charSequenceItor83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        boolean boolean8 = charSequenceList2.offerFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence9 = charSequenceList2.removeLast();
        java.lang.Object[] objArray10 = charSequenceList2.toArray();
        java.lang.CharSequence charSequence11 = charSequenceList2.poll();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "hi!" + "'", charSequence11, "hi!");
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList13.equals(obj18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        boolean boolean25 = charSequenceList13.removeLastOccurrence((java.lang.Object) charSequenceList22);
        charSequenceList13.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean28 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        java.util.LinkedList<java.io.Serializable> serializableList29 = new java.util.LinkedList<java.io.Serializable>();
        boolean boolean30 = charSequenceList2.equals((java.lang.Object) serializableList29);
        java.lang.CharSequence charSequence32 = charSequenceList2.get(0);
        boolean boolean33 = charSequenceList2.isEmpty();
        charSequenceList2.clear();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "hi!" + "'", charSequence32, "hi!");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceList24.spliterator();
        int int27 = charSequenceList24.size();
        boolean boolean28 = charSequenceList17.contains((java.lang.Object) charSequenceList24);
        java.lang.CharSequence charSequence29 = charSequenceList17.element();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator34 = charSequenceList32.spliterator();
        boolean boolean35 = charSequenceList32.isEmpty();
        charSequenceList32.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str38 = charSequenceList32.toString();
        boolean boolean39 = charSequenceList17.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        boolean boolean41 = charSequenceList32.offer((java.lang.CharSequence) "");
        charSequenceList32.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean46 = charSequenceList32.add((java.lang.CharSequence) "");
        int int47 = charSequenceList2.lastIndexOf((java.lang.Object) boolean46);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream48 = charSequenceList2.stream();
        java.util.function.UnaryOperator<java.lang.CharSequence> charSequenceUnaryOperator49 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList2.replaceAll(charSequenceUnaryOperator49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[hi!, ]" + "'", str38, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(charSequenceStream48);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        java.lang.CharSequence charSequence6 = charSequenceList2.remove();
        boolean boolean8 = charSequenceList2.offerLast((java.lang.CharSequence) "[]");
        java.lang.CharSequence charSequence9 = null;
        boolean boolean10 = charSequenceList2.offer(charSequence9);
        java.lang.CharSequence charSequence11 = charSequenceList2.peek();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "[]" + "'", charSequence11, "[]");
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        boolean boolean8 = charSequenceList2.offerFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence9 = charSequenceList2.removeLast();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence charSequence17 = charSequenceList12.peek();
        boolean boolean19 = charSequenceList12.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = charSequenceList22.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        boolean boolean27 = charSequenceList12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        boolean boolean28 = charSequenceList25.isEmpty();
        java.lang.CharSequence charSequence29 = charSequenceList25.peekLast();
        java.lang.CharSequence charSequence30 = charSequenceList25.poll();
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        boolean boolean32 = charSequenceList2.remove((java.lang.Object) charSequenceList25);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(charSequence29);
        org.junit.Assert.assertNull(charSequence30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        int int27 = charSequenceList2.indexOf((java.lang.Object) charSequence26);
        int int28 = charSequenceList2.size();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence charSequence36 = charSequenceList31.peek();
        java.lang.CharSequence charSequence37 = charSequenceList31.pollFirst();
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = charSequenceList40.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceList47.spliterator();
        int int50 = charSequenceList47.size();
        boolean boolean51 = charSequenceList40.contains((java.lang.Object) charSequenceList47);
        java.lang.CharSequence charSequence52 = charSequenceList40.element();
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList55 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55, charSequenceArray54);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator57 = charSequenceList55.spliterator();
        boolean boolean58 = charSequenceList55.isEmpty();
        charSequenceList55.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str61 = charSequenceList55.toString();
        boolean boolean62 = charSequenceList40.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55);
        boolean boolean64 = charSequenceList55.offer((java.lang.CharSequence) "");
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor65 = charSequenceList55.listIterator();
        boolean boolean66 = charSequenceList31.contains((java.lang.Object) charSequenceItor65);
        int int67 = charSequenceList2.indexOf((java.lang.Object) charSequenceList31);
        java.lang.String str68 = charSequenceList2.toString();
        java.lang.CharSequence charSequence69 = charSequenceList2.peekFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "hi!" + "'", charSequence36, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "hi!" + "'", charSequence37, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "hi!" + "'", charSequence52, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[hi!, ]" + "'", str61, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(charSequenceItor65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[hi!]" + "'", str68, "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence69 + "' != '" + "hi!" + "'", charSequence69, "hi!");
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean18 = charSequenceList15.isEmpty();
        java.lang.CharSequence charSequence19 = charSequenceList15.peekLast();
        java.lang.CharSequence charSequence20 = charSequenceList15.poll();
        java.lang.String str21 = charSequenceList15.toString();
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = charSequenceList24.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceList31.spliterator();
        int int34 = charSequenceList31.size();
        boolean boolean35 = charSequenceList24.contains((java.lang.Object) charSequenceList31);
        java.lang.CharSequence charSequence36 = charSequenceList24.element();
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceList39.spliterator();
        boolean boolean42 = charSequenceList39.isEmpty();
        charSequenceList39.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str45 = charSequenceList39.toString();
        boolean boolean46 = charSequenceList24.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean48 = charSequenceList39.offer((java.lang.CharSequence) "");
        charSequenceList39.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList39.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        boolean boolean56 = charSequenceList39.offerFirst((java.lang.CharSequence) "hi!");
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator57 = charSequenceList39.spliterator();
        boolean boolean58 = charSequenceList15.removeFirstOccurrence((java.lang.Object) charSequenceSpliterator57);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator59 = charSequenceList15.spliterator();
        java.lang.CharSequence charSequence60 = charSequenceList15.peekLast();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor61 = charSequenceList15.iterator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.CharSequence> charSequenceList64 = charSequenceList15.subList((int) (short) 0, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(charSequence19);
        org.junit.Assert.assertNull(charSequence20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[]" + "'", str21, "[]");
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "hi!" + "'", charSequence36, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[hi!, ]" + "'", str45, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator59);
        org.junit.Assert.assertNull(charSequence60);
        org.junit.Assert.assertNotNull(charSequenceItor61);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence9 = charSequenceList2.removeLast();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceList12.spliterator();
        int int15 = charSequenceList12.size();
        java.lang.CharSequence charSequence16 = charSequenceList12.remove();
        boolean boolean18 = charSequenceList12.offerLast((java.lang.CharSequence) "[]");
        java.lang.CharSequence charSequence19 = null;
        boolean boolean20 = charSequenceList12.offer(charSequence19);
        int int21 = charSequenceList2.indexOf((java.lang.Object) boolean20);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence22 = charSequenceList2.element();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.pop();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence13 = charSequenceList2.pop();
        boolean boolean15 = charSequenceList2.offerFirst((java.lang.CharSequence) "[hi!, hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.Object obj22 = null;
        boolean boolean23 = charSequenceList17.equals(obj22);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence25 = charSequenceList17.peek();
        boolean boolean26 = charSequenceList9.equals((java.lang.Object) charSequenceList17);
        java.lang.CharSequence charSequence27 = charSequenceList17.element();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.element();
        int int8 = charSequenceList2.size();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList11.isEmpty();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean24 = charSequenceList17.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence25 = charSequenceList17.pop();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean29 = charSequenceList17.offer((java.lang.CharSequence) "[hi!, ]");
        boolean boolean31 = charSequenceList17.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence32 = charSequenceList17.getFirst();
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = charSequenceList35.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        int int41 = charSequenceList35.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence42 = charSequenceList35.removeLast();
        java.lang.CharSequence charSequence43 = charSequenceList35.peekLast();
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = charSequenceList46.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList49);
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList53 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53, charSequenceArray52);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator55 = charSequenceList53.spliterator();
        int int56 = charSequenceList53.size();
        boolean boolean57 = charSequenceList46.contains((java.lang.Object) charSequenceList53);
        java.lang.CharSequence charSequence58 = charSequenceList46.element();
        java.lang.CharSequence[] charSequenceArray60 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList61 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList61, charSequenceArray60);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator63 = charSequenceList61.spliterator();
        boolean boolean64 = charSequenceList61.isEmpty();
        charSequenceList61.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str67 = charSequenceList61.toString();
        boolean boolean68 = charSequenceList46.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList61);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream69 = charSequenceList61.stream();
        boolean boolean70 = charSequenceList35.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList61);
        java.lang.CharSequence charSequence71 = charSequenceList35.remove();
        boolean boolean72 = charSequenceList17.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        int int73 = charSequenceList11.lastIndexOf((java.lang.Object) charSequenceList35);
        boolean boolean74 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.Object obj75 = charSequenceList11.clone();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "[hi!, ]" + "'", charSequence32, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertNull(charSequence43);
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + charSequence58 + "' != '" + "hi!" + "'", charSequence58, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[hi!, ]" + "'", str67, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(charSequenceStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + charSequence71 + "' != '" + "hi!" + "'", charSequence71, "hi!");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "[]");
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList11.isEmpty();
        charSequenceList11.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean18 = charSequenceList11.offerLast((java.lang.CharSequence) "");
        charSequenceList11.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean21 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence charSequence22 = charSequenceList11.getFirst();
        charSequenceList11.addFirst((java.lang.CharSequence) "[hi!, [hi!, ]]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "[hi!, ]" + "'", charSequence22, "[hi!, ]");
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        int int15 = charSequenceList2.size();
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = charSequenceList18.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        java.lang.Object obj23 = charSequenceList21.clone();
        charSequenceList21.addLast((java.lang.CharSequence) "[hi!, ]");
        boolean boolean27 = charSequenceList21.offerLast((java.lang.CharSequence) "[hi!, ]");
        boolean boolean28 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList21);
        charSequenceList2.addLast((java.lang.CharSequence) "[hi!, hi!, ]");
        java.lang.Object obj31 = null;
        boolean boolean32 = charSequenceList2.contains(obj31);
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = charSequenceList35.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        java.lang.Object obj40 = charSequenceList38.clone();
        charSequenceList38.addLast((java.lang.CharSequence) "[hi!, ]");
        boolean boolean44 = charSequenceList38.offerLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence45 = charSequenceList38.pollFirst();
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48, charSequenceArray47);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList51 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean52 = charSequenceList48.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList51);
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList55 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55, charSequenceArray54);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator57 = charSequenceList55.spliterator();
        int int58 = charSequenceList55.size();
        boolean boolean59 = charSequenceList48.contains((java.lang.Object) charSequenceList55);
        java.lang.CharSequence charSequence60 = charSequenceList48.element();
        java.lang.CharSequence[] charSequenceArray62 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList63 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList63, charSequenceArray62);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator65 = charSequenceList63.spliterator();
        boolean boolean66 = charSequenceList63.isEmpty();
        charSequenceList63.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str69 = charSequenceList63.toString();
        boolean boolean70 = charSequenceList48.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList63);
        boolean boolean72 = charSequenceList63.offer((java.lang.CharSequence) "");
        charSequenceList63.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList63.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        charSequenceList63.addLast((java.lang.CharSequence) "hi!");
        int int81 = charSequenceList38.indexOf((java.lang.Object) charSequenceList63);
        java.lang.CharSequence charSequence82 = charSequenceList38.getLast();
        boolean boolean83 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + charSequence45 + "' != '" + "[hi!, ]" + "'", charSequence45, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + charSequence60 + "' != '" + "hi!" + "'", charSequence60, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[hi!, ]" + "'", str69, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence82 + "' != '" + "[hi!, ]" + "'", charSequence82, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceList11.spliterator();
        java.lang.CharSequence charSequence16 = charSequenceList11.getFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        boolean boolean14 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence15 = charSequenceList2.remove();
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        charSequenceList2.addLast((java.lang.CharSequence) "[hi!, hi!, hi!, []]");
        java.lang.Object obj19 = charSequenceList2.clone();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "hi!" + "'", charSequence15, "hi!");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "[[hi!, hi!, hi!, []]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "[[hi!, hi!, hi!, []]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "[[hi!, hi!, hi!, []]]");
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence charSequence15 = charSequenceList2.peekLast();
        java.lang.CharSequence charSequence16 = charSequenceList2.removeFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "hi!" + "'", charSequence15, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence charSequence18 = charSequenceList15.poll();
        charSequenceList15.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.Object obj21 = charSequenceList15.clone();
        java.lang.String str22 = charSequenceList15.toString();
        java.lang.CharSequence charSequence24 = charSequenceList15.get((int) (short) 0);
        java.lang.Object obj25 = charSequenceList15.clone();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(charSequence18);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "[[hi!, ]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "[[hi!, ]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "[[hi!, ]]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[[hi!, ]]" + "'", str22, "[[hi!, ]]");
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "[hi!, ]" + "'", charSequence24, "[hi!, ]");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "[[hi!, ]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "[[hi!, ]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "[[hi!, ]]");
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        charSequenceList2.addLast((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator21 = charSequenceList19.spliterator();
        int int22 = charSequenceList19.size();
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator27 = charSequenceList25.spliterator();
        int int28 = charSequenceList25.size();
        boolean boolean29 = charSequenceList19.contains((java.lang.Object) charSequenceList25);
        boolean boolean30 = charSequenceList2.contains((java.lang.Object) boolean29);
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList33, charSequenceArray32);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator35 = charSequenceList33.spliterator();
        boolean boolean36 = charSequenceList33.isEmpty();
        java.lang.CharSequence charSequence37 = charSequenceList33.removeLast();
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = charSequenceList40.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        java.lang.CharSequence charSequence45 = charSequenceList40.peek();
        boolean boolean47 = charSequenceList40.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList50 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50, charSequenceArray49);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList53 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean54 = charSequenceList50.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList53);
        boolean boolean55 = charSequenceList40.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53);
        java.lang.CharSequence charSequence56 = charSequenceList40.pop();
        boolean boolean57 = charSequenceList33.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        java.lang.CharSequence[] charSequenceArray59 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList60 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList60, charSequenceArray59);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList63 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean64 = charSequenceList60.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList63);
        java.lang.Object obj65 = null;
        boolean boolean66 = charSequenceList60.equals(obj65);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList67 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList60);
        java.lang.CharSequence charSequence68 = charSequenceList60.peek();
        java.lang.CharSequence charSequence69 = charSequenceList60.remove();
        boolean boolean70 = charSequenceList40.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList60);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor71 = charSequenceList60.descendingIterator();
        boolean boolean72 = charSequenceList2.remove((java.lang.Object) charSequenceItor71);
        java.lang.CharSequence charSequence73 = charSequenceList2.getLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "" + "'", charSequence37, "");
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + charSequence45 + "' != '" + "hi!" + "'", charSequence45, "hi!");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + charSequence56 + "' != '" + "hi!" + "'", charSequence56, "hi!");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charSequenceArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + charSequence68 + "' != '" + "hi!" + "'", charSequence68, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence69 + "' != '" + "hi!" + "'", charSequence69, "hi!");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(charSequenceItor71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + charSequence73 + "' != '" + "hi!" + "'", charSequence73, "hi!");
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        charSequenceList5.push((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceList12.spliterator();
        int int15 = charSequenceList12.size();
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceList18.spliterator();
        boolean boolean21 = charSequenceList18.isEmpty();
        java.lang.CharSequence charSequence22 = charSequenceList18.removeLast();
        int int23 = charSequenceList12.lastIndexOf((java.lang.Object) charSequenceList18);
        boolean boolean24 = charSequenceList5.addAll((int) (byte) 0, (java.util.Collection<java.lang.CharSequence>) charSequenceList18);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "" + "'", charSequence22, "");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        java.lang.CharSequence charSequence10 = charSequenceList2.peek();
        java.lang.CharSequence charSequence11 = null;
        charSequenceList2.push(charSequence11);
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList2.add((int) (short) 100, (java.lang.CharSequence) "[hi!, [[hi!, ]]]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        boolean boolean14 = charSequenceList2.isEmpty();
        boolean boolean16 = charSequenceList2.offer((java.lang.CharSequence) "[hi!, [hi!, ]]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.pollFirst();
        boolean boolean8 = charSequenceList2.add((java.lang.CharSequence) "[]");
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        charSequenceList11.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence20 = charSequenceList11.pop();
        java.lang.Object[] objArray21 = charSequenceList11.toArray();
        boolean boolean23 = charSequenceList11.offerLast((java.lang.CharSequence) "[hi!]");
        boolean boolean24 = charSequenceList2.removeFirstOccurrence((java.lang.Object) "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "hi!" + "'", charSequence20, "hi!");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        charSequenceList2.clear();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.Object obj26 = charSequenceList24.clone();
        int int27 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList24);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator39 = charSequenceList37.spliterator();
        int int40 = charSequenceList37.size();
        boolean boolean41 = charSequenceList30.contains((java.lang.Object) charSequenceList37);
        java.lang.CharSequence charSequence42 = charSequenceList30.element();
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator47 = charSequenceList45.spliterator();
        boolean boolean48 = charSequenceList45.isEmpty();
        charSequenceList45.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str51 = charSequenceList45.toString();
        boolean boolean52 = charSequenceList30.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        boolean boolean54 = charSequenceList45.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor55 = charSequenceList45.descendingIterator();
        charSequenceList45.clear();
        boolean boolean57 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        java.lang.Object[] objArray58 = charSequenceList2.toArray();
        charSequenceList2.clear();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[hi!, ]" + "'", str51, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charSequenceItor55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.element();
        int int8 = charSequenceList2.size();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList11.isEmpty();
        charSequenceList11.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean18 = charSequenceList11.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        java.lang.CharSequence charSequence27 = charSequenceList21.pollFirst();
        boolean boolean28 = charSequenceList11.contains((java.lang.Object) charSequence27);
        java.lang.CharSequence charSequence29 = charSequenceList11.peekFirst();
        boolean boolean30 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList33, charSequenceArray32);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator35 = charSequenceList33.spliterator();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor36 = charSequenceList33.descendingIterator();
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = charSequenceList39.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        java.lang.CharSequence charSequence44 = charSequenceList39.peek();
        boolean boolean46 = charSequenceList39.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence charSequence47 = charSequenceList39.poll();
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence[] charSequenceArray50 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList51 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList51, charSequenceArray50);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator53 = charSequenceList51.spliterator();
        int int54 = charSequenceList51.size();
        java.lang.CharSequence charSequence55 = charSequenceList51.remove();
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList58 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58, charSequenceArray57);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator60 = charSequenceList58.spliterator();
        boolean boolean61 = charSequenceList58.isEmpty();
        charSequenceList58.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean65 = charSequenceList58.offerLast((java.lang.CharSequence) "");
        charSequenceList58.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence68 = charSequenceList58.removeLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor69 = charSequenceList58.listIterator();
        boolean boolean70 = charSequenceList51.removeLastOccurrence((java.lang.Object) charSequenceList58);
        boolean boolean71 = charSequenceList58.isEmpty();
        java.lang.CharSequence[] charSequenceArray73 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList74 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList74, charSequenceArray73);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator76 = charSequenceList74.spliterator();
        boolean boolean77 = charSequenceList74.isEmpty();
        charSequenceList74.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str80 = charSequenceList74.toString();
        java.lang.CharSequence charSequence81 = charSequenceList74.removeFirst();
        boolean boolean83 = charSequenceList74.removeLastOccurrence((java.lang.Object) (short) 100);
        boolean boolean84 = charSequenceList58.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList74);
        boolean boolean85 = charSequenceList39.remove((java.lang.Object) charSequenceList74);
        int int86 = charSequenceList33.indexOf((java.lang.Object) charSequenceList74);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor87 = charSequenceList74.iterator();
        int int88 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList74);
        boolean boolean90 = charSequenceList2.add((java.lang.CharSequence) "[hi!, [[hi!, ]]]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator35);
        org.junit.Assert.assertNotNull(charSequenceItor36);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "hi!" + "'", charSequence44, "hi!");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "hi!" + "'", charSequence47, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertEquals("'" + charSequence55 + "' != '" + "" + "'", charSequence55, "");
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + charSequence68 + "' != '" + "" + "'", charSequence68, "");
        org.junit.Assert.assertNotNull(charSequenceItor69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(charSequenceArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[hi!, ]" + "'", str80, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence81 + "' != '" + "hi!" + "'", charSequence81, "hi!");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(charSequenceItor87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceList17.stream();
        boolean boolean27 = charSequenceList17.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence28 = charSequenceList17.poll();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor29 = charSequenceList17.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceList17.spliterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceStream25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "[hi!, ]" + "'", charSequence28, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceItor29);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList8 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList8.spliterator();
        boolean boolean11 = charSequenceList8.isEmpty();
        charSequenceList8.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean15 = charSequenceList8.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence16 = charSequenceList8.pop();
        charSequenceList8.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean20 = charSequenceList8.offer((java.lang.CharSequence) "[hi!, ]");
        boolean boolean22 = charSequenceList8.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence23 = charSequenceList8.getFirst();
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList26 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26, charSequenceArray25);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = charSequenceList26.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        int int32 = charSequenceList26.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence33 = charSequenceList26.removeLast();
        java.lang.CharSequence charSequence34 = charSequenceList26.peekLast();
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        java.lang.CharSequence[] charSequenceArray43 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList44 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList44, charSequenceArray43);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator46 = charSequenceList44.spliterator();
        int int47 = charSequenceList44.size();
        boolean boolean48 = charSequenceList37.contains((java.lang.Object) charSequenceList44);
        java.lang.CharSequence charSequence49 = charSequenceList37.element();
        java.lang.CharSequence[] charSequenceArray51 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52, charSequenceArray51);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator54 = charSequenceList52.spliterator();
        boolean boolean55 = charSequenceList52.isEmpty();
        charSequenceList52.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str58 = charSequenceList52.toString();
        boolean boolean59 = charSequenceList37.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream60 = charSequenceList52.stream();
        boolean boolean61 = charSequenceList26.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        java.lang.CharSequence charSequence62 = charSequenceList26.remove();
        boolean boolean63 = charSequenceList8.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26);
        int int64 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList26);
        java.lang.CharSequence charSequence66 = charSequenceList2.get((int) (short) 0);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "[hi!, ]" + "'", charSequence23, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "hi!" + "'", charSequence33, "hi!");
        org.junit.Assert.assertNull(charSequence34);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "hi!" + "'", charSequence49, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[hi!, ]" + "'", str58, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(charSequenceStream60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + charSequence62 + "' != '" + "hi!" + "'", charSequence62, "hi!");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence66 + "' != '" + "" + "'", charSequence66, "");
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        java.util.LinkedList<java.lang.Comparable<java.lang.String>> strComparableList5 = new java.util.LinkedList<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = charSequenceList2.contains((java.lang.Object) strComparableList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = charSequenceList9.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator18 = charSequenceList16.spliterator();
        int int19 = charSequenceList16.size();
        boolean boolean20 = charSequenceList9.contains((java.lang.Object) charSequenceList16);
        java.lang.CharSequence charSequence21 = charSequenceList9.element();
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = charSequenceList24.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceList31.spliterator();
        int int34 = charSequenceList31.size();
        boolean boolean35 = charSequenceList24.contains((java.lang.Object) charSequenceList31);
        java.lang.CharSequence charSequence36 = charSequenceList24.element();
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceList39.spliterator();
        boolean boolean42 = charSequenceList39.isEmpty();
        charSequenceList39.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str45 = charSequenceList39.toString();
        boolean boolean46 = charSequenceList24.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean48 = charSequenceList39.offer((java.lang.CharSequence) "");
        charSequenceList39.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean53 = charSequenceList39.add((java.lang.CharSequence) "");
        int int54 = charSequenceList9.lastIndexOf((java.lang.Object) boolean53);
        boolean boolean55 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList58 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58, charSequenceArray57);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList61 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean62 = charSequenceList58.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList61);
        java.lang.CharSequence[] charSequenceArray64 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList65 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList65, charSequenceArray64);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator67 = charSequenceList65.spliterator();
        int int68 = charSequenceList65.size();
        boolean boolean69 = charSequenceList58.contains((java.lang.Object) charSequenceList65);
        java.lang.CharSequence charSequence70 = charSequenceList58.element();
        java.lang.CharSequence[] charSequenceArray72 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList73 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList73, charSequenceArray72);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator75 = charSequenceList73.spliterator();
        boolean boolean76 = charSequenceList73.isEmpty();
        charSequenceList73.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str79 = charSequenceList73.toString();
        boolean boolean80 = charSequenceList58.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList73);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream81 = charSequenceList73.stream();
        boolean boolean82 = charSequenceList9.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList73);
        java.lang.CharSequence charSequence83 = charSequenceList9.getLast();
        java.lang.CharSequence charSequence84 = charSequenceList9.remove();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor85 = charSequenceList9.descendingIterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream86 = charSequenceList9.parallelStream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "hi!" + "'", charSequence21, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "hi!" + "'", charSequence36, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[hi!, ]" + "'", str45, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(charSequenceArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + charSequence70 + "' != '" + "hi!" + "'", charSequence70, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[hi!, ]" + "'", str79, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(charSequenceStream81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertEquals("'" + charSequence83 + "' != '" + "" + "'", charSequence83, "");
        org.junit.Assert.assertEquals("'" + charSequence84 + "' != '" + "hi!" + "'", charSequence84, "hi!");
        org.junit.Assert.assertNotNull(charSequenceItor85);
        org.junit.Assert.assertNotNull(charSequenceStream86);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        charSequenceList2.clear();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.Object obj26 = charSequenceList24.clone();
        int int27 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList24);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.Object obj35 = null;
        boolean boolean36 = charSequenceList30.equals(obj35);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        java.lang.CharSequence charSequence38 = charSequenceList30.peek();
        java.lang.CharSequence charSequence39 = charSequenceList30.remove();
        boolean boolean41 = charSequenceList30.add((java.lang.CharSequence) "hi!");
        boolean boolean42 = charSequenceList2.equals((java.lang.Object) charSequenceList30);
        java.lang.Object[] objArray43 = charSequenceList2.toArray();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "hi!" + "'", charSequence38, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "hi!" + "'", charSequence39, "hi!");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence25 = charSequenceList2.getFirst();
        java.lang.String str26 = charSequenceList2.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence29 = charSequenceList2.set((int) '4', (java.lang.CharSequence) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[hi!, hi!, ]" + "'", str26, "[hi!, hi!, ]");
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence22 = charSequenceList17.peek();
        boolean boolean24 = charSequenceList17.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean25 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        charSequenceList17.clear();
        java.lang.CharSequence charSequence27 = charSequenceList17.poll();
        charSequenceList17.add(0, (java.lang.CharSequence) "[]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(charSequence27);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceList12.spliterator();
        boolean boolean15 = charSequenceList12.isEmpty();
        java.lang.CharSequence charSequence16 = charSequenceList12.removeLast();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence charSequence24 = charSequenceList19.peek();
        boolean boolean26 = charSequenceList19.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = charSequenceList29.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        boolean boolean34 = charSequenceList19.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.CharSequence charSequence35 = charSequenceList19.pop();
        boolean boolean36 = charSequenceList12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = charSequenceList39.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        java.lang.Object obj44 = null;
        boolean boolean45 = charSequenceList39.equals(obj44);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence charSequence47 = charSequenceList39.peek();
        java.lang.CharSequence charSequence48 = charSequenceList39.remove();
        boolean boolean49 = charSequenceList19.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean50 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean52 = charSequenceList2.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence53 = charSequenceList2.pop();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[]" + "'", str8, "[]");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "hi!" + "'", charSequence24, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "hi!" + "'", charSequence47, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "hi!" + "'", charSequence48, "hi!");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        charSequenceList2.clear();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.Object obj26 = charSequenceList24.clone();
        int int27 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList24);
        java.lang.CharSequence charSequence28 = charSequenceList24.peekFirst();
        charSequenceList24.addFirst((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList33, charSequenceArray32);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean37 = charSequenceList33.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList36);
        java.lang.CharSequence charSequence38 = charSequenceList33.peek();
        boolean boolean40 = charSequenceList33.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceList33.spliterator();
        boolean boolean43 = charSequenceList33.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence44 = charSequenceList33.element();
        boolean boolean46 = charSequenceList33.add((java.lang.CharSequence) "[hi!]");
        boolean boolean47 = charSequenceList24.equals((java.lang.Object) charSequenceList33);
        java.lang.CharSequence charSequence48 = charSequenceList24.pop();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "hi!" + "'", charSequence38, "hi!");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "hi!" + "'", charSequence44, "hi!");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "" + "'", charSequence48, "");
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence9 = charSequenceList2.removeLast();
        java.lang.CharSequence charSequence10 = charSequenceList2.peekLast();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceList20.spliterator();
        int int23 = charSequenceList20.size();
        boolean boolean24 = charSequenceList13.contains((java.lang.Object) charSequenceList20);
        java.lang.CharSequence charSequence25 = charSequenceList13.element();
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceList28.spliterator();
        boolean boolean31 = charSequenceList28.isEmpty();
        charSequenceList28.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str34 = charSequenceList28.toString();
        boolean boolean35 = charSequenceList13.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream36 = charSequenceList28.stream();
        boolean boolean37 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence charSequence38 = charSequenceList2.remove();
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "", "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42, charSequenceArray41);
        java.lang.CharSequence charSequence44 = charSequenceList42.pollFirst();
        boolean boolean45 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertNull(charSequence10);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[hi!, ]" + "'", str34, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceStream36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "hi!" + "'", charSequence38, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "" + "'", charSequence44, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = charSequenceList5.clone();
        charSequenceList5.addLast((java.lang.CharSequence) "[hi!, ]");
        boolean boolean11 = charSequenceList5.offerLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence12 = charSequenceList5.pollFirst();
        java.lang.CharSequence charSequence13 = charSequenceList5.pollLast();
        boolean boolean15 = charSequenceList5.offerFirst((java.lang.CharSequence) "[hi!, [[hi!, ]]]");
        boolean boolean17 = charSequenceList5.add((java.lang.CharSequence) "[hi!, ]");
        charSequenceList5.addLast((java.lang.CharSequence) "[[hi!, ]]");
        java.lang.CharSequence charSequence20 = charSequenceList5.pollLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "[hi!, ]" + "'", charSequence12, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "[hi!, ]" + "'", charSequence13, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "[[hi!, ]]" + "'", charSequence20, "[[hi!, ]]");
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceList17.stream();
        boolean boolean27 = charSequenceList17.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence28 = charSequenceList17.poll();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceList31.spliterator();
        charSequenceList31.clear();
        boolean boolean35 = charSequenceList17.removeLastOccurrence((java.lang.Object) charSequenceList31);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean38 = charSequenceList36.add((java.lang.CharSequence) "[[hi!, ]]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceStream25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "[hi!, ]" + "'", charSequence28, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceList17.poll();
        java.lang.CharSequence charSequence28 = charSequenceList17.peekFirst();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.Object obj36 = null;
        boolean boolean37 = charSequenceList31.equals(obj36);
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator42 = charSequenceList40.spliterator();
        boolean boolean43 = charSequenceList31.removeLastOccurrence((java.lang.Object) charSequenceList40);
        java.lang.CharSequence charSequence44 = charSequenceList40.removeLast();
        java.lang.CharSequence charSequence45 = charSequenceList40.peek();
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48, charSequenceArray47);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList51 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean52 = charSequenceList48.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList51);
        java.lang.CharSequence charSequence53 = charSequenceList48.peek();
        boolean boolean55 = charSequenceList48.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator56 = charSequenceList48.spliterator();
        boolean boolean58 = charSequenceList48.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence59 = charSequenceList48.element();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream60 = charSequenceList48.stream();
        boolean boolean61 = charSequenceList40.remove((java.lang.Object) charSequenceList48);
        boolean boolean62 = charSequenceList17.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "" + "'", charSequence44, "");
        org.junit.Assert.assertNull(charSequence45);
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "hi!" + "'", charSequence53, "hi!");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + charSequence59 + "' != '" + "hi!" + "'", charSequence59, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.pop();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence13 = charSequenceList2.poll();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = charSequenceList16.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence charSequence21 = charSequenceList16.peek();
        boolean boolean23 = charSequenceList16.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList26 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26, charSequenceArray25);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = charSequenceList26.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        boolean boolean31 = charSequenceList16.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        charSequenceList16.clear();
        boolean boolean33 = charSequenceList2.equals((java.lang.Object) charSequenceList16);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "hi!" + "'", charSequence21, "hi!");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence[] charSequenceArray9 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList10 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList10, charSequenceArray9);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = charSequenceList10.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        int int20 = charSequenceList17.size();
        boolean boolean21 = charSequenceList10.contains((java.lang.Object) charSequenceList17);
        java.lang.CharSequence charSequence22 = charSequenceList10.element();
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator27 = charSequenceList25.spliterator();
        boolean boolean28 = charSequenceList25.isEmpty();
        charSequenceList25.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str31 = charSequenceList25.toString();
        boolean boolean32 = charSequenceList10.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        boolean boolean34 = charSequenceList25.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor35 = charSequenceList25.descendingIterator();
        boolean boolean36 = charSequenceList25.isEmpty();
        int int37 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList25);
        java.lang.CharSequence charSequence38 = charSequenceList25.pop();
        java.lang.CharSequence charSequence41 = charSequenceList25.set(0, (java.lang.CharSequence) "");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[hi!, ]" + "'", str31, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceItor35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "hi!" + "'", charSequence38, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "" + "'", charSequence41, "");
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceList2.parallelStream();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceList18.spliterator();
        int int21 = charSequenceList18.size();
        boolean boolean22 = charSequenceList11.contains((java.lang.Object) charSequenceList18);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = charSequenceList25.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence charSequence30 = charSequenceList25.peek();
        java.lang.CharSequence charSequence31 = charSequenceList25.pollFirst();
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceList34.spliterator();
        boolean boolean37 = charSequenceList34.isEmpty();
        charSequenceList34.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean41 = charSequenceList34.offerLast((java.lang.CharSequence) "");
        charSequenceList34.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean44 = charSequenceList25.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        boolean boolean45 = charSequenceList18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        int int46 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList18);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream47 = charSequenceList18.stream();
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList50 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50, charSequenceArray49);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList53 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean54 = charSequenceList50.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList53);
        java.lang.CharSequence charSequence55 = charSequenceList50.peek();
        boolean boolean57 = charSequenceList50.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator58 = charSequenceList50.spliterator();
        boolean boolean60 = charSequenceList50.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence61 = charSequenceList50.element();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream62 = charSequenceList50.stream();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor63 = charSequenceList50.listIterator();
        java.lang.Object[] objArray64 = charSequenceList50.toArray();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator65 = charSequenceList50.spliterator();
        boolean boolean66 = charSequenceList18.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "hi!" + "'", charSequence30, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "hi!" + "'", charSequence31, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(charSequenceStream47);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + charSequence55 + "' != '" + "hi!" + "'", charSequence55, "hi!");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + charSequence61 + "' != '" + "hi!" + "'", charSequence61, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream62);
        org.junit.Assert.assertNotNull(charSequenceItor63);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[hi!, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[hi!, hi!]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList2.removeLastOccurrence(obj9);
        boolean boolean12 = charSequenceList2.remove((java.lang.Object) (short) 10);
        java.lang.CharSequence charSequence13 = charSequenceList2.poll();
        java.lang.CharSequence charSequence14 = charSequenceList2.pop();
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence16 = charSequenceList2.getFirst();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        charSequenceList17.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList17.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        boolean boolean34 = charSequenceList17.offerFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence35 = charSequenceList17.removeFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence charSequence9 = charSequenceList2.peek();
        java.lang.CharSequence charSequence10 = charSequenceList2.getFirst();
        boolean boolean12 = charSequenceList2.equals((java.lang.Object) (-1.0d));
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceList15.spliterator();
        boolean boolean18 = charSequenceList15.isEmpty();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceList21.spliterator();
        boolean boolean24 = charSequenceList21.isEmpty();
        charSequenceList21.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean28 = charSequenceList21.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence29 = charSequenceList21.pop();
        charSequenceList21.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean33 = charSequenceList21.offer((java.lang.CharSequence) "[hi!, ]");
        boolean boolean35 = charSequenceList21.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence36 = charSequenceList21.getFirst();
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = charSequenceList39.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        int int45 = charSequenceList39.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence46 = charSequenceList39.removeLast();
        java.lang.CharSequence charSequence47 = charSequenceList39.peekLast();
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList50 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50, charSequenceArray49);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList53 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean54 = charSequenceList50.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList53);
        java.lang.CharSequence[] charSequenceArray56 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList57 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList57, charSequenceArray56);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator59 = charSequenceList57.spliterator();
        int int60 = charSequenceList57.size();
        boolean boolean61 = charSequenceList50.contains((java.lang.Object) charSequenceList57);
        java.lang.CharSequence charSequence62 = charSequenceList50.element();
        java.lang.CharSequence[] charSequenceArray64 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList65 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList65, charSequenceArray64);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator67 = charSequenceList65.spliterator();
        boolean boolean68 = charSequenceList65.isEmpty();
        charSequenceList65.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str71 = charSequenceList65.toString();
        boolean boolean72 = charSequenceList50.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList65);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream73 = charSequenceList65.stream();
        boolean boolean74 = charSequenceList39.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList65);
        java.lang.CharSequence charSequence75 = charSequenceList39.remove();
        boolean boolean76 = charSequenceList21.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        int int77 = charSequenceList15.lastIndexOf((java.lang.Object) charSequenceList39);
        boolean boolean78 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "[hi!, ]" + "'", charSequence36, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence46 + "' != '" + "hi!" + "'", charSequence46, "hi!");
        org.junit.Assert.assertNull(charSequence47);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(charSequenceArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + charSequence62 + "' != '" + "hi!" + "'", charSequence62, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[hi!, ]" + "'", str71, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(charSequenceStream73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertEquals("'" + charSequence75 + "' != '" + "hi!" + "'", charSequence75, "hi!");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        java.lang.CharSequence charSequence10 = charSequenceList2.peek();
        java.lang.CharSequence charSequence11 = charSequenceList2.remove();
        boolean boolean12 = charSequenceList2.isEmpty();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceList15.spliterator();
        boolean boolean18 = charSequenceList15.isEmpty();
        java.lang.CharSequence charSequence19 = charSequenceList15.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream20 = charSequenceList15.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream21 = charSequenceList15.parallelStream();
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = charSequenceList25.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator34 = charSequenceList32.spliterator();
        int int35 = charSequenceList32.size();
        boolean boolean36 = charSequenceList25.contains((java.lang.Object) charSequenceList32);
        boolean boolean37 = charSequenceList25.isEmpty();
        java.lang.Object obj38 = charSequenceList25.clone();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceList25.parallelStream();
        boolean boolean40 = charSequenceList15.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        boolean boolean41 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence charSequence43 = charSequenceList15.get((int) (short) 0);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "hi!" + "'", charSequence11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertNotNull(charSequenceStream20);
        org.junit.Assert.assertNotNull(charSequenceStream21);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "hi!" + "'", charSequence43, "hi!");
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceList17.stream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceList17.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator27 = charSequenceList17.spliterator();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.CharSequence charSequence35 = charSequenceList30.peek();
        boolean boolean37 = charSequenceList30.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = charSequenceList40.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        boolean boolean45 = charSequenceList30.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        boolean boolean46 = charSequenceList43.isEmpty();
        java.lang.CharSequence charSequence47 = charSequenceList43.peekLast();
        java.lang.CharSequence charSequence48 = charSequenceList43.poll();
        boolean boolean49 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream50 = charSequenceList17.parallelStream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceStream25);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
        org.junit.Assert.assertNotNull(charSequenceSpliterator27);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(charSequence47);
        org.junit.Assert.assertNull(charSequence48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(charSequenceStream50);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList2.spliterator();
        boolean boolean12 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence13 = charSequenceList2.element();
        java.lang.CharSequence charSequence14 = charSequenceList2.peekLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor15 = charSequenceList2.listIterator();
        java.lang.CharSequence charSequence16 = charSequenceList2.removeFirst();
        java.lang.CharSequence charSequence17 = charSequenceList2.getFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        charSequenceList17.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean31 = charSequenceList17.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence32 = charSequenceList17.poll();
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = charSequenceList35.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42, charSequenceArray41);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator44 = charSequenceList42.spliterator();
        int int45 = charSequenceList42.size();
        boolean boolean46 = charSequenceList35.contains((java.lang.Object) charSequenceList42);
        java.lang.CharSequence charSequence47 = charSequenceList35.element();
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList50 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50, charSequenceArray49);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator52 = charSequenceList50.spliterator();
        boolean boolean53 = charSequenceList50.isEmpty();
        charSequenceList50.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str56 = charSequenceList50.toString();
        boolean boolean57 = charSequenceList35.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50);
        boolean boolean59 = charSequenceList50.offer((java.lang.CharSequence) "");
        charSequenceList50.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean64 = charSequenceList50.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence65 = charSequenceList50.poll();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor66 = charSequenceList50.listIterator();
        int int67 = charSequenceList17.indexOf((java.lang.Object) charSequenceItor66);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "hi!" + "'", charSequence32, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "hi!" + "'", charSequence47, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[hi!, ]" + "'", str56, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + charSequence65 + "' != '" + "hi!" + "'", charSequence65, "hi!");
        org.junit.Assert.assertNotNull(charSequenceItor66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        boolean boolean14 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence15 = charSequenceList2.remove();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean19 = charSequenceList2.add((java.lang.CharSequence) "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "hi!" + "'", charSequence15, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList2.removeLastOccurrence(obj9);
        java.lang.CharSequence charSequence11 = charSequenceList2.getFirst();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence13 = charSequenceList2.get(7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 7, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "hi!" + "'", charSequence11, "hi!");
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence charSequence15 = charSequenceList9.pollLast();
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = charSequenceList18.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        java.lang.CharSequence charSequence23 = charSequenceList18.peek();
        boolean boolean25 = charSequenceList18.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = charSequenceList28.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean33 = charSequenceList18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean34 = charSequenceList9.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        boolean boolean43 = charSequenceList37.offerFirst((java.lang.CharSequence) "hi!");
        boolean boolean44 = charSequenceList31.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence45 = charSequenceList31.getLast();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNull(charSequence15);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "hi!" + "'", charSequence23, "hi!");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.Object obj22 = null;
        boolean boolean23 = charSequenceList17.equals(obj22);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence25 = charSequenceList17.peek();
        boolean boolean26 = charSequenceList9.equals((java.lang.Object) charSequenceList17);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator28 = charSequenceList17.spliterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator28);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence22 = charSequenceList17.peek();
        boolean boolean24 = charSequenceList17.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean25 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence26 = charSequenceList2.pop();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = charSequenceList29.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.CharSequence charSequence34 = charSequenceList29.peek();
        java.lang.CharSequence charSequence35 = charSequenceList29.pollFirst();
        java.lang.CharSequence charSequence36 = charSequenceList29.peekFirst();
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        boolean boolean38 = charSequenceList2.remove((java.lang.Object) charSequenceList37);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.CharSequence> charSequenceList41 = charSequenceList2.subList(0, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(0) > toIndex(-1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertNull(charSequence36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence charSequence18 = charSequenceList2.pop();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        java.lang.CharSequence charSequence27 = charSequenceList21.poll();
        boolean boolean28 = charSequenceList2.remove((java.lang.Object) charSequence27);
        java.lang.CharSequence charSequence29 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = charSequenceList32.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        charSequenceList35.push((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence39 = charSequenceList35.pollFirst();
        boolean boolean40 = charSequenceList2.remove((java.lang.Object) charSequenceList35);
        boolean boolean42 = charSequenceList2.offerFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean49 = charSequenceList45.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList48);
        java.lang.Object obj50 = null;
        boolean boolean51 = charSequenceList45.equals(obj50);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        java.lang.CharSequence charSequence53 = charSequenceList52.peekFirst();
        boolean boolean54 = charSequenceList2.remove((java.lang.Object) charSequenceList52);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "hi!" + "'", charSequence18, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(charSequence29);
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "" + "'", charSequence39, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "hi!" + "'", charSequence53, "hi!");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        int int27 = charSequenceList2.indexOf((java.lang.Object) charSequence26);
        int int28 = charSequenceList2.size();
        java.lang.Object obj29 = charSequenceList2.clone();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = charSequenceList32.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceList39.spliterator();
        int int42 = charSequenceList39.size();
        boolean boolean43 = charSequenceList32.contains((java.lang.Object) charSequenceList39);
        java.lang.CharSequence charSequence44 = charSequenceList32.element();
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceList47.spliterator();
        boolean boolean50 = charSequenceList47.isEmpty();
        charSequenceList47.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str53 = charSequenceList47.toString();
        boolean boolean54 = charSequenceList32.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47);
        boolean boolean56 = charSequenceList47.offer((java.lang.CharSequence) "");
        charSequenceList47.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList47.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        java.lang.Object[] objArray63 = charSequenceList47.toArray();
        int int64 = charSequenceList2.lastIndexOf((java.lang.Object) objArray63);
        java.lang.CharSequence[] charSequenceArray67 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList68 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList68, charSequenceArray67);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList71 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean72 = charSequenceList68.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList71);
        java.lang.CharSequence charSequence73 = charSequenceList68.peek();
        boolean boolean75 = charSequenceList68.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator76 = charSequenceList68.spliterator();
        boolean boolean78 = charSequenceList68.offer((java.lang.CharSequence) "hi!");
        charSequenceList68.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray83 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList84 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList84, charSequenceArray83);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator86 = charSequenceList84.spliterator();
        boolean boolean87 = charSequenceList84.isEmpty();
        boolean boolean88 = charSequenceList68.equals((java.lang.Object) charSequenceList84);
        java.lang.CharSequence charSequence90 = charSequenceList68.remove((int) (short) 0);
        java.lang.CharSequence charSequence91 = charSequenceList68.getLast();
        charSequenceList68.addLast((java.lang.CharSequence) "[hi!, [[hi!, ]]]");
        boolean boolean94 = charSequenceList2.addAll(1, (java.util.Collection<java.lang.CharSequence>) charSequenceList68);
        java.lang.CharSequence charSequence95 = charSequenceList2.removeFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "hi!" + "'", charSequence44, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[hi!, ]" + "'", str53, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[hi!, hi!, hi!, , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[hi!, hi!, hi!, , ]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + charSequence73 + "' != '" + "hi!" + "'", charSequence73, "hi!");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(charSequenceArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertEquals("'" + charSequence90 + "' != '" + "hi!" + "'", charSequence90, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence91 + "' != '" + "hi!" + "'", charSequence91, "hi!");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertEquals("'" + charSequence95 + "' != '" + "hi!" + "'", charSequence95, "hi!");
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        boolean boolean14 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence15 = charSequenceList2.remove();
        java.lang.CharSequence charSequence16 = charSequenceList2.poll();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        int int25 = charSequenceList19.lastIndexOf((java.lang.Object) (-1L));
        int int26 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean28 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "hi!" + "'", charSequence15, "hi!");
        org.junit.Assert.assertNull(charSequence16);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence22 = charSequenceList17.peek();
        boolean boolean24 = charSequenceList17.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean25 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence26 = charSequenceList2.pop();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = charSequenceList29.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.CharSequence charSequence34 = charSequenceList29.peek();
        java.lang.CharSequence charSequence35 = charSequenceList29.pollFirst();
        java.lang.CharSequence charSequence36 = charSequenceList29.peekFirst();
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        boolean boolean38 = charSequenceList2.remove((java.lang.Object) charSequenceList37);
        java.util.Collection<java.lang.CharSequence> charSequenceCollection39 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean40 = charSequenceList37.addAll(charSequenceCollection39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.Collection.toArray()\" because \"c\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertNull(charSequence36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor27 = charSequenceList17.descendingIterator();
        java.lang.CharSequence charSequence28 = charSequenceList17.removeLast();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceList31.spliterator();
        boolean boolean34 = charSequenceList31.isEmpty();
        java.lang.CharSequence charSequence35 = charSequenceList31.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream36 = charSequenceList31.stream();
        java.lang.String str37 = charSequenceList31.toString();
        boolean boolean38 = charSequenceList17.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceItor27);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "" + "'", charSequence35, "");
        org.junit.Assert.assertNotNull(charSequenceStream36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[]" + "'", str37, "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList13.equals(obj18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        boolean boolean25 = charSequenceList13.removeLastOccurrence((java.lang.Object) charSequenceList22);
        charSequenceList13.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean28 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        java.lang.CharSequence charSequence29 = charSequenceList13.pollLast();
        java.lang.CharSequence charSequence30 = charSequenceList13.getFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "hi!" + "'", charSequence30, "hi!");
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        java.lang.CharSequence charSequence6 = charSequenceList2.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.parallelStream();
        java.lang.CharSequence charSequence8 = null;
        charSequenceList2.addLast(charSequence8);
        int int10 = charSequenceList2.size();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        charSequenceList2.clear();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.Object obj26 = charSequenceList24.clone();
        int int27 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList24);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.Object obj35 = null;
        boolean boolean36 = charSequenceList30.equals(obj35);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        java.lang.CharSequence charSequence38 = charSequenceList30.peek();
        java.lang.CharSequence charSequence39 = charSequenceList30.remove();
        boolean boolean41 = charSequenceList30.add((java.lang.CharSequence) "hi!");
        boolean boolean42 = charSequenceList2.equals((java.lang.Object) charSequenceList30);
        charSequenceList30.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence44 = charSequenceList30.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "hi!" + "'", charSequence38, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "hi!" + "'", charSequence39, "hi!");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList2.spliterator();
        boolean boolean12 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence13 = charSequenceList2.element();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceList2.stream();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor15 = charSequenceList2.listIterator();
        boolean boolean17 = charSequenceList2.offer((java.lang.CharSequence) "[]");
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceList20.spliterator();
        int int23 = charSequenceList20.size();
        java.lang.CharSequence charSequence24 = charSequenceList20.remove();
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator29 = charSequenceList27.spliterator();
        boolean boolean30 = charSequenceList27.isEmpty();
        charSequenceList27.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean34 = charSequenceList27.offerLast((java.lang.CharSequence) "");
        charSequenceList27.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence37 = charSequenceList27.removeLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor38 = charSequenceList27.listIterator();
        boolean boolean39 = charSequenceList20.removeLastOccurrence((java.lang.Object) charSequenceList27);
        boolean boolean41 = charSequenceList27.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray43 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList44 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList44, charSequenceArray43);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = charSequenceList44.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList47);
        java.lang.CharSequence charSequence49 = charSequenceList44.peek();
        java.lang.CharSequence charSequence50 = charSequenceList44.pollFirst();
        charSequenceList44.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList55 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55, charSequenceArray54);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList58 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean59 = charSequenceList55.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList58);
        java.lang.Object obj60 = null;
        boolean boolean61 = charSequenceList55.equals(obj60);
        java.lang.CharSequence[] charSequenceArray63 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList64 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64, charSequenceArray63);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator66 = charSequenceList64.spliterator();
        boolean boolean67 = charSequenceList55.removeLastOccurrence((java.lang.Object) charSequenceList64);
        java.lang.CharSequence charSequence68 = charSequenceList64.removeLast();
        boolean boolean69 = charSequenceList44.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64);
        java.lang.CharSequence[] charSequenceArray71 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList72 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList72, charSequenceArray71);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator74 = charSequenceList72.spliterator();
        boolean boolean75 = charSequenceList72.isEmpty();
        charSequenceList72.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean79 = charSequenceList72.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence80 = charSequenceList72.pop();
        charSequenceList72.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence83 = charSequenceList72.poll();
        boolean boolean84 = charSequenceList64.contains((java.lang.Object) charSequenceList72);
        boolean boolean85 = charSequenceList27.removeFirstOccurrence((java.lang.Object) charSequenceList64);
        boolean boolean86 = charSequenceList2.remove((java.lang.Object) charSequenceList64);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor87 = charSequenceList64.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream88 = charSequenceList64.stream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "" + "'", charSequence24, "");
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "" + "'", charSequence37, "");
        org.junit.Assert.assertNotNull(charSequenceItor38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(charSequenceArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "hi!" + "'", charSequence49, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "hi!" + "'", charSequence50, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charSequenceArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + charSequence68 + "' != '" + "" + "'", charSequence68, "");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(charSequenceArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertEquals("'" + charSequence80 + "' != '" + "hi!" + "'", charSequence80, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence83 + "' != '" + "hi!" + "'", charSequence83, "hi!");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(charSequenceItor87);
        org.junit.Assert.assertNotNull(charSequenceStream88);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        charSequenceList17.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean31 = charSequenceList17.offerFirst((java.lang.CharSequence) "[]");
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = charSequenceList34.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        int int40 = charSequenceList34.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean42 = charSequenceList34.offerLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean49 = charSequenceList45.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList48);
        boolean boolean51 = charSequenceList45.offerFirst((java.lang.CharSequence) "hi!");
        int int52 = charSequenceList34.lastIndexOf((java.lang.Object) "hi!");
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList55 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55, charSequenceArray54);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList58 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean59 = charSequenceList55.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList58);
        java.lang.CharSequence[] charSequenceArray61 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList62 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList62, charSequenceArray61);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator64 = charSequenceList62.spliterator();
        int int65 = charSequenceList62.size();
        boolean boolean66 = charSequenceList55.contains((java.lang.Object) charSequenceList62);
        java.lang.CharSequence charSequence67 = charSequenceList55.element();
        java.lang.CharSequence[] charSequenceArray69 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList70 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList70, charSequenceArray69);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator72 = charSequenceList70.spliterator();
        boolean boolean73 = charSequenceList70.isEmpty();
        charSequenceList70.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str76 = charSequenceList70.toString();
        boolean boolean77 = charSequenceList55.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList70);
        boolean boolean79 = charSequenceList70.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor80 = charSequenceList70.descendingIterator();
        boolean boolean81 = charSequenceList34.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList70);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream82 = charSequenceList70.parallelStream();
        boolean boolean83 = charSequenceList17.removeFirstOccurrence((java.lang.Object) charSequenceStream82);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(charSequenceArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + charSequence67 + "' != '" + "hi!" + "'", charSequence67, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[hi!, ]" + "'", str76, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(charSequenceItor80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(charSequenceStream82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor5 = charSequenceList2.descendingIterator();
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList8 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = charSequenceList8.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence charSequence13 = charSequenceList8.peek();
        boolean boolean15 = charSequenceList8.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence charSequence16 = charSequenceList8.poll();
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList8);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceList20.spliterator();
        int int23 = charSequenceList20.size();
        java.lang.CharSequence charSequence24 = charSequenceList20.remove();
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator29 = charSequenceList27.spliterator();
        boolean boolean30 = charSequenceList27.isEmpty();
        charSequenceList27.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean34 = charSequenceList27.offerLast((java.lang.CharSequence) "");
        charSequenceList27.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence37 = charSequenceList27.removeLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor38 = charSequenceList27.listIterator();
        boolean boolean39 = charSequenceList20.removeLastOccurrence((java.lang.Object) charSequenceList27);
        boolean boolean40 = charSequenceList27.isEmpty();
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList43, charSequenceArray42);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator45 = charSequenceList43.spliterator();
        boolean boolean46 = charSequenceList43.isEmpty();
        charSequenceList43.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str49 = charSequenceList43.toString();
        java.lang.CharSequence charSequence50 = charSequenceList43.removeFirst();
        boolean boolean52 = charSequenceList43.removeLastOccurrence((java.lang.Object) (short) 100);
        boolean boolean53 = charSequenceList27.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        boolean boolean54 = charSequenceList8.remove((java.lang.Object) charSequenceList43);
        int int55 = charSequenceList2.indexOf((java.lang.Object) charSequenceList43);
        boolean boolean57 = charSequenceList2.offerLast((java.lang.CharSequence) "[hi!, hi!, hi!, []]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertNotNull(charSequenceItor5);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "" + "'", charSequence24, "");
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "" + "'", charSequence37, "");
        org.junit.Assert.assertNotNull(charSequenceItor38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[hi!, ]" + "'", str49, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "hi!" + "'", charSequence50, "hi!");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }
}

