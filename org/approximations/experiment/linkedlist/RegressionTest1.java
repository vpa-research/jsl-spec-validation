package org.approximations.experiment.linkedlist;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        java.lang.CharSequence charSequence5 = charSequenceList2.getLast();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        boolean boolean8 = charSequenceList2.offer((java.lang.CharSequence) "[hi!]");
        charSequenceList2.push((java.lang.CharSequence) "[hi!, hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertEquals("'" + charSequence5 + "' != '" + "" + "'", charSequence5, "");
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        charSequenceList2.clear();
        java.lang.Object obj6 = charSequenceList2.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence8 = charSequenceList2.remove(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "[]");
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        java.util.LinkedList<java.lang.CharSequence> charSequenceList0 = new java.util.LinkedList<java.lang.CharSequence>();
        java.lang.CharSequence charSequence1 = charSequenceList0.poll();
        java.lang.CharSequence[] charSequenceArray3 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList4 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList4, charSequenceArray3);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList7 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean8 = charSequenceList4.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        int int14 = charSequenceList11.size();
        boolean boolean15 = charSequenceList4.contains((java.lang.Object) charSequenceList11);
        java.lang.CharSequence charSequence16 = charSequenceList4.element();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator21 = charSequenceList19.spliterator();
        boolean boolean22 = charSequenceList19.isEmpty();
        charSequenceList19.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str25 = charSequenceList19.toString();
        boolean boolean26 = charSequenceList4.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        boolean boolean28 = charSequenceList19.offer((java.lang.CharSequence) "");
        charSequenceList19.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList19.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        boolean boolean35 = charSequenceList0.removeFirstOccurrence((java.lang.Object) (short) 1);
        org.junit.Assert.assertNull(charSequence1);
        org.junit.Assert.assertNotNull(charSequenceArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[hi!, ]" + "'", str25, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor25 = charSequenceList2.descendingIterator();
        boolean boolean26 = charSequenceList2.isEmpty();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = charSequenceList29.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        int int35 = charSequenceList29.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence38 = charSequenceList29.set((int) (byte) 0, (java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence39 = charSequenceList29.removeLast();
        boolean boolean40 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence41 = charSequenceList29.getFirst();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceItor25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "hi!" + "'", charSequence38, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "[hi!, ]" + "'", charSequence39, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        java.lang.CharSequence charSequence6 = charSequenceList2.remove();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        boolean boolean12 = charSequenceList9.isEmpty();
        charSequenceList9.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean16 = charSequenceList9.offerLast((java.lang.CharSequence) "");
        charSequenceList9.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence19 = charSequenceList9.removeLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor20 = charSequenceList9.listIterator();
        boolean boolean21 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList9);
        boolean boolean22 = charSequenceList9.isEmpty();
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = charSequenceList25.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence charSequence30 = charSequenceList25.peek();
        java.lang.CharSequence charSequence31 = charSequenceList25.pollFirst();
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceList34.spliterator();
        boolean boolean37 = charSequenceList34.isEmpty();
        charSequenceList34.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean41 = charSequenceList34.offerLast((java.lang.CharSequence) "");
        charSequenceList34.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean44 = charSequenceList25.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor45 = charSequenceList34.descendingIterator();
        boolean boolean46 = charSequenceList9.removeFirstOccurrence((java.lang.Object) charSequenceList34);
        java.lang.CharSequence charSequence47 = charSequenceList34.getFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertNotNull(charSequenceItor20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "hi!" + "'", charSequence30, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "hi!" + "'", charSequence31, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceItor45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "[hi!, ]" + "'", charSequence47, "[hi!, ]");
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceList11.spliterator();
        java.lang.CharSequence charSequence16 = charSequenceList11.element();
        boolean boolean18 = charSequenceList11.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence19 = charSequenceList11.pop();
        java.lang.CharSequence charSequence20 = charSequenceList11.pollFirst();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.CharSequence> charSequenceList23 = charSequenceList11.subList((int) 'a', (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(97) > toIndex(-1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "[hi!, ]" + "'", charSequence19, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        boolean boolean10 = charSequenceList2.offerFirst((java.lang.CharSequence) "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence charSequence15 = charSequenceList9.pollLast();
        charSequenceList9.clear();
        charSequenceList9.addFirst((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence19 = charSequenceList9.peekLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNull(charSequence15);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceList17.remove();
        java.lang.CharSequence charSequence28 = charSequenceList17.peekLast();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor29 = charSequenceList17.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceList17.spliterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertNotNull(charSequenceItor29);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = charSequenceList5.clone();
        charSequenceList5.addLast((java.lang.CharSequence) "[hi!, ]");
        int int10 = charSequenceList5.size();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        java.lang.CharSequence charSequence10 = charSequenceList2.peek();
        java.lang.CharSequence charSequence11 = charSequenceList2.pop();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "hi!" + "'", charSequence11, "hi!");
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        java.util.LinkedList<java.lang.CharSequence> charSequenceList0 = new java.util.LinkedList<java.lang.CharSequence>();
        java.lang.CharSequence charSequence1 = charSequenceList0.poll();
        boolean boolean3 = charSequenceList0.add((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray5 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList6 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6, charSequenceArray5);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceList6.spliterator();
        boolean boolean9 = charSequenceList6.isEmpty();
        charSequenceList6.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean13 = charSequenceList6.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence14 = charSequenceList6.pop();
        charSequenceList6.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean18 = charSequenceList6.offer((java.lang.CharSequence) "[hi!, ]");
        boolean boolean20 = charSequenceList6.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence21 = charSequenceList6.getFirst();
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = charSequenceList24.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        int int30 = charSequenceList24.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence31 = charSequenceList24.removeLast();
        java.lang.CharSequence charSequence32 = charSequenceList24.peekLast();
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = charSequenceList35.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42, charSequenceArray41);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator44 = charSequenceList42.spliterator();
        int int45 = charSequenceList42.size();
        boolean boolean46 = charSequenceList35.contains((java.lang.Object) charSequenceList42);
        java.lang.CharSequence charSequence47 = charSequenceList35.element();
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList50 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50, charSequenceArray49);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator52 = charSequenceList50.spliterator();
        boolean boolean53 = charSequenceList50.isEmpty();
        charSequenceList50.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str56 = charSequenceList50.toString();
        boolean boolean57 = charSequenceList35.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream58 = charSequenceList50.stream();
        boolean boolean59 = charSequenceList24.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50);
        boolean boolean60 = charSequenceList6.contains((java.lang.Object) charSequenceList24);
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor61 = charSequenceList24.listIterator();
        boolean boolean62 = charSequenceList0.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        org.junit.Assert.assertNull(charSequence1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "[hi!, ]" + "'", charSequence21, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "hi!" + "'", charSequence31, "hi!");
        org.junit.Assert.assertNull(charSequence32);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "hi!" + "'", charSequence47, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[hi!, ]" + "'", str56, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charSequenceStream58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(charSequenceItor61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence charSequence15 = charSequenceList11.removeLast();
        java.util.List<java.lang.CharSequence> charSequenceList18 = charSequenceList11.subList(0, (int) (short) 0);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceList21.spliterator();
        boolean boolean24 = charSequenceList21.isEmpty();
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator29 = charSequenceList27.spliterator();
        boolean boolean30 = charSequenceList27.isEmpty();
        charSequenceList27.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean34 = charSequenceList27.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence35 = charSequenceList27.pop();
        charSequenceList27.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean39 = charSequenceList27.offer((java.lang.CharSequence) "[hi!, ]");
        boolean boolean41 = charSequenceList27.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence42 = charSequenceList27.getFirst();
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean49 = charSequenceList45.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList48);
        int int51 = charSequenceList45.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence52 = charSequenceList45.removeLast();
        java.lang.CharSequence charSequence53 = charSequenceList45.peekLast();
        java.lang.CharSequence[] charSequenceArray55 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56, charSequenceArray55);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList59 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean60 = charSequenceList56.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList59);
        java.lang.CharSequence[] charSequenceArray62 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList63 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList63, charSequenceArray62);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator65 = charSequenceList63.spliterator();
        int int66 = charSequenceList63.size();
        boolean boolean67 = charSequenceList56.contains((java.lang.Object) charSequenceList63);
        java.lang.CharSequence charSequence68 = charSequenceList56.element();
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList71 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList71, charSequenceArray70);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator73 = charSequenceList71.spliterator();
        boolean boolean74 = charSequenceList71.isEmpty();
        charSequenceList71.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str77 = charSequenceList71.toString();
        boolean boolean78 = charSequenceList56.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList71);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream79 = charSequenceList71.stream();
        boolean boolean80 = charSequenceList45.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList71);
        java.lang.CharSequence charSequence81 = charSequenceList45.remove();
        boolean boolean82 = charSequenceList27.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        int int83 = charSequenceList21.lastIndexOf((java.lang.Object) charSequenceList45);
        boolean boolean84 = charSequenceList11.remove((java.lang.Object) int83);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence86 = charSequenceList11.remove((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "" + "'", charSequence15, "");
        org.junit.Assert.assertNotNull(charSequenceList18);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "[hi!, ]" + "'", charSequence42, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "hi!" + "'", charSequence52, "hi!");
        org.junit.Assert.assertNull(charSequence53);
        org.junit.Assert.assertNotNull(charSequenceArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(charSequenceArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + charSequence68 + "' != '" + "hi!" + "'", charSequence68, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[hi!, ]" + "'", str77, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(charSequenceStream79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertEquals("'" + charSequence81 + "' != '" + "hi!" + "'", charSequence81, "hi!");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList2.spliterator();
        boolean boolean12 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence13 = charSequenceList2.element();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceList2.stream();
        java.lang.CharSequence charSequence15 = charSequenceList2.getLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "hi!" + "'", charSequence15, "hi!");
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.pollLast();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.CharSequence charSequence18 = charSequenceList13.peek();
        boolean boolean20 = charSequenceList13.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList26 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean27 = charSequenceList23.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList26);
        boolean boolean28 = charSequenceList13.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26);
        boolean boolean29 = charSequenceList26.isEmpty();
        java.lang.CharSequence charSequence30 = charSequenceList26.peekLast();
        java.lang.CharSequence charSequence31 = charSequenceList26.poll();
        java.lang.String str32 = charSequenceList26.toString();
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = charSequenceList35.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42, charSequenceArray41);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator44 = charSequenceList42.spliterator();
        int int45 = charSequenceList42.size();
        boolean boolean46 = charSequenceList35.contains((java.lang.Object) charSequenceList42);
        java.lang.CharSequence charSequence47 = charSequenceList35.element();
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList50 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50, charSequenceArray49);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator52 = charSequenceList50.spliterator();
        boolean boolean53 = charSequenceList50.isEmpty();
        charSequenceList50.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str56 = charSequenceList50.toString();
        boolean boolean57 = charSequenceList35.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50);
        boolean boolean59 = charSequenceList50.offer((java.lang.CharSequence) "");
        charSequenceList50.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList50.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        boolean boolean67 = charSequenceList50.offerFirst((java.lang.CharSequence) "hi!");
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator68 = charSequenceList50.spliterator();
        boolean boolean69 = charSequenceList26.removeFirstOccurrence((java.lang.Object) charSequenceSpliterator68);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator70 = charSequenceList26.spliterator();
        boolean boolean71 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26);
        java.util.function.UnaryOperator<java.lang.CharSequence> charSequenceUnaryOperator72 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList26.replaceAll(charSequenceUnaryOperator72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "" + "'", charSequence10, "");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "hi!" + "'", charSequence18, "hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(charSequence30);
        org.junit.Assert.assertNull(charSequence31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[]" + "'", str32, "[]");
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "hi!" + "'", charSequence47, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[hi!, ]" + "'", str56, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        charSequenceList5.push((java.lang.CharSequence) "");
        boolean boolean10 = charSequenceList5.offerLast((java.lang.CharSequence) "[hi!]");
        java.lang.CharSequence charSequence11 = charSequenceList5.getFirst();
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceList14.spliterator();
        int int17 = charSequenceList14.size();
        java.lang.CharSequence charSequence18 = charSequenceList14.remove();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceList21.spliterator();
        boolean boolean24 = charSequenceList21.isEmpty();
        charSequenceList21.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean28 = charSequenceList21.offerLast((java.lang.CharSequence) "");
        charSequenceList21.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence31 = charSequenceList21.removeLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor32 = charSequenceList21.listIterator();
        boolean boolean33 = charSequenceList14.removeLastOccurrence((java.lang.Object) charSequenceList21);
        boolean boolean34 = charSequenceList21.isEmpty();
        boolean boolean35 = charSequenceList5.removeLastOccurrence((java.lang.Object) boolean34);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "" + "'", charSequence11, "");
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "" + "'", charSequence18, "");
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "" + "'", charSequence31, "");
        org.junit.Assert.assertNotNull(charSequenceItor32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence charSequence9 = charSequenceList2.removeFirst();
        boolean boolean11 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor12 = charSequenceList2.listIterator();
        java.lang.Object obj13 = charSequenceList2.clone();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = charSequenceList16.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator25 = charSequenceList23.spliterator();
        int int26 = charSequenceList23.size();
        boolean boolean27 = charSequenceList16.contains((java.lang.Object) charSequenceList23);
        java.lang.CharSequence charSequence28 = charSequenceList16.element();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceList31.spliterator();
        boolean boolean34 = charSequenceList31.isEmpty();
        charSequenceList31.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str37 = charSequenceList31.toString();
        boolean boolean38 = charSequenceList16.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean40 = charSequenceList31.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence41 = charSequenceList31.getLast();
        boolean boolean43 = charSequenceList31.removeLastOccurrence((java.lang.Object) 100.0d);
        int int44 = charSequenceList2.lastIndexOf((java.lang.Object) 100.0d);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(charSequenceItor12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "[, hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "[, hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "hi!" + "'", charSequence28, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[hi!, ]" + "'", str37, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "" + "'", charSequence41, "");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence charSequence15 = charSequenceList11.removeLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor16 = charSequenceList11.listIterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream17 = charSequenceList11.parallelStream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "" + "'", charSequence15, "");
        org.junit.Assert.assertNotNull(charSequenceItor16);
        org.junit.Assert.assertNotNull(charSequenceStream17);
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList8 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList8.spliterator();
        int int11 = charSequenceList8.size();
        boolean boolean12 = charSequenceList2.contains((java.lang.Object) charSequenceList8);
        int int13 = charSequenceList2.size();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence15 = charSequenceList2.remove((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean18 = charSequenceList15.isEmpty();
        java.lang.CharSequence charSequence19 = charSequenceList15.peekLast();
        java.lang.CharSequence charSequence20 = charSequenceList15.poll();
        java.lang.String str21 = charSequenceList15.toString();
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = charSequenceList24.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceList31.spliterator();
        int int34 = charSequenceList31.size();
        boolean boolean35 = charSequenceList24.contains((java.lang.Object) charSequenceList31);
        java.lang.CharSequence charSequence36 = charSequenceList24.element();
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceList39.spliterator();
        boolean boolean42 = charSequenceList39.isEmpty();
        charSequenceList39.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str45 = charSequenceList39.toString();
        boolean boolean46 = charSequenceList24.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean48 = charSequenceList39.offer((java.lang.CharSequence) "");
        charSequenceList39.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList39.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        boolean boolean56 = charSequenceList39.offerFirst((java.lang.CharSequence) "hi!");
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator57 = charSequenceList39.spliterator();
        boolean boolean58 = charSequenceList15.removeFirstOccurrence((java.lang.Object) charSequenceSpliterator57);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator59 = charSequenceList15.spliterator();
        java.lang.CharSequence charSequence60 = charSequenceList15.peekLast();
        java.lang.CharSequence charSequence61 = charSequenceList15.pollLast();
        boolean boolean63 = charSequenceList15.offer((java.lang.CharSequence) "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(charSequence19);
        org.junit.Assert.assertNull(charSequence20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[]" + "'", str21, "[]");
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "hi!" + "'", charSequence36, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[hi!, ]" + "'", str45, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator59);
        org.junit.Assert.assertNull(charSequence60);
        org.junit.Assert.assertNull(charSequence61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        java.lang.CharSequence charSequence5 = charSequenceList2.getLast();
        java.util.function.UnaryOperator<java.lang.CharSequence> charSequenceUnaryOperator6 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList2.replaceAll(charSequenceUnaryOperator6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertEquals("'" + charSequence5 + "' != '" + "" + "'", charSequence5, "");
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceList2.parallelStream();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator21 = charSequenceList19.spliterator();
        int int22 = charSequenceList19.size();
        boolean boolean23 = charSequenceList12.contains((java.lang.Object) charSequenceList19);
        boolean boolean24 = charSequenceList12.isEmpty();
        java.lang.Object obj25 = charSequenceList12.clone();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream26 = charSequenceList12.parallelStream();
        boolean boolean27 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator32 = charSequenceList30.spliterator();
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = charSequenceList35.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42, charSequenceArray41);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator44 = charSequenceList42.spliterator();
        int int45 = charSequenceList42.size();
        boolean boolean46 = charSequenceList35.contains((java.lang.Object) charSequenceList42);
        java.lang.CharSequence charSequence47 = charSequenceList35.element();
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList50 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50, charSequenceArray49);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator52 = charSequenceList50.spliterator();
        boolean boolean53 = charSequenceList50.isEmpty();
        charSequenceList50.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str56 = charSequenceList50.toString();
        boolean boolean57 = charSequenceList35.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50);
        boolean boolean59 = charSequenceList50.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor60 = charSequenceList50.descendingIterator();
        boolean boolean61 = charSequenceList30.removeLastOccurrence((java.lang.Object) charSequenceItor60);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator62 = charSequenceList30.spliterator();
        java.lang.CharSequence charSequence63 = charSequenceList30.getLast();
        java.lang.CharSequence[] charSequenceArray65 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList66 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList66, charSequenceArray65);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator68 = charSequenceList66.spliterator();
        boolean boolean69 = charSequenceList66.isEmpty();
        java.lang.CharSequence charSequence70 = charSequenceList66.removeLast();
        java.lang.CharSequence charSequence71 = charSequenceList66.pollFirst();
        boolean boolean72 = charSequenceList30.contains((java.lang.Object) charSequence71);
        java.lang.CharSequence charSequence73 = charSequenceList30.element();
        boolean boolean74 = charSequenceList12.contains((java.lang.Object) charSequenceList30);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor75 = charSequenceList30.iterator();
        java.lang.CharSequence charSequence76 = null;
        charSequenceList30.addLast(charSequence76);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator32);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "hi!" + "'", charSequence47, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[hi!, ]" + "'", str56, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(charSequenceItor60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator62);
        org.junit.Assert.assertEquals("'" + charSequence63 + "' != '" + "" + "'", charSequence63, "");
        org.junit.Assert.assertNotNull(charSequenceArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + charSequence70 + "' != '" + "" + "'", charSequence70, "");
        org.junit.Assert.assertNull(charSequence71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + charSequence73 + "' != '" + "" + "'", charSequence73, "");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(charSequenceItor75);
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        boolean boolean14 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence15 = charSequenceList2.remove();
        java.lang.CharSequence charSequence16 = charSequenceList2.poll();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor17 = charSequenceList2.descendingIterator();
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList2.add((int) ' ', (java.lang.CharSequence) "[hi!]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "hi!" + "'", charSequence15, "hi!");
        org.junit.Assert.assertNull(charSequence16);
        org.junit.Assert.assertNotNull(charSequenceItor17);
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean10 = charSequenceList2.offerLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.String str11 = charSequenceList2.toString();
        java.lang.CharSequence charSequence12 = charSequenceList2.pop();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = charSequenceList15.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList18);
        java.lang.CharSequence charSequence20 = charSequenceList15.peek();
        boolean boolean22 = charSequenceList15.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = charSequenceList25.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        boolean boolean30 = charSequenceList15.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence charSequence31 = charSequenceList28.poll();
        charSequenceList28.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.Object obj34 = charSequenceList28.clone();
        java.lang.String str35 = charSequenceList28.toString();
        java.lang.CharSequence charSequence37 = charSequenceList28.get((int) (short) 0);
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = charSequenceList40.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        java.lang.Object obj45 = null;
        boolean boolean46 = charSequenceList40.equals(obj45);
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = charSequenceList49.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        java.lang.CharSequence charSequence54 = charSequenceList49.peek();
        boolean boolean56 = charSequenceList49.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray58 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList59 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList59, charSequenceArray58);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList62 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean63 = charSequenceList59.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList62);
        boolean boolean64 = charSequenceList49.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList62);
        java.lang.CharSequence charSequence65 = charSequenceList62.poll();
        boolean boolean66 = charSequenceList40.remove((java.lang.Object) charSequenceList62);
        int int67 = charSequenceList28.indexOf((java.lang.Object) boolean66);
        boolean boolean68 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor69 = charSequenceList28.iterator();
        charSequenceList28.addLast((java.lang.CharSequence) "[hi!, [[hi!, ]]]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[hi!, [hi!, ]]" + "'", str11, "[hi!, [hi!, ]]");
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "hi!" + "'", charSequence12, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "hi!" + "'", charSequence20, "hi!");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(charSequence31);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "[[hi!, ]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "[[hi!, ]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "[[hi!, ]]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[[hi!, ]]" + "'", str35, "[[hi!, ]]");
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "[hi!, ]" + "'", charSequence37, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "hi!" + "'", charSequence54, "hi!");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charSequenceArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(charSequence65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(charSequenceItor69);
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pop();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence9 = charSequenceList2.removeLast();
        java.lang.Object obj10 = null;
        int int11 = charSequenceList2.lastIndexOf(obj10);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = charSequenceList14.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceList21.spliterator();
        int int24 = charSequenceList21.size();
        boolean boolean25 = charSequenceList14.contains((java.lang.Object) charSequenceList21);
        java.lang.CharSequence charSequence26 = charSequenceList21.removeFirst();
        java.lang.CharSequence charSequence27 = charSequenceList21.pollLast();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.CharSequence charSequence35 = charSequenceList30.peek();
        boolean boolean37 = charSequenceList30.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = charSequenceList40.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        boolean boolean45 = charSequenceList30.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        boolean boolean46 = charSequenceList21.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = charSequenceList49.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        boolean boolean55 = charSequenceList49.offerFirst((java.lang.CharSequence) "hi!");
        boolean boolean56 = charSequenceList43.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49);
        boolean boolean58 = charSequenceList43.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray60 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList61 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList61, charSequenceArray60);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList64 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean65 = charSequenceList61.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList64);
        java.lang.CharSequence charSequence66 = charSequenceList61.element();
        charSequenceList61.addFirst((java.lang.CharSequence) "");
        int int69 = charSequenceList43.lastIndexOf((java.lang.Object) charSequenceList61);
        boolean boolean70 = charSequenceList2.removeFirstOccurrence((java.lang.Object) int69);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertNull(charSequence27);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(charSequenceArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + charSequence66 + "' != '" + "hi!" + "'", charSequence66, "hi!");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean18 = charSequenceList15.isEmpty();
        java.lang.CharSequence charSequence19 = charSequenceList15.peekLast();
        java.lang.CharSequence charSequence20 = charSequenceList15.poll();
        boolean boolean21 = charSequenceList15.isEmpty();
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceList24.spliterator();
        int int27 = charSequenceList24.size();
        java.lang.CharSequence charSequence28 = charSequenceList24.remove();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceList31.spliterator();
        boolean boolean34 = charSequenceList31.isEmpty();
        charSequenceList31.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean38 = charSequenceList31.offerLast((java.lang.CharSequence) "");
        charSequenceList31.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence41 = charSequenceList31.removeLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor42 = charSequenceList31.listIterator();
        boolean boolean43 = charSequenceList24.removeLastOccurrence((java.lang.Object) charSequenceList31);
        boolean boolean44 = charSequenceList31.isEmpty();
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList50 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean51 = charSequenceList47.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList50);
        java.lang.CharSequence charSequence52 = charSequenceList47.peek();
        java.lang.CharSequence charSequence53 = charSequenceList47.pollFirst();
        java.lang.CharSequence[] charSequenceArray55 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56, charSequenceArray55);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator58 = charSequenceList56.spliterator();
        boolean boolean59 = charSequenceList56.isEmpty();
        charSequenceList56.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean63 = charSequenceList56.offerLast((java.lang.CharSequence) "");
        charSequenceList56.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean66 = charSequenceList47.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor67 = charSequenceList56.descendingIterator();
        boolean boolean68 = charSequenceList31.removeFirstOccurrence((java.lang.Object) charSequenceList56);
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList71 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList71, charSequenceArray70);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList74 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean75 = charSequenceList71.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList74);
        java.lang.CharSequence charSequence76 = charSequenceList71.peek();
        java.lang.CharSequence charSequence77 = charSequenceList71.pollFirst();
        java.lang.CharSequence[] charSequenceArray79 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList80 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList80, charSequenceArray79);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator82 = charSequenceList80.spliterator();
        boolean boolean83 = charSequenceList80.isEmpty();
        charSequenceList80.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean87 = charSequenceList80.offerLast((java.lang.CharSequence) "");
        charSequenceList80.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean90 = charSequenceList71.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList80);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor91 = charSequenceList80.descendingIterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream92 = charSequenceList80.stream();
        java.lang.CharSequence charSequence93 = charSequenceList80.element();
        boolean boolean95 = charSequenceList80.offer((java.lang.CharSequence) "hi!");
        boolean boolean96 = charSequenceList31.remove((java.lang.Object) boolean95);
        boolean boolean97 = charSequenceList15.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence99 = charSequenceList31.remove((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(charSequence19);
        org.junit.Assert.assertNull(charSequence20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "" + "'", charSequence41, "");
        org.junit.Assert.assertNotNull(charSequenceItor42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "hi!" + "'", charSequence52, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "hi!" + "'", charSequence53, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(charSequenceItor67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + charSequence76 + "' != '" + "hi!" + "'", charSequence76, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence77 + "' != '" + "hi!" + "'", charSequence77, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(charSequenceItor91);
        org.junit.Assert.assertNotNull(charSequenceStream92);
        org.junit.Assert.assertEquals("'" + charSequence93 + "' != '" + "[hi!, ]" + "'", charSequence93, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        java.util.LinkedList<java.util.Iterator<java.lang.CharSequence>> charSequenceItorList0 = new java.util.LinkedList<java.util.Iterator<java.lang.CharSequence>>();
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceList2.stream();
        java.lang.CharSequence charSequence16 = null;
        charSequenceList2.add(0, charSequence16);
        java.lang.CharSequence charSequence18 = charSequenceList2.removeFirst();
        boolean boolean20 = charSequenceList2.offerFirst((java.lang.CharSequence) "[hi!, [hi!, ]]");
        java.lang.CharSequence charSequence21 = charSequenceList2.pollFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertNull(charSequence18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "[hi!, [hi!, ]]" + "'", charSequence21, "[hi!, [hi!, ]]");
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.element();
        int int8 = charSequenceList2.size();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList11.isEmpty();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean24 = charSequenceList17.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence25 = charSequenceList17.pop();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean29 = charSequenceList17.offer((java.lang.CharSequence) "[hi!, ]");
        boolean boolean31 = charSequenceList17.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence32 = charSequenceList17.getFirst();
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = charSequenceList35.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        int int41 = charSequenceList35.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence42 = charSequenceList35.removeLast();
        java.lang.CharSequence charSequence43 = charSequenceList35.peekLast();
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = charSequenceList46.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList49);
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList53 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53, charSequenceArray52);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator55 = charSequenceList53.spliterator();
        int int56 = charSequenceList53.size();
        boolean boolean57 = charSequenceList46.contains((java.lang.Object) charSequenceList53);
        java.lang.CharSequence charSequence58 = charSequenceList46.element();
        java.lang.CharSequence[] charSequenceArray60 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList61 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList61, charSequenceArray60);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator63 = charSequenceList61.spliterator();
        boolean boolean64 = charSequenceList61.isEmpty();
        charSequenceList61.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str67 = charSequenceList61.toString();
        boolean boolean68 = charSequenceList46.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList61);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream69 = charSequenceList61.stream();
        boolean boolean70 = charSequenceList35.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList61);
        java.lang.CharSequence charSequence71 = charSequenceList35.remove();
        boolean boolean72 = charSequenceList17.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        int int73 = charSequenceList11.lastIndexOf((java.lang.Object) charSequenceList35);
        boolean boolean74 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray76 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList77 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList77, charSequenceArray76);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator79 = charSequenceList77.spliterator();
        boolean boolean80 = charSequenceList77.isEmpty();
        charSequenceList77.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean84 = charSequenceList77.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence85 = charSequenceList77.pop();
        charSequenceList77.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence90 = charSequenceList77.set((int) (short) 0, (java.lang.CharSequence) "");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream91 = charSequenceList77.parallelStream();
        boolean boolean92 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList77);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "[hi!, ]" + "'", charSequence32, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertNull(charSequence43);
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + charSequence58 + "' != '" + "hi!" + "'", charSequence58, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[hi!, ]" + "'", str67, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(charSequenceStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + charSequence71 + "' != '" + "hi!" + "'", charSequence71, "hi!");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(charSequenceArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertEquals("'" + charSequence85 + "' != '" + "hi!" + "'", charSequence85, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence90 + "' != '" + "hi!" + "'", charSequence90, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence9 = charSequenceList2.removeLast();
        java.lang.CharSequence charSequence10 = charSequenceList2.peekLast();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceList20.spliterator();
        int int23 = charSequenceList20.size();
        boolean boolean24 = charSequenceList13.contains((java.lang.Object) charSequenceList20);
        java.lang.CharSequence charSequence25 = charSequenceList13.element();
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceList28.spliterator();
        boolean boolean31 = charSequenceList28.isEmpty();
        charSequenceList28.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str34 = charSequenceList28.toString();
        boolean boolean35 = charSequenceList13.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream36 = charSequenceList28.stream();
        boolean boolean37 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence charSequence38 = charSequenceList28.peekLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertNull(charSequence10);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[hi!, ]" + "'", str34, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceStream36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "" + "'", charSequence38, "");
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean18 = charSequenceList15.isEmpty();
        java.lang.CharSequence charSequence19 = charSequenceList15.peekLast();
        java.lang.CharSequence charSequence20 = charSequenceList15.poll();
        java.lang.String str21 = charSequenceList15.toString();
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = charSequenceList24.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceList31.spliterator();
        int int34 = charSequenceList31.size();
        boolean boolean35 = charSequenceList24.contains((java.lang.Object) charSequenceList31);
        java.lang.CharSequence charSequence36 = charSequenceList24.element();
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceList39.spliterator();
        boolean boolean42 = charSequenceList39.isEmpty();
        charSequenceList39.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str45 = charSequenceList39.toString();
        boolean boolean46 = charSequenceList24.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean48 = charSequenceList39.offer((java.lang.CharSequence) "");
        charSequenceList39.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList39.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        boolean boolean56 = charSequenceList39.offerFirst((java.lang.CharSequence) "hi!");
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator57 = charSequenceList39.spliterator();
        boolean boolean58 = charSequenceList15.removeFirstOccurrence((java.lang.Object) charSequenceSpliterator57);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator59 = charSequenceList15.spliterator();
        java.lang.CharSequence charSequence60 = charSequenceList15.peekLast();
        java.lang.CharSequence charSequence61 = charSequenceList15.pollLast();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence62 = charSequenceList15.element();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(charSequence19);
        org.junit.Assert.assertNull(charSequence20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[]" + "'", str21, "[]");
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "hi!" + "'", charSequence36, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[hi!, ]" + "'", str45, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator59);
        org.junit.Assert.assertNull(charSequence60);
        org.junit.Assert.assertNull(charSequence61);
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        java.util.LinkedList<java.util.Collection<java.lang.CharSequence>> charSequenceCollectionList0 = new java.util.LinkedList<java.util.Collection<java.lang.CharSequence>>();
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence charSequence15 = charSequenceList9.pollLast();
        charSequenceList9.clear();
        int int17 = charSequenceList9.size();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNull(charSequence15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor5 = charSequenceList2.descendingIterator();
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList8 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList8.spliterator();
        java.util.LinkedList<java.lang.Comparable<java.lang.String>> strComparableList11 = new java.util.LinkedList<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = charSequenceList8.contains((java.lang.Object) strComparableList11);
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = charSequenceList15.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        int int25 = charSequenceList22.size();
        boolean boolean26 = charSequenceList15.contains((java.lang.Object) charSequenceList22);
        java.lang.CharSequence charSequence27 = charSequenceList15.element();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator39 = charSequenceList37.spliterator();
        int int40 = charSequenceList37.size();
        boolean boolean41 = charSequenceList30.contains((java.lang.Object) charSequenceList37);
        java.lang.CharSequence charSequence42 = charSequenceList30.element();
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator47 = charSequenceList45.spliterator();
        boolean boolean48 = charSequenceList45.isEmpty();
        charSequenceList45.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str51 = charSequenceList45.toString();
        boolean boolean52 = charSequenceList30.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        boolean boolean54 = charSequenceList45.offer((java.lang.CharSequence) "");
        charSequenceList45.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean59 = charSequenceList45.add((java.lang.CharSequence) "");
        int int60 = charSequenceList15.lastIndexOf((java.lang.Object) boolean59);
        boolean boolean61 = charSequenceList8.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray63 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList64 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64, charSequenceArray63);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList67 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean68 = charSequenceList64.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList67);
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList71 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList71, charSequenceArray70);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator73 = charSequenceList71.spliterator();
        int int74 = charSequenceList71.size();
        boolean boolean75 = charSequenceList64.contains((java.lang.Object) charSequenceList71);
        java.lang.CharSequence charSequence76 = charSequenceList64.element();
        java.lang.CharSequence[] charSequenceArray78 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList79 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList79, charSequenceArray78);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator81 = charSequenceList79.spliterator();
        boolean boolean82 = charSequenceList79.isEmpty();
        charSequenceList79.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str85 = charSequenceList79.toString();
        boolean boolean86 = charSequenceList64.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList79);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream87 = charSequenceList79.stream();
        boolean boolean88 = charSequenceList15.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList79);
        boolean boolean89 = charSequenceList2.equals((java.lang.Object) charSequenceList79);
        java.lang.CharSequence charSequence90 = charSequenceList79.remove();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertNotNull(charSequenceItor5);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[hi!, ]" + "'", str51, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(charSequenceArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + charSequence76 + "' != '" + "hi!" + "'", charSequence76, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[hi!, ]" + "'", str85, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(charSequenceStream87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + charSequence90 + "' != '" + "hi!" + "'", charSequence90, "hi!");
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceList17.stream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceList17.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator27 = charSequenceList17.spliterator();
        java.lang.String str28 = charSequenceList17.toString();
        java.util.Collection<java.lang.CharSequence> charSequenceCollection29 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean30 = charSequenceList17.containsAll(charSequenceCollection29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.Collection.iterator()\" because \"c\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceStream25);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
        org.junit.Assert.assertNotNull(charSequenceSpliterator27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[hi!, ]" + "'", str28, "[hi!, ]");
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceList2.parallelStream();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator21 = charSequenceList19.spliterator();
        int int22 = charSequenceList19.size();
        boolean boolean23 = charSequenceList12.contains((java.lang.Object) charSequenceList19);
        boolean boolean24 = charSequenceList12.isEmpty();
        java.lang.Object obj25 = charSequenceList12.clone();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream26 = charSequenceList12.parallelStream();
        boolean boolean27 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        charSequenceList2.addLast((java.lang.CharSequence) "[hi!, [[hi!, ]]]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        charSequenceList2.clear();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.Object obj26 = charSequenceList24.clone();
        int int27 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList24);
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor29 = charSequenceList2.listIterator(0);
        java.lang.CharSequence charSequence30 = charSequenceList2.pollFirst();
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList33, charSequenceArray32);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean37 = charSequenceList33.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList36);
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator42 = charSequenceList40.spliterator();
        int int43 = charSequenceList40.size();
        boolean boolean44 = charSequenceList33.contains((java.lang.Object) charSequenceList40);
        java.lang.CharSequence charSequence45 = charSequenceList33.element();
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48, charSequenceArray47);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceList48.spliterator();
        boolean boolean51 = charSequenceList48.isEmpty();
        charSequenceList48.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str54 = charSequenceList48.toString();
        boolean boolean55 = charSequenceList33.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48);
        charSequenceList48.addLast((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor58 = charSequenceList48.descendingIterator();
        boolean boolean60 = charSequenceList48.add((java.lang.CharSequence) "[]");
        int int61 = charSequenceList2.indexOf((java.lang.Object) charSequenceList48);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(charSequenceItor29);
        org.junit.Assert.assertNull(charSequence30);
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + charSequence45 + "' != '" + "hi!" + "'", charSequence45, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[hi!, ]" + "'", str54, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(charSequenceItor58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence11 = charSequenceList2.pop();
        java.lang.Object[] objArray12 = charSequenceList2.toArray();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence13 = charSequenceList2.removeFirst();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "hi!" + "'", charSequence11, "hi!");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        java.lang.CharSequence charSequence6 = charSequenceList2.remove();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        boolean boolean12 = charSequenceList9.isEmpty();
        charSequenceList9.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean16 = charSequenceList9.offerLast((java.lang.CharSequence) "");
        charSequenceList9.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence19 = charSequenceList9.removeLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor20 = charSequenceList9.listIterator();
        boolean boolean21 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList9);
        boolean boolean22 = charSequenceList9.isEmpty();
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = charSequenceList25.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence charSequence30 = charSequenceList25.peek();
        java.lang.CharSequence charSequence31 = charSequenceList25.pollFirst();
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceList34.spliterator();
        boolean boolean37 = charSequenceList34.isEmpty();
        charSequenceList34.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean41 = charSequenceList34.offerLast((java.lang.CharSequence) "");
        charSequenceList34.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean44 = charSequenceList25.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor45 = charSequenceList34.descendingIterator();
        boolean boolean46 = charSequenceList9.removeFirstOccurrence((java.lang.Object) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = charSequenceList49.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        java.lang.CharSequence charSequence54 = charSequenceList49.peek();
        java.lang.CharSequence charSequence55 = charSequenceList49.pollFirst();
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList58 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58, charSequenceArray57);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator60 = charSequenceList58.spliterator();
        boolean boolean61 = charSequenceList58.isEmpty();
        charSequenceList58.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean65 = charSequenceList58.offerLast((java.lang.CharSequence) "");
        charSequenceList58.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean68 = charSequenceList49.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor69 = charSequenceList58.descendingIterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream70 = charSequenceList58.stream();
        java.lang.CharSequence charSequence71 = charSequenceList58.element();
        boolean boolean73 = charSequenceList58.offer((java.lang.CharSequence) "hi!");
        boolean boolean74 = charSequenceList9.remove((java.lang.Object) boolean73);
        java.util.List<java.lang.CharSequence> charSequenceList77 = charSequenceList9.subList(0, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList9.add((int) (byte) 100, (java.lang.CharSequence) "[hi!, hi!, ]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertNotNull(charSequenceItor20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "hi!" + "'", charSequence30, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "hi!" + "'", charSequence31, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceItor45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "hi!" + "'", charSequence54, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence55 + "' != '" + "hi!" + "'", charSequence55, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(charSequenceItor69);
        org.junit.Assert.assertNotNull(charSequenceStream70);
        org.junit.Assert.assertEquals("'" + charSequence71 + "' != '" + "[hi!, ]" + "'", charSequence71, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(charSequenceList77);
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = charSequenceList5.clone();
        charSequenceList5.addLast((java.lang.CharSequence) "[hi!, ]");
        boolean boolean11 = charSequenceList5.offerLast((java.lang.CharSequence) "[hi!, ]");
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.CharSequence> charSequenceList14 = charSequenceList5.subList((int) (short) -1, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: fromIndex = -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        int int15 = charSequenceList2.size();
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = charSequenceList18.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        java.lang.Object obj23 = charSequenceList21.clone();
        charSequenceList21.addLast((java.lang.CharSequence) "[hi!, ]");
        boolean boolean27 = charSequenceList21.offerLast((java.lang.CharSequence) "[hi!, ]");
        boolean boolean28 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList21);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.CharSequence> charSequenceItor30 = charSequenceList2.listIterator(2);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 2, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        int int9 = charSequenceList2.size();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence11 = charSequenceList2.remove((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceList13.spliterator();
        boolean boolean16 = charSequenceList13.isEmpty();
        charSequenceList13.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str19 = charSequenceList13.toString();
        java.lang.CharSequence charSequence20 = charSequenceList13.removeFirst();
        boolean boolean22 = charSequenceList13.offer((java.lang.CharSequence) "hi!");
        int int23 = charSequenceList2.lastIndexOf((java.lang.Object) "hi!");
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList26 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26, charSequenceArray25);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator28 = charSequenceList26.spliterator();
        java.lang.CharSequence charSequence29 = charSequenceList26.getLast();
        java.lang.CharSequence charSequence30 = charSequenceList26.removeLast();
        boolean boolean32 = charSequenceList26.offer((java.lang.CharSequence) "[hi!]");
        int int33 = charSequenceList2.lastIndexOf((java.lang.Object) "[hi!]");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor34 = charSequenceList2.descendingIterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!, ]" + "'", str19, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "hi!" + "'", charSequence20, "hi!");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator28);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "" + "'", charSequence29, "");
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "" + "'", charSequence30, "");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(charSequenceItor34);
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList2.spliterator();
        boolean boolean12 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        charSequenceList2.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceList18.spliterator();
        boolean boolean21 = charSequenceList18.isEmpty();
        boolean boolean22 = charSequenceList2.equals((java.lang.Object) charSequenceList18);
        java.lang.CharSequence charSequence23 = charSequenceList18.element();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "" + "'", charSequence23, "");
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceList2.parallelStream();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceList18.spliterator();
        int int21 = charSequenceList18.size();
        boolean boolean22 = charSequenceList11.contains((java.lang.Object) charSequenceList18);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = charSequenceList25.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence charSequence30 = charSequenceList25.peek();
        java.lang.CharSequence charSequence31 = charSequenceList25.pollFirst();
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceList34.spliterator();
        boolean boolean37 = charSequenceList34.isEmpty();
        charSequenceList34.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean41 = charSequenceList34.offerLast((java.lang.CharSequence) "");
        charSequenceList34.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean44 = charSequenceList25.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        boolean boolean45 = charSequenceList18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        int int46 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList18);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence47 = charSequenceList2.getFirst();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "hi!" + "'", charSequence30, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "hi!" + "'", charSequence31, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        charSequenceList2.clear();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.Object obj26 = charSequenceList24.clone();
        int int27 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList24);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator39 = charSequenceList37.spliterator();
        int int40 = charSequenceList37.size();
        boolean boolean41 = charSequenceList30.contains((java.lang.Object) charSequenceList37);
        java.lang.CharSequence charSequence42 = charSequenceList30.element();
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator47 = charSequenceList45.spliterator();
        boolean boolean48 = charSequenceList45.isEmpty();
        charSequenceList45.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str51 = charSequenceList45.toString();
        boolean boolean52 = charSequenceList30.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        boolean boolean54 = charSequenceList45.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor55 = charSequenceList45.descendingIterator();
        charSequenceList45.clear();
        boolean boolean57 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        charSequenceList45.addFirst((java.lang.CharSequence) "");
        charSequenceList45.clear();
        charSequenceList45.clear();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[hi!, ]" + "'", str51, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charSequenceItor55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        java.util.LinkedList<java.util.stream.Stream<java.lang.CharSequence>> charSequenceStreamList0 = new java.util.LinkedList<java.util.stream.Stream<java.lang.CharSequence>>();
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceList17.pollFirst();
        java.lang.CharSequence charSequence28 = charSequenceList17.element();
        boolean boolean29 = charSequenceList17.isEmpty();
        java.lang.String str30 = charSequenceList17.toString();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[, ]" + "'", str30, "[, ]");
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence charSequence10 = charSequenceList2.poll();
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = charSequenceList14.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceList21.spliterator();
        int int24 = charSequenceList21.size();
        boolean boolean25 = charSequenceList14.contains((java.lang.Object) charSequenceList21);
        java.lang.CharSequence charSequence26 = charSequenceList14.element();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        boolean boolean32 = charSequenceList29.isEmpty();
        charSequenceList29.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str35 = charSequenceList29.toString();
        boolean boolean36 = charSequenceList14.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor37 = charSequenceList14.iterator();
        charSequenceList14.addFirst((java.lang.CharSequence) "[hi!, [hi!, ]]");
        boolean boolean40 = charSequenceList2.equals((java.lang.Object) charSequenceList14);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[hi!, ]" + "'", str35, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charSequenceItor37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean10 = charSequenceList2.offerLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        boolean boolean19 = charSequenceList13.offerFirst((java.lang.CharSequence) "hi!");
        int int20 = charSequenceList2.lastIndexOf((java.lang.Object) "hi!");
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList26 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean27 = charSequenceList23.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList26);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator32 = charSequenceList30.spliterator();
        int int33 = charSequenceList30.size();
        boolean boolean34 = charSequenceList23.contains((java.lang.Object) charSequenceList30);
        java.lang.CharSequence charSequence35 = charSequenceList23.element();
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceList38.spliterator();
        boolean boolean41 = charSequenceList38.isEmpty();
        charSequenceList38.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str44 = charSequenceList38.toString();
        boolean boolean45 = charSequenceList23.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        boolean boolean47 = charSequenceList38.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor48 = charSequenceList38.descendingIterator();
        boolean boolean49 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceList38.spliterator();
        int int51 = charSequenceList38.size();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[hi!, ]" + "'", str44, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceItor48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 3 + "'", int51 == 3);
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator29 = charSequenceList27.spliterator();
        java.lang.CharSequence charSequence30 = charSequenceList27.getLast();
        java.lang.CharSequence charSequence31 = charSequenceList27.removeLast();
        boolean boolean32 = charSequenceList17.remove((java.lang.Object) charSequenceList27);
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = charSequenceList35.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42, charSequenceArray41);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator44 = charSequenceList42.spliterator();
        int int45 = charSequenceList42.size();
        boolean boolean46 = charSequenceList35.contains((java.lang.Object) charSequenceList42);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream47 = charSequenceList35.stream();
        java.lang.CharSequence charSequence49 = null;
        charSequenceList35.add(0, charSequence49);
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList53 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53, charSequenceArray52);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = charSequenceList53.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList56);
        java.lang.CharSequence[] charSequenceArray59 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList60 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList60, charSequenceArray59);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator62 = charSequenceList60.spliterator();
        int int63 = charSequenceList60.size();
        boolean boolean64 = charSequenceList53.contains((java.lang.Object) charSequenceList60);
        java.lang.CharSequence charSequence65 = charSequenceList53.element();
        boolean boolean66 = charSequenceList35.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53);
        java.lang.CharSequence charSequence67 = charSequenceList53.poll();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator68 = charSequenceList53.spliterator();
        charSequenceList53.addFirst((java.lang.CharSequence) "[[hi!, ]]");
        boolean boolean71 = charSequenceList27.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator29);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "" + "'", charSequence30, "");
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "" + "'", charSequence31, "");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceStream47);
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charSequenceArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + charSequence65 + "' != '" + "hi!" + "'", charSequence65, "hi!");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + charSequence67 + "' != '" + "hi!" + "'", charSequence67, "hi!");
        org.junit.Assert.assertNotNull(charSequenceSpliterator68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.pop();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence13 = charSequenceList2.pop();
        java.util.function.UnaryOperator<java.lang.CharSequence> charSequenceUnaryOperator14 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList2.replaceAll(charSequenceUnaryOperator14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        java.util.LinkedList<java.lang.Comparable<java.lang.String>> strComparableList5 = new java.util.LinkedList<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = charSequenceList2.contains((java.lang.Object) strComparableList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = charSequenceList9.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator18 = charSequenceList16.spliterator();
        int int19 = charSequenceList16.size();
        boolean boolean20 = charSequenceList9.contains((java.lang.Object) charSequenceList16);
        java.lang.CharSequence charSequence21 = charSequenceList9.element();
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = charSequenceList24.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceList31.spliterator();
        int int34 = charSequenceList31.size();
        boolean boolean35 = charSequenceList24.contains((java.lang.Object) charSequenceList31);
        java.lang.CharSequence charSequence36 = charSequenceList24.element();
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceList39.spliterator();
        boolean boolean42 = charSequenceList39.isEmpty();
        charSequenceList39.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str45 = charSequenceList39.toString();
        boolean boolean46 = charSequenceList24.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean48 = charSequenceList39.offer((java.lang.CharSequence) "");
        charSequenceList39.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean53 = charSequenceList39.add((java.lang.CharSequence) "");
        int int54 = charSequenceList9.lastIndexOf((java.lang.Object) boolean53);
        boolean boolean55 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList58 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58, charSequenceArray57);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList61 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean62 = charSequenceList58.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList61);
        java.lang.CharSequence[] charSequenceArray64 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList65 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList65, charSequenceArray64);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator67 = charSequenceList65.spliterator();
        int int68 = charSequenceList65.size();
        boolean boolean69 = charSequenceList58.contains((java.lang.Object) charSequenceList65);
        java.lang.CharSequence charSequence70 = charSequenceList58.element();
        java.lang.CharSequence[] charSequenceArray72 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList73 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList73, charSequenceArray72);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator75 = charSequenceList73.spliterator();
        boolean boolean76 = charSequenceList73.isEmpty();
        charSequenceList73.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str79 = charSequenceList73.toString();
        boolean boolean80 = charSequenceList58.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList73);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream81 = charSequenceList73.stream();
        boolean boolean82 = charSequenceList9.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList73);
        java.lang.CharSequence charSequence83 = charSequenceList9.getFirst();
        java.lang.CharSequence charSequence84 = charSequenceList9.pop();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "hi!" + "'", charSequence21, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "hi!" + "'", charSequence36, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[hi!, ]" + "'", str45, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(charSequenceArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + charSequence70 + "' != '" + "hi!" + "'", charSequence70, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[hi!, ]" + "'", str79, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(charSequenceStream81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertEquals("'" + charSequence83 + "' != '" + "hi!" + "'", charSequence83, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence84 + "' != '" + "hi!" + "'", charSequence84, "hi!");
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean18 = charSequenceList15.isEmpty();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        boolean boolean28 = charSequenceList21.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        boolean boolean36 = charSequenceList21.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = charSequenceList39.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        java.lang.CharSequence charSequence44 = charSequenceList39.peek();
        boolean boolean46 = charSequenceList39.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = charSequenceList49.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        boolean boolean54 = charSequenceList39.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        boolean boolean55 = charSequenceList52.isEmpty();
        boolean boolean56 = charSequenceList34.equals((java.lang.Object) charSequenceList52);
        boolean boolean57 = charSequenceList15.contains((java.lang.Object) charSequenceList34);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence58 = charSequenceList15.pop();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "hi!" + "'", charSequence44, "hi!");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceList17.stream();
        boolean boolean27 = charSequenceList17.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence28 = charSequenceList17.poll();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceList31.spliterator();
        charSequenceList31.clear();
        boolean boolean35 = charSequenceList17.removeLastOccurrence((java.lang.Object) charSequenceList31);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence36 = charSequenceList31.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceStream25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "[hi!, ]" + "'", charSequence28, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean10 = charSequenceList2.offerLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        boolean boolean19 = charSequenceList13.offerFirst((java.lang.CharSequence) "hi!");
        int int20 = charSequenceList2.lastIndexOf((java.lang.Object) "hi!");
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList26 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean27 = charSequenceList23.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList26);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator32 = charSequenceList30.spliterator();
        int int33 = charSequenceList30.size();
        boolean boolean34 = charSequenceList23.contains((java.lang.Object) charSequenceList30);
        java.lang.CharSequence charSequence35 = charSequenceList23.element();
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceList38.spliterator();
        boolean boolean41 = charSequenceList38.isEmpty();
        charSequenceList38.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str44 = charSequenceList38.toString();
        boolean boolean45 = charSequenceList23.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        boolean boolean47 = charSequenceList38.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor48 = charSequenceList38.descendingIterator();
        boolean boolean49 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceList38.spliterator();
        java.lang.Object obj51 = charSequenceList38.clone();
        charSequenceList38.addFirst((java.lang.CharSequence) "[]");
        charSequenceList38.add(3, (java.lang.CharSequence) "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[hi!, ]" + "'", str44, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceItor48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "[hi!, , ]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "[hi!, , ]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "[hi!, , ]");
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        int int27 = charSequenceList2.indexOf((java.lang.Object) charSequence26);
        int int28 = charSequenceList2.size();
        java.lang.CharSequence charSequence29 = charSequenceList2.pop();
        charSequenceList2.push((java.lang.CharSequence) "[hi!]");
        charSequenceList2.addLast((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = charSequenceList36.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence charSequence41 = charSequenceList36.peek();
        boolean boolean43 = charSequenceList36.add((java.lang.CharSequence) "[hi!, ]");
        boolean boolean44 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36);
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceList47.spliterator();
        int int50 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList47);
        java.util.function.UnaryOperator<java.lang.CharSequence> charSequenceUnaryOperator51 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList47.replaceAll(charSequenceUnaryOperator51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence22 = charSequenceList17.peek();
        boolean boolean24 = charSequenceList17.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean25 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence26 = charSequenceList2.pop();
        java.lang.CharSequence charSequence27 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.Object obj35 = charSequenceList33.clone();
        int int36 = charSequenceList2.indexOf((java.lang.Object) charSequenceList33);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream37 = charSequenceList2.parallelStream();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence39 = charSequenceList2.remove((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNull(charSequence27);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "[]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(charSequenceStream37);
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = charSequenceList9.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence charSequence14 = charSequenceList9.peek();
        boolean boolean16 = charSequenceList9.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        boolean boolean24 = charSequenceList9.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence charSequence25 = charSequenceList9.pop();
        boolean boolean26 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.util.function.UnaryOperator<java.lang.CharSequence> charSequenceUnaryOperator27 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList9.replaceAll(charSequenceUnaryOperator27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        boolean boolean14 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence15 = charSequenceList2.remove();
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.CharSequence> charSequenceItor18 = charSequenceList2.listIterator((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "hi!" + "'", charSequence15, "hi!");
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        int int27 = charSequenceList2.indexOf((java.lang.Object) charSequence26);
        int int28 = charSequenceList2.size();
        java.lang.Object obj29 = charSequenceList2.clone();
        java.lang.CharSequence charSequence30 = charSequenceList2.poll();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence31 = charSequenceList2.getLast();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "hi!" + "'", charSequence30, "hi!");
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList2.removeLastOccurrence(obj9);
        boolean boolean12 = charSequenceList2.remove((java.lang.Object) (short) 10);
        java.lang.CharSequence charSequence13 = charSequenceList2.poll();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = charSequenceList16.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.Object obj21 = null;
        boolean boolean22 = charSequenceList16.equals(obj21);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator27 = charSequenceList25.spliterator();
        boolean boolean28 = charSequenceList16.removeLastOccurrence((java.lang.Object) charSequenceList25);
        java.lang.CharSequence charSequence29 = charSequenceList25.removeLast();
        java.util.List<java.lang.CharSequence> charSequenceList32 = charSequenceList25.subList(0, (int) (short) 0);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream33 = charSequenceList32.stream();
        boolean boolean34 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "" + "'", charSequence29, "");
        org.junit.Assert.assertNotNull(charSequenceList32);
        org.junit.Assert.assertNotNull(charSequenceStream33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence charSequence15 = charSequenceList11.removeLast();
        java.util.List<java.lang.CharSequence> charSequenceList18 = charSequenceList11.subList(0, (int) (short) 0);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceList21.spliterator();
        boolean boolean24 = charSequenceList21.isEmpty();
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator29 = charSequenceList27.spliterator();
        boolean boolean30 = charSequenceList27.isEmpty();
        charSequenceList27.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean34 = charSequenceList27.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence35 = charSequenceList27.pop();
        charSequenceList27.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean39 = charSequenceList27.offer((java.lang.CharSequence) "[hi!, ]");
        boolean boolean41 = charSequenceList27.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence42 = charSequenceList27.getFirst();
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean49 = charSequenceList45.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList48);
        int int51 = charSequenceList45.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence52 = charSequenceList45.removeLast();
        java.lang.CharSequence charSequence53 = charSequenceList45.peekLast();
        java.lang.CharSequence[] charSequenceArray55 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56, charSequenceArray55);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList59 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean60 = charSequenceList56.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList59);
        java.lang.CharSequence[] charSequenceArray62 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList63 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList63, charSequenceArray62);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator65 = charSequenceList63.spliterator();
        int int66 = charSequenceList63.size();
        boolean boolean67 = charSequenceList56.contains((java.lang.Object) charSequenceList63);
        java.lang.CharSequence charSequence68 = charSequenceList56.element();
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList71 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList71, charSequenceArray70);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator73 = charSequenceList71.spliterator();
        boolean boolean74 = charSequenceList71.isEmpty();
        charSequenceList71.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str77 = charSequenceList71.toString();
        boolean boolean78 = charSequenceList56.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList71);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream79 = charSequenceList71.stream();
        boolean boolean80 = charSequenceList45.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList71);
        java.lang.CharSequence charSequence81 = charSequenceList45.remove();
        boolean boolean82 = charSequenceList27.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        int int83 = charSequenceList21.lastIndexOf((java.lang.Object) charSequenceList45);
        boolean boolean84 = charSequenceList11.remove((java.lang.Object) int83);
        java.lang.CharSequence charSequence85 = charSequenceList11.pollLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "" + "'", charSequence15, "");
        org.junit.Assert.assertNotNull(charSequenceList18);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "[hi!, ]" + "'", charSequence42, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "hi!" + "'", charSequence52, "hi!");
        org.junit.Assert.assertNull(charSequence53);
        org.junit.Assert.assertNotNull(charSequenceArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(charSequenceArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + charSequence68 + "' != '" + "hi!" + "'", charSequence68, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[hi!, ]" + "'", str77, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(charSequenceStream79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertEquals("'" + charSequence81 + "' != '" + "hi!" + "'", charSequence81, "hi!");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(charSequence85);
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean10 = charSequenceList2.offerLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        boolean boolean19 = charSequenceList13.offerFirst((java.lang.CharSequence) "hi!");
        int int20 = charSequenceList2.lastIndexOf((java.lang.Object) "hi!");
        boolean boolean22 = charSequenceList2.add((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream23 = charSequenceList2.parallelStream();
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList26 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26, charSequenceArray25);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = charSequenceList26.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList33, charSequenceArray32);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator35 = charSequenceList33.spliterator();
        int int36 = charSequenceList33.size();
        boolean boolean37 = charSequenceList26.contains((java.lang.Object) charSequenceList33);
        java.lang.CharSequence charSequence38 = charSequenceList26.element();
        java.lang.CharSequence[] charSequenceArray40 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList41 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList41, charSequenceArray40);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator43 = charSequenceList41.spliterator();
        boolean boolean44 = charSequenceList41.isEmpty();
        charSequenceList41.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str47 = charSequenceList41.toString();
        boolean boolean48 = charSequenceList26.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList41);
        java.lang.CharSequence charSequence49 = charSequenceList26.getFirst();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor50 = charSequenceList26.listIterator();
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList53 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53, charSequenceArray52);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = charSequenceList53.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList56);
        java.lang.CharSequence[] charSequenceArray59 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList60 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList60, charSequenceArray59);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator62 = charSequenceList60.spliterator();
        int int63 = charSequenceList60.size();
        boolean boolean64 = charSequenceList53.contains((java.lang.Object) charSequenceList60);
        java.lang.CharSequence charSequence65 = charSequenceList60.removeFirst();
        java.lang.CharSequence charSequence66 = charSequenceList60.pollLast();
        java.lang.CharSequence[] charSequenceArray68 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList69 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList69, charSequenceArray68);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList72 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean73 = charSequenceList69.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList72);
        java.lang.CharSequence charSequence74 = charSequenceList69.peek();
        boolean boolean76 = charSequenceList69.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray78 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList79 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList79, charSequenceArray78);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList82 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean83 = charSequenceList79.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList82);
        boolean boolean84 = charSequenceList69.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList82);
        boolean boolean85 = charSequenceList60.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList82);
        java.lang.CharSequence[] charSequenceArray87 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList88 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList88, charSequenceArray87);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList91 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean92 = charSequenceList88.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList91);
        boolean boolean94 = charSequenceList88.offerFirst((java.lang.CharSequence) "hi!");
        boolean boolean95 = charSequenceList82.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList88);
        boolean boolean96 = charSequenceList26.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList88);
        boolean boolean97 = charSequenceList2.contains((java.lang.Object) boolean96);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceStream23);
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "hi!" + "'", charSequence38, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[hi!, ]" + "'", str47, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "hi!" + "'", charSequence49, "hi!");
        org.junit.Assert.assertNotNull(charSequenceItor50);
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charSequenceArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + charSequence65 + "' != '" + "" + "'", charSequence65, "");
        org.junit.Assert.assertNull(charSequence66);
        org.junit.Assert.assertNotNull(charSequenceArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + charSequence74 + "' != '" + "hi!" + "'", charSequence74, "hi!");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(charSequenceArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(charSequenceArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence charSequence15 = charSequenceList11.peekFirst();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceList11.spliterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "" + "'", charSequence15, "");
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean10 = charSequenceList2.offerLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.String str11 = charSequenceList2.toString();
        java.lang.CharSequence charSequence12 = charSequenceList2.peek();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[hi!, [hi!, ]]" + "'", str11, "[hi!, [hi!, ]]");
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "hi!" + "'", charSequence12, "hi!");
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.lang.CharSequence[] charSequenceArray9 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList10 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList10, charSequenceArray9);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = charSequenceList10.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        int int20 = charSequenceList17.size();
        boolean boolean21 = charSequenceList10.contains((java.lang.Object) charSequenceList17);
        java.lang.CharSequence charSequence22 = charSequenceList10.element();
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator27 = charSequenceList25.spliterator();
        boolean boolean28 = charSequenceList25.isEmpty();
        charSequenceList25.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str31 = charSequenceList25.toString();
        boolean boolean32 = charSequenceList10.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        boolean boolean34 = charSequenceList25.offer((java.lang.CharSequence) "");
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor35 = charSequenceList25.listIterator();
        java.lang.CharSequence charSequence36 = charSequenceList25.poll();
        java.lang.CharSequence charSequence37 = charSequenceList25.peek();
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = charSequenceList40.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        java.lang.Object obj45 = null;
        boolean boolean46 = charSequenceList40.equals(obj45);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        java.lang.CharSequence charSequence48 = charSequenceList40.peek();
        boolean boolean49 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        boolean boolean50 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList40);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertNotNull(charSequenceArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[hi!, ]" + "'", str31, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceItor35);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "hi!" + "'", charSequence36, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "" + "'", charSequence37, "");
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "hi!" + "'", charSequence48, "hi!");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.pop();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean14 = charSequenceList2.offer((java.lang.CharSequence) "[hi!, ]");
        boolean boolean16 = charSequenceList2.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence17 = charSequenceList2.getFirst();
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        int int26 = charSequenceList20.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence27 = charSequenceList20.removeLast();
        java.lang.CharSequence charSequence28 = charSequenceList20.peekLast();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceList38.spliterator();
        int int41 = charSequenceList38.size();
        boolean boolean42 = charSequenceList31.contains((java.lang.Object) charSequenceList38);
        java.lang.CharSequence charSequence43 = charSequenceList31.element();
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceList46.spliterator();
        boolean boolean49 = charSequenceList46.isEmpty();
        charSequenceList46.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str52 = charSequenceList46.toString();
        boolean boolean53 = charSequenceList31.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceList46.stream();
        boolean boolean55 = charSequenceList20.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        boolean boolean56 = charSequenceList2.contains((java.lang.Object) charSequenceList20);
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor57 = charSequenceList20.listIterator();
        java.lang.CharSequence charSequence58 = charSequenceList20.getLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "[hi!, ]" + "'", charSequence17, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "hi!" + "'", charSequence43, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[hi!, ]" + "'", str52, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charSequenceItor57);
        org.junit.Assert.assertEquals("'" + charSequence58 + "' != '" + "" + "'", charSequence58, "");
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor25 = charSequenceList2.descendingIterator();
        java.lang.CharSequence charSequence26 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.CharSequence charSequence35 = charSequenceList30.peek();
        boolean boolean37 = charSequenceList30.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceList30.spliterator();
        boolean boolean40 = charSequenceList30.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence41 = charSequenceList30.element();
        java.lang.CharSequence charSequence42 = charSequenceList30.peekLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor43 = charSequenceList30.listIterator();
        charSequenceList30.addFirst((java.lang.CharSequence) "[hi!]");
        boolean boolean46 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = charSequenceList49.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        java.lang.CharSequence[] charSequenceArray55 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56, charSequenceArray55);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator58 = charSequenceList56.spliterator();
        int int59 = charSequenceList56.size();
        boolean boolean60 = charSequenceList49.contains((java.lang.Object) charSequenceList56);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream61 = charSequenceList49.stream();
        java.lang.CharSequence charSequence63 = null;
        charSequenceList49.add(0, charSequence63);
        java.lang.CharSequence charSequence65 = charSequenceList49.removeFirst();
        java.lang.CharSequence charSequence66 = charSequenceList49.peekFirst();
        boolean boolean67 = charSequenceList30.removeFirstOccurrence((java.lang.Object) charSequenceList49);
        java.lang.Object[] objArray68 = charSequenceList30.toArray();
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList71 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList71, charSequenceArray70);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList74 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean75 = charSequenceList71.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList74);
        java.lang.Object obj76 = null;
        boolean boolean77 = charSequenceList71.equals(obj76);
        java.lang.CharSequence[] charSequenceArray79 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList80 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList80, charSequenceArray79);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator82 = charSequenceList80.spliterator();
        boolean boolean83 = charSequenceList71.removeLastOccurrence((java.lang.Object) charSequenceList80);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator84 = charSequenceList80.spliterator();
        java.lang.CharSequence charSequence85 = charSequenceList80.element();
        boolean boolean87 = charSequenceList80.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence88 = charSequenceList80.pop();
        charSequenceList80.addLast((java.lang.CharSequence) "");
        boolean boolean91 = charSequenceList30.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList80);
        java.lang.CharSequence charSequence92 = charSequenceList30.peekFirst();
        java.lang.CharSequence charSequence93 = charSequenceList30.getLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceItor25);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertNotNull(charSequenceItor43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charSequenceArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(charSequenceStream61);
        org.junit.Assert.assertNull(charSequence65);
        org.junit.Assert.assertEquals("'" + charSequence66 + "' != '" + "hi!" + "'", charSequence66, "hi!");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[[hi!], hi!, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[[hi!], hi!, hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(charSequenceArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator84);
        org.junit.Assert.assertEquals("'" + charSequence85 + "' != '" + "" + "'", charSequence85, "");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertEquals("'" + charSequence88 + "' != '" + "[hi!, ]" + "'", charSequence88, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + charSequence92 + "' != '" + "[hi!]" + "'", charSequence92, "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence93 + "' != '" + "hi!" + "'", charSequence93, "hi!");
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList13.equals(obj18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        boolean boolean25 = charSequenceList13.removeLastOccurrence((java.lang.Object) charSequenceList22);
        charSequenceList13.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean28 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        java.util.LinkedList<java.io.Serializable> serializableList29 = new java.util.LinkedList<java.io.Serializable>();
        boolean boolean30 = charSequenceList2.equals((java.lang.Object) serializableList29);
        java.lang.CharSequence charSequence32 = charSequenceList2.get(0);
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = charSequenceList35.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        java.lang.CharSequence charSequence40 = charSequenceList35.peek();
        java.lang.CharSequence charSequence41 = charSequenceList35.pollFirst();
        charSequenceList35.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = charSequenceList46.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList49);
        java.lang.Object obj51 = null;
        boolean boolean52 = charSequenceList46.equals(obj51);
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList55 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55, charSequenceArray54);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator57 = charSequenceList55.spliterator();
        boolean boolean58 = charSequenceList46.removeLastOccurrence((java.lang.Object) charSequenceList55);
        java.lang.CharSequence charSequence59 = charSequenceList55.removeLast();
        boolean boolean60 = charSequenceList35.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor61 = charSequenceList55.iterator();
        boolean boolean62 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceItor61);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "hi!" + "'", charSequence32, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "hi!" + "'", charSequence40, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + charSequence59 + "' != '" + "" + "'", charSequence59, "");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(charSequenceItor61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.poll();
        java.lang.String str9 = charSequenceList2.toString();
        java.lang.CharSequence charSequence10 = charSequenceList2.poll();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceList20.spliterator();
        int int23 = charSequenceList20.size();
        boolean boolean24 = charSequenceList13.contains((java.lang.Object) charSequenceList20);
        java.lang.CharSequence charSequence25 = charSequenceList13.element();
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceList28.spliterator();
        boolean boolean31 = charSequenceList28.isEmpty();
        charSequenceList28.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str34 = charSequenceList28.toString();
        boolean boolean35 = charSequenceList13.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor36 = charSequenceList13.iterator();
        boolean boolean37 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        java.lang.CharSequence charSequence38 = charSequenceList2.peekLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[]" + "'", str9, "[]");
        org.junit.Assert.assertNull(charSequence10);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[hi!, ]" + "'", str34, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceItor36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(charSequence38);
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.pop();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence13 = charSequenceList2.poll();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = charSequenceList16.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence charSequence21 = charSequenceList16.peek();
        boolean boolean23 = charSequenceList16.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList26 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26, charSequenceArray25);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = charSequenceList26.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        boolean boolean31 = charSequenceList16.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        charSequenceList16.clear();
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = charSequenceList35.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        java.lang.Object obj40 = charSequenceList38.clone();
        int int41 = charSequenceList16.lastIndexOf((java.lang.Object) charSequenceList38);
        java.lang.CharSequence charSequence42 = charSequenceList38.peekFirst();
        java.lang.CharSequence charSequence43 = charSequenceList38.peekFirst();
        boolean boolean44 = charSequenceList2.removeFirstOccurrence((java.lang.Object) charSequenceList38);
        charSequenceList38.addLast((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor47 = charSequenceList38.descendingIterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "hi!" + "'", charSequence21, "hi!");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(charSequence42);
        org.junit.Assert.assertNull(charSequence43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceItor47);
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor27 = charSequenceList17.listIterator();
        java.lang.CharSequence charSequence28 = charSequenceList17.poll();
        java.lang.CharSequence charSequence29 = charSequenceList17.peek();
        java.lang.CharSequence charSequence30 = charSequenceList17.remove();
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList33, charSequenceArray32);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean37 = charSequenceList33.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList36);
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator42 = charSequenceList40.spliterator();
        int int43 = charSequenceList40.size();
        boolean boolean44 = charSequenceList33.contains((java.lang.Object) charSequenceList40);
        boolean boolean45 = charSequenceList33.isEmpty();
        java.lang.CharSequence charSequence46 = charSequenceList33.remove();
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = charSequenceList49.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        java.lang.CharSequence[] charSequenceArray55 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56, charSequenceArray55);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator58 = charSequenceList56.spliterator();
        int int59 = charSequenceList56.size();
        boolean boolean60 = charSequenceList49.contains((java.lang.Object) charSequenceList56);
        java.lang.CharSequence charSequence61 = charSequenceList49.element();
        java.lang.CharSequence[] charSequenceArray63 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList64 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64, charSequenceArray63);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator66 = charSequenceList64.spliterator();
        boolean boolean67 = charSequenceList64.isEmpty();
        charSequenceList64.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str70 = charSequenceList64.toString();
        boolean boolean71 = charSequenceList49.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64);
        boolean boolean73 = charSequenceList64.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence74 = charSequenceList64.pollFirst();
        boolean boolean75 = charSequenceList33.contains((java.lang.Object) charSequence74);
        boolean boolean76 = charSequenceList17.equals((java.lang.Object) boolean75);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceItor27);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "hi!" + "'", charSequence28, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "" + "'", charSequence29, "");
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "" + "'", charSequence30, "");
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + charSequence46 + "' != '" + "hi!" + "'", charSequence46, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charSequenceArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + charSequence61 + "' != '" + "hi!" + "'", charSequence61, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[hi!, ]" + "'", str70, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertEquals("'" + charSequence74 + "' != '" + "hi!" + "'", charSequence74, "hi!");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence charSequence9 = charSequenceList2.removeFirst();
        boolean boolean11 = charSequenceList2.removeLastOccurrence((java.lang.Object) (short) 100);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceList14.spliterator();
        int int17 = charSequenceList14.size();
        java.lang.CharSequence charSequence18 = charSequenceList14.remove();
        boolean boolean19 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence20 = charSequenceList14.pollFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "" + "'", charSequence18, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(charSequence20);
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        charSequenceList2.addFirst((java.lang.CharSequence) "[hi!, ]");
        charSequenceList2.clear();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceList15.spliterator();
        java.util.LinkedList<java.lang.Comparable<java.lang.String>> strComparableList18 = new java.util.LinkedList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = charSequenceList15.contains((java.lang.Object) strComparableList18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = charSequenceList22.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        int int32 = charSequenceList29.size();
        boolean boolean33 = charSequenceList22.contains((java.lang.Object) charSequenceList29);
        java.lang.CharSequence charSequence34 = charSequenceList22.element();
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        java.lang.CharSequence[] charSequenceArray43 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList44 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList44, charSequenceArray43);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator46 = charSequenceList44.spliterator();
        int int47 = charSequenceList44.size();
        boolean boolean48 = charSequenceList37.contains((java.lang.Object) charSequenceList44);
        java.lang.CharSequence charSequence49 = charSequenceList37.element();
        java.lang.CharSequence[] charSequenceArray51 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52, charSequenceArray51);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator54 = charSequenceList52.spliterator();
        boolean boolean55 = charSequenceList52.isEmpty();
        charSequenceList52.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str58 = charSequenceList52.toString();
        boolean boolean59 = charSequenceList37.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        boolean boolean61 = charSequenceList52.offer((java.lang.CharSequence) "");
        charSequenceList52.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean66 = charSequenceList52.add((java.lang.CharSequence) "");
        int int67 = charSequenceList22.lastIndexOf((java.lang.Object) boolean66);
        boolean boolean68 = charSequenceList15.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList71 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList71, charSequenceArray70);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList74 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean75 = charSequenceList71.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList74);
        java.lang.CharSequence charSequence76 = charSequenceList71.peek();
        java.lang.CharSequence charSequence77 = charSequenceList71.pollFirst();
        charSequenceList71.addFirst((java.lang.CharSequence) "hi!");
        int int80 = charSequenceList22.indexOf((java.lang.Object) charSequenceList71);
        boolean boolean81 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        boolean boolean83 = charSequenceList2.offer((java.lang.CharSequence) "[[hi!, ]]");
        java.lang.CharSequence charSequence84 = charSequenceList2.peek();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence86 = charSequenceList2.get((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "hi!" + "'", charSequence49, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[hi!, ]" + "'", str58, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + charSequence76 + "' != '" + "hi!" + "'", charSequence76, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence77 + "' != '" + "hi!" + "'", charSequence77, "hi!");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertEquals("'" + charSequence84 + "' != '" + "[[hi!, ]]" + "'", charSequence84, "[[hi!, ]]");
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceList2.stream();
        java.lang.CharSequence charSequence15 = charSequenceList2.getFirst();
        java.lang.CharSequence charSequence17 = charSequenceList2.remove(0);
        java.lang.String str18 = charSequenceList2.toString();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "hi!" + "'", charSequence15, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[]" + "'", str18, "[]");
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor25 = charSequenceList2.descendingIterator();
        java.lang.CharSequence charSequence26 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.CharSequence charSequence35 = charSequenceList30.peek();
        boolean boolean37 = charSequenceList30.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceList30.spliterator();
        boolean boolean40 = charSequenceList30.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence41 = charSequenceList30.element();
        java.lang.CharSequence charSequence42 = charSequenceList30.peekLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor43 = charSequenceList30.listIterator();
        charSequenceList30.addFirst((java.lang.CharSequence) "[hi!]");
        boolean boolean46 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.CharSequence> charSequenceList49 = charSequenceList2.subList(3, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(3) > toIndex(2)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceItor25);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertNotNull(charSequenceItor43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        charSequenceList2.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence12 = charSequenceList2.removeLast();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence14 = charSequenceList2.get((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence charSequence15 = charSequenceList11.removeLast();
        java.util.List<java.lang.CharSequence> charSequenceList18 = charSequenceList11.subList(0, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence19 = charSequenceList11.element();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "" + "'", charSequence15, "");
        org.junit.Assert.assertNotNull(charSequenceList18);
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        int int27 = charSequenceList2.indexOf((java.lang.Object) charSequence26);
        int int28 = charSequenceList2.size();
        java.lang.CharSequence charSequence29 = charSequenceList2.pop();
        charSequenceList2.push((java.lang.CharSequence) "[hi!]");
        charSequenceList2.addFirst((java.lang.CharSequence) "[hi!]");
        java.lang.CharSequence charSequence34 = charSequenceList2.pollFirst();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor35 = charSequenceList2.iterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "[hi!]" + "'", charSequence34, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceItor35);
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceList2.parallelStream();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator21 = charSequenceList19.spliterator();
        int int22 = charSequenceList19.size();
        boolean boolean23 = charSequenceList12.contains((java.lang.Object) charSequenceList19);
        boolean boolean24 = charSequenceList12.isEmpty();
        java.lang.Object obj25 = charSequenceList12.clone();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream26 = charSequenceList12.parallelStream();
        boolean boolean27 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator32 = charSequenceList30.spliterator();
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = charSequenceList35.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42, charSequenceArray41);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator44 = charSequenceList42.spliterator();
        int int45 = charSequenceList42.size();
        boolean boolean46 = charSequenceList35.contains((java.lang.Object) charSequenceList42);
        java.lang.CharSequence charSequence47 = charSequenceList35.element();
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList50 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50, charSequenceArray49);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator52 = charSequenceList50.spliterator();
        boolean boolean53 = charSequenceList50.isEmpty();
        charSequenceList50.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str56 = charSequenceList50.toString();
        boolean boolean57 = charSequenceList35.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50);
        boolean boolean59 = charSequenceList50.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor60 = charSequenceList50.descendingIterator();
        boolean boolean61 = charSequenceList30.removeLastOccurrence((java.lang.Object) charSequenceItor60);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator62 = charSequenceList30.spliterator();
        java.lang.CharSequence charSequence63 = charSequenceList30.getLast();
        java.lang.CharSequence[] charSequenceArray65 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList66 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList66, charSequenceArray65);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator68 = charSequenceList66.spliterator();
        boolean boolean69 = charSequenceList66.isEmpty();
        java.lang.CharSequence charSequence70 = charSequenceList66.removeLast();
        java.lang.CharSequence charSequence71 = charSequenceList66.pollFirst();
        boolean boolean72 = charSequenceList30.contains((java.lang.Object) charSequence71);
        java.lang.CharSequence charSequence73 = charSequenceList30.element();
        boolean boolean74 = charSequenceList12.contains((java.lang.Object) charSequenceList30);
        java.lang.CharSequence charSequence75 = charSequenceList12.pollLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator32);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "hi!" + "'", charSequence47, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[hi!, ]" + "'", str56, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(charSequenceItor60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator62);
        org.junit.Assert.assertEquals("'" + charSequence63 + "' != '" + "" + "'", charSequence63, "");
        org.junit.Assert.assertNotNull(charSequenceArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + charSequence70 + "' != '" + "" + "'", charSequence70, "");
        org.junit.Assert.assertNull(charSequence71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + charSequence73 + "' != '" + "" + "'", charSequence73, "");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + charSequence75 + "' != '" + "hi!" + "'", charSequence75, "hi!");
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        int int15 = charSequenceList2.size();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence charSequence24 = charSequenceList19.peek();
        boolean boolean26 = charSequenceList19.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = charSequenceList29.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        boolean boolean34 = charSequenceList19.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        boolean boolean35 = charSequenceList32.isEmpty();
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList41 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean42 = charSequenceList38.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList41);
        java.lang.CharSequence charSequence43 = charSequenceList38.peek();
        boolean boolean45 = charSequenceList38.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48, charSequenceArray47);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList51 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean52 = charSequenceList48.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList51);
        boolean boolean53 = charSequenceList38.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList51);
        java.lang.CharSequence[] charSequenceArray55 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56, charSequenceArray55);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList59 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean60 = charSequenceList56.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList59);
        java.lang.CharSequence charSequence61 = charSequenceList56.peek();
        boolean boolean63 = charSequenceList56.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray65 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList66 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList66, charSequenceArray65);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList69 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean70 = charSequenceList66.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList69);
        boolean boolean71 = charSequenceList56.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList69);
        boolean boolean72 = charSequenceList69.isEmpty();
        boolean boolean73 = charSequenceList51.equals((java.lang.Object) charSequenceList69);
        boolean boolean74 = charSequenceList32.contains((java.lang.Object) charSequenceList51);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean75 = charSequenceList2.addAll(2, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 2, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "hi!" + "'", charSequence24, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "hi!" + "'", charSequence43, "hi!");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + charSequence61 + "' != '" + "hi!" + "'", charSequence61, "hi!");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(charSequenceArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList8 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList8.spliterator();
        int int11 = charSequenceList8.size();
        boolean boolean12 = charSequenceList2.contains((java.lang.Object) charSequenceList8);
        java.lang.CharSequence charSequence13 = charSequenceList8.removeLast();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = charSequenceList16.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence charSequence21 = charSequenceList16.peek();
        boolean boolean23 = charSequenceList16.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence charSequence24 = charSequenceList16.poll();
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = charSequenceList28.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceList35.spliterator();
        int int38 = charSequenceList35.size();
        boolean boolean39 = charSequenceList28.contains((java.lang.Object) charSequenceList35);
        java.lang.CharSequence charSequence40 = charSequenceList28.element();
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList43, charSequenceArray42);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator45 = charSequenceList43.spliterator();
        boolean boolean46 = charSequenceList43.isEmpty();
        charSequenceList43.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str49 = charSequenceList43.toString();
        boolean boolean50 = charSequenceList28.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        charSequenceList43.addLast((java.lang.CharSequence) "");
        boolean boolean53 = charSequenceList16.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        boolean boolean54 = charSequenceList8.remove((java.lang.Object) boolean53);
        java.lang.Object obj55 = charSequenceList8.clone();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "hi!" + "'", charSequence21, "hi!");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "hi!" + "'", charSequence24, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "hi!" + "'", charSequence40, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[hi!, ]" + "'", str49, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "[]");
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence11 = charSequenceList2.set((int) (byte) 0, (java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence12 = charSequenceList2.getLast();
        charSequenceList2.addFirst((java.lang.CharSequence) "[hi!, [hi!, ]]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "hi!" + "'", charSequence11, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "[hi!, ]" + "'", charSequence12, "[hi!, ]");
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.CharSequence> charSequenceList29 = charSequenceList17.subList((int) (short) -1, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: fromIndex = -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence charSequence10 = charSequenceList2.poll();
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceList14.spliterator();
        java.lang.CharSequence charSequence17 = charSequenceList14.getLast();
        java.lang.String str18 = charSequenceList14.toString();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceList21.spliterator();
        boolean boolean24 = charSequenceList21.isEmpty();
        java.lang.CharSequence charSequence25 = charSequenceList21.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream26 = charSequenceList21.stream();
        java.lang.String str27 = charSequenceList21.toString();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceList31.spliterator();
        boolean boolean34 = charSequenceList31.isEmpty();
        java.lang.CharSequence charSequence35 = charSequenceList31.removeLast();
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList41 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean42 = charSequenceList38.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList41);
        java.lang.CharSequence charSequence43 = charSequenceList38.peek();
        boolean boolean45 = charSequenceList38.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48, charSequenceArray47);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList51 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean52 = charSequenceList48.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList51);
        boolean boolean53 = charSequenceList38.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList51);
        java.lang.CharSequence charSequence54 = charSequenceList38.pop();
        boolean boolean55 = charSequenceList31.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList58 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58, charSequenceArray57);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList61 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean62 = charSequenceList58.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList61);
        java.lang.Object obj63 = null;
        boolean boolean64 = charSequenceList58.equals(obj63);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList65 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList58);
        java.lang.CharSequence charSequence66 = charSequenceList58.peek();
        java.lang.CharSequence charSequence67 = charSequenceList58.remove();
        boolean boolean68 = charSequenceList38.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58);
        boolean boolean69 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList58);
        java.lang.CharSequence[] charSequenceArray71 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList72 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList72, charSequenceArray71);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList75 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean76 = charSequenceList72.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList75);
        int int78 = charSequenceList72.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean80 = charSequenceList72.contains((java.lang.Object) (-1.0d));
        java.lang.CharSequence charSequence81 = charSequenceList72.getFirst();
        boolean boolean82 = charSequenceList58.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList72);
        boolean boolean83 = charSequenceList14.remove((java.lang.Object) charSequenceList72);
        boolean boolean84 = charSequenceList2.removeFirstOccurrence((java.lang.Object) boolean83);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence85 = charSequenceList2.removeFirst();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[]" + "'", str18, "[]");
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "" + "'", charSequence25, "");
        org.junit.Assert.assertNotNull(charSequenceStream26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[]" + "'", str27, "[]");
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "" + "'", charSequence35, "");
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "hi!" + "'", charSequence43, "hi!");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "hi!" + "'", charSequence54, "hi!");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + charSequence66 + "' != '" + "hi!" + "'", charSequence66, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence67 + "' != '" + "hi!" + "'", charSequence67, "hi!");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(charSequenceArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + charSequence81 + "' != '" + "hi!" + "'", charSequence81, "hi!");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        java.lang.CharSequence charSequence10 = charSequenceList2.remove();
        java.lang.CharSequence charSequence11 = charSequenceList2.peekLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertNull(charSequence11);
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        charSequenceList5.push((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence9 = charSequenceList5.peek();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "" + "'", charSequence9, "");
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList8 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList8.spliterator();
        int int11 = charSequenceList8.size();
        boolean boolean12 = charSequenceList2.contains((java.lang.Object) charSequenceList8);
        java.lang.CharSequence charSequence13 = charSequenceList8.removeLast();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator18 = charSequenceList16.spliterator();
        boolean boolean19 = charSequenceList16.isEmpty();
        charSequenceList16.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str22 = charSequenceList16.toString();
        java.lang.CharSequence charSequence23 = charSequenceList16.removeFirst();
        boolean boolean25 = charSequenceList16.offer((java.lang.CharSequence) "hi!");
        boolean boolean26 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        java.util.LinkedList<java.lang.Comparable<java.lang.String>> strComparableList32 = new java.util.LinkedList<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = charSequenceList29.contains((java.lang.Object) strComparableList32);
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = charSequenceList36.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList43, charSequenceArray42);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator45 = charSequenceList43.spliterator();
        int int46 = charSequenceList43.size();
        boolean boolean47 = charSequenceList36.contains((java.lang.Object) charSequenceList43);
        java.lang.CharSequence charSequence48 = charSequenceList36.element();
        java.lang.CharSequence[] charSequenceArray50 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList51 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList51, charSequenceArray50);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList54 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean55 = charSequenceList51.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList54);
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList58 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58, charSequenceArray57);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator60 = charSequenceList58.spliterator();
        int int61 = charSequenceList58.size();
        boolean boolean62 = charSequenceList51.contains((java.lang.Object) charSequenceList58);
        java.lang.CharSequence charSequence63 = charSequenceList51.element();
        java.lang.CharSequence[] charSequenceArray65 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList66 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList66, charSequenceArray65);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator68 = charSequenceList66.spliterator();
        boolean boolean69 = charSequenceList66.isEmpty();
        charSequenceList66.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str72 = charSequenceList66.toString();
        boolean boolean73 = charSequenceList51.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList66);
        boolean boolean75 = charSequenceList66.offer((java.lang.CharSequence) "");
        charSequenceList66.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean80 = charSequenceList66.add((java.lang.CharSequence) "");
        int int81 = charSequenceList36.lastIndexOf((java.lang.Object) boolean80);
        boolean boolean82 = charSequenceList29.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36);
        boolean boolean84 = charSequenceList36.remove((java.lang.Object) (short) 100);
        int int85 = charSequenceList36.size();
        int int86 = charSequenceList16.lastIndexOf((java.lang.Object) int85);
        java.lang.CharSequence charSequence87 = charSequenceList16.element();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor89 = charSequenceList16.listIterator((int) (short) 0);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream90 = charSequenceList16.parallelStream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[hi!, ]" + "'", str22, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "hi!" + "'", charSequence23, "hi!");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "hi!" + "'", charSequence48, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + charSequence63 + "' != '" + "hi!" + "'", charSequence63, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[hi!, ]" + "'", str72, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence87 + "' != '" + "" + "'", charSequence87, "");
        org.junit.Assert.assertNotNull(charSequenceItor89);
        org.junit.Assert.assertNotNull(charSequenceStream90);
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        charSequenceList5.push((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        boolean boolean18 = charSequenceList11.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        boolean boolean26 = charSequenceList11.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        boolean boolean27 = charSequenceList24.isEmpty();
        java.lang.CharSequence charSequence28 = charSequenceList24.peekLast();
        java.lang.CharSequence charSequence29 = charSequenceList24.poll();
        java.lang.String str30 = charSequenceList24.toString();
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList33, charSequenceArray32);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean37 = charSequenceList33.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList36);
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator42 = charSequenceList40.spliterator();
        int int43 = charSequenceList40.size();
        boolean boolean44 = charSequenceList33.contains((java.lang.Object) charSequenceList40);
        java.lang.CharSequence charSequence45 = charSequenceList33.element();
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48, charSequenceArray47);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceList48.spliterator();
        boolean boolean51 = charSequenceList48.isEmpty();
        charSequenceList48.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str54 = charSequenceList48.toString();
        boolean boolean55 = charSequenceList33.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48);
        boolean boolean57 = charSequenceList48.offer((java.lang.CharSequence) "");
        charSequenceList48.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList48.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        boolean boolean65 = charSequenceList48.offerFirst((java.lang.CharSequence) "hi!");
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator66 = charSequenceList48.spliterator();
        boolean boolean67 = charSequenceList24.removeFirstOccurrence((java.lang.Object) charSequenceSpliterator66);
        java.lang.Object[] objArray68 = charSequenceList24.toArray();
        boolean boolean69 = charSequenceList5.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence70 = charSequenceList5.pollFirst();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator71 = charSequenceList5.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence72 = charSequenceList5.pop();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNull(charSequence29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[]" + "'", str30, "[]");
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + charSequence45 + "' != '" + "hi!" + "'", charSequence45, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[hi!, ]" + "'", str54, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + charSequence70 + "' != '" + "" + "'", charSequence70, "");
        org.junit.Assert.assertNotNull(charSequenceSpliterator71);
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        java.lang.CharSequence charSequence10 = charSequenceList2.peek();
        java.lang.CharSequence charSequence11 = charSequenceList2.remove();
        boolean boolean13 = charSequenceList2.add((java.lang.CharSequence) "[hi!]");
        java.lang.CharSequence charSequence14 = charSequenceList2.remove();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor15 = charSequenceList2.descendingIterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "hi!" + "'", charSequence11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "[hi!]" + "'", charSequence14, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceItor15);
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        java.util.LinkedList<java.lang.Comparable<java.lang.String>> strComparableList5 = new java.util.LinkedList<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = charSequenceList2.contains((java.lang.Object) strComparableList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = charSequenceList9.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator18 = charSequenceList16.spliterator();
        int int19 = charSequenceList16.size();
        boolean boolean20 = charSequenceList9.contains((java.lang.Object) charSequenceList16);
        java.lang.CharSequence charSequence21 = charSequenceList9.element();
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = charSequenceList24.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceList31.spliterator();
        int int34 = charSequenceList31.size();
        boolean boolean35 = charSequenceList24.contains((java.lang.Object) charSequenceList31);
        java.lang.CharSequence charSequence36 = charSequenceList24.element();
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceList39.spliterator();
        boolean boolean42 = charSequenceList39.isEmpty();
        charSequenceList39.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str45 = charSequenceList39.toString();
        boolean boolean46 = charSequenceList24.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean48 = charSequenceList39.offer((java.lang.CharSequence) "");
        charSequenceList39.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean53 = charSequenceList39.add((java.lang.CharSequence) "");
        int int54 = charSequenceList9.lastIndexOf((java.lang.Object) boolean53);
        boolean boolean55 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList58 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58, charSequenceArray57);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList61 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean62 = charSequenceList58.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList61);
        java.lang.CharSequence[] charSequenceArray64 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList65 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList65, charSequenceArray64);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator67 = charSequenceList65.spliterator();
        int int68 = charSequenceList65.size();
        boolean boolean69 = charSequenceList58.contains((java.lang.Object) charSequenceList65);
        java.lang.CharSequence charSequence70 = charSequenceList58.element();
        java.lang.CharSequence[] charSequenceArray72 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList73 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList73, charSequenceArray72);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator75 = charSequenceList73.spliterator();
        boolean boolean76 = charSequenceList73.isEmpty();
        charSequenceList73.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str79 = charSequenceList73.toString();
        boolean boolean80 = charSequenceList58.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList73);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream81 = charSequenceList73.stream();
        boolean boolean82 = charSequenceList9.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList73);
        java.lang.CharSequence charSequence83 = charSequenceList9.getLast();
        java.lang.CharSequence charSequence84 = charSequenceList9.remove();
        java.lang.CharSequence charSequence85 = charSequenceList9.getLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "hi!" + "'", charSequence21, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "hi!" + "'", charSequence36, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[hi!, ]" + "'", str45, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(charSequenceArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + charSequence70 + "' != '" + "hi!" + "'", charSequence70, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[hi!, ]" + "'", str79, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(charSequenceStream81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertEquals("'" + charSequence83 + "' != '" + "" + "'", charSequence83, "");
        org.junit.Assert.assertEquals("'" + charSequence84 + "' != '" + "hi!" + "'", charSequence84, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence85 + "' != '" + "" + "'", charSequence85, "");
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList2.spliterator();
        boolean boolean12 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence13 = charSequenceList2.element();
        boolean boolean15 = charSequenceList2.add((java.lang.CharSequence) "[hi!]");
        java.lang.CharSequence charSequence16 = charSequenceList2.peek();
        java.lang.CharSequence charSequence17 = charSequenceList2.poll();
        java.lang.CharSequence charSequence18 = charSequenceList2.pop();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "hi!" + "'", charSequence18, "hi!");
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.pop();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean14 = charSequenceList2.offer((java.lang.CharSequence) "[hi!, ]");
        boolean boolean16 = charSequenceList2.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence17 = charSequenceList2.getFirst();
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        int int26 = charSequenceList20.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence27 = charSequenceList20.removeLast();
        java.lang.CharSequence charSequence28 = charSequenceList20.peekLast();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceList38.spliterator();
        int int41 = charSequenceList38.size();
        boolean boolean42 = charSequenceList31.contains((java.lang.Object) charSequenceList38);
        java.lang.CharSequence charSequence43 = charSequenceList31.element();
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceList46.spliterator();
        boolean boolean49 = charSequenceList46.isEmpty();
        charSequenceList46.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str52 = charSequenceList46.toString();
        boolean boolean53 = charSequenceList31.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceList46.stream();
        boolean boolean55 = charSequenceList20.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        boolean boolean56 = charSequenceList2.contains((java.lang.Object) charSequenceList20);
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor57 = charSequenceList20.listIterator();
        java.lang.CharSequence charSequence58 = charSequenceList20.removeLast();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence61 = charSequenceList20.set((int) 'a', (java.lang.CharSequence) "[hi!, hi!, hi!, []]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "[hi!, ]" + "'", charSequence17, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "hi!" + "'", charSequence43, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[hi!, ]" + "'", str52, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charSequenceItor57);
        org.junit.Assert.assertEquals("'" + charSequence58 + "' != '" + "" + "'", charSequence58, "");
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.pollLast();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor11 = charSequenceList2.iterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "" + "'", charSequence10, "");
        org.junit.Assert.assertNotNull(charSequenceItor11);
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        java.lang.CharSequence charSequence10 = charSequenceList2.peek();
        java.lang.CharSequence charSequence11 = null;
        charSequenceList2.push(charSequence11);
        java.lang.CharSequence charSequence13 = charSequenceList2.peekLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = charSequenceList5.clone();
        charSequenceList5.addLast((java.lang.CharSequence) "[hi!, ]");
        boolean boolean11 = charSequenceList5.offerLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence12 = charSequenceList5.pollFirst();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = charSequenceList15.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        int int25 = charSequenceList22.size();
        boolean boolean26 = charSequenceList15.contains((java.lang.Object) charSequenceList22);
        java.lang.CharSequence charSequence27 = charSequenceList15.element();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator32 = charSequenceList30.spliterator();
        boolean boolean33 = charSequenceList30.isEmpty();
        charSequenceList30.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str36 = charSequenceList30.toString();
        boolean boolean37 = charSequenceList15.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        boolean boolean39 = charSequenceList30.offer((java.lang.CharSequence) "");
        charSequenceList30.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList30.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        charSequenceList30.addLast((java.lang.CharSequence) "hi!");
        int int48 = charSequenceList5.indexOf((java.lang.Object) charSequenceList30);
        java.lang.CharSequence charSequence49 = charSequenceList5.getLast();
        boolean boolean51 = charSequenceList5.offerLast((java.lang.CharSequence) "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "[hi!, ]" + "'", charSequence12, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!, ]" + "'", str36, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "[hi!, ]" + "'", charSequence49, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceList17.getLast();
        boolean boolean29 = charSequenceList17.removeLastOccurrence((java.lang.Object) 100.0d);
        java.lang.CharSequence charSequence30 = charSequenceList17.getFirst();
        java.lang.CharSequence charSequence31 = charSequenceList17.peekLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream32 = charSequenceList17.stream();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "hi!" + "'", charSequence30, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "" + "'", charSequence31, "");
        org.junit.Assert.assertNotNull(charSequenceStream32);
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        java.util.LinkedList<java.lang.CharSequence> charSequenceList0 = new java.util.LinkedList<java.lang.CharSequence>();
        charSequenceList0.push((java.lang.CharSequence) "[hi!, [hi!, ]]");
        java.lang.CharSequence[] charSequenceArray4 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList5, charSequenceArray4);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList8 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean9 = charSequenceList5.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList8);
        java.lang.CharSequence charSequence10 = charSequenceList5.peek();
        boolean boolean12 = charSequenceList5.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean13 = charSequenceList0.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        org.junit.Assert.assertNotNull(charSequenceArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor5 = charSequenceList2.descendingIterator();
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList8 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = charSequenceList8.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence charSequence13 = charSequenceList8.peek();
        boolean boolean15 = charSequenceList8.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence charSequence16 = charSequenceList8.poll();
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList8);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceList20.spliterator();
        int int23 = charSequenceList20.size();
        java.lang.CharSequence charSequence24 = charSequenceList20.remove();
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator29 = charSequenceList27.spliterator();
        boolean boolean30 = charSequenceList27.isEmpty();
        charSequenceList27.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean34 = charSequenceList27.offerLast((java.lang.CharSequence) "");
        charSequenceList27.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence37 = charSequenceList27.removeLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor38 = charSequenceList27.listIterator();
        boolean boolean39 = charSequenceList20.removeLastOccurrence((java.lang.Object) charSequenceList27);
        boolean boolean40 = charSequenceList27.isEmpty();
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList43, charSequenceArray42);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator45 = charSequenceList43.spliterator();
        boolean boolean46 = charSequenceList43.isEmpty();
        charSequenceList43.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str49 = charSequenceList43.toString();
        java.lang.CharSequence charSequence50 = charSequenceList43.removeFirst();
        boolean boolean52 = charSequenceList43.removeLastOccurrence((java.lang.Object) (short) 100);
        boolean boolean53 = charSequenceList27.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        boolean boolean54 = charSequenceList8.remove((java.lang.Object) charSequenceList43);
        int int55 = charSequenceList2.indexOf((java.lang.Object) charSequenceList43);
        java.lang.CharSequence charSequence56 = charSequenceList43.remove();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertNotNull(charSequenceItor5);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "" + "'", charSequence24, "");
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "" + "'", charSequence37, "");
        org.junit.Assert.assertNotNull(charSequenceItor38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[hi!, ]" + "'", str49, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "hi!" + "'", charSequence50, "hi!");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence56 + "' != '" + "" + "'", charSequence56, "");
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceList24.spliterator();
        int int27 = charSequenceList24.size();
        boolean boolean28 = charSequenceList17.contains((java.lang.Object) charSequenceList24);
        java.lang.CharSequence charSequence29 = charSequenceList17.element();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator34 = charSequenceList32.spliterator();
        boolean boolean35 = charSequenceList32.isEmpty();
        charSequenceList32.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str38 = charSequenceList32.toString();
        boolean boolean39 = charSequenceList17.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor40 = charSequenceList17.descendingIterator();
        java.lang.CharSequence charSequence41 = charSequenceList17.peekFirst();
        int int42 = charSequenceList9.indexOf((java.lang.Object) charSequenceList17);
        charSequenceList9.addLast((java.lang.CharSequence) "hi!");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor45 = charSequenceList9.descendingIterator();
        java.lang.String str46 = charSequenceList9.toString();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[hi!, ]" + "'", str38, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceItor40);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(charSequenceItor45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[hi!]" + "'", str46, "[hi!]");
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        int int27 = charSequenceList2.indexOf((java.lang.Object) charSequence26);
        int int28 = charSequenceList2.size();
        java.lang.Object obj29 = charSequenceList2.clone();
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList2.add(7, (java.lang.CharSequence) "[hi!, [hi!, ]]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 7, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "[hi!]");
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean18 = charSequenceList15.isEmpty();
        java.lang.CharSequence charSequence19 = charSequenceList15.peekLast();
        java.lang.CharSequence charSequence20 = charSequenceList15.poll();
        boolean boolean21 = charSequenceList15.isEmpty();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor22 = charSequenceList15.listIterator();
        java.util.function.UnaryOperator<java.lang.CharSequence> charSequenceUnaryOperator23 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList15.replaceAll(charSequenceUnaryOperator23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(charSequence19);
        org.junit.Assert.assertNull(charSequence20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceItor22);
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean11 = charSequenceList2.offer((java.lang.CharSequence) "[hi!]");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor12 = charSequenceList2.iterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(charSequenceItor12);
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence[] charSequenceArray9 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList10 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList10, charSequenceArray9);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = charSequenceList10.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        int int20 = charSequenceList17.size();
        boolean boolean21 = charSequenceList10.contains((java.lang.Object) charSequenceList17);
        java.lang.CharSequence charSequence22 = charSequenceList10.element();
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator27 = charSequenceList25.spliterator();
        boolean boolean28 = charSequenceList25.isEmpty();
        charSequenceList25.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str31 = charSequenceList25.toString();
        boolean boolean32 = charSequenceList10.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        boolean boolean34 = charSequenceList25.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor35 = charSequenceList25.descendingIterator();
        boolean boolean36 = charSequenceList25.isEmpty();
        int int37 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList25);
        java.lang.CharSequence charSequence38 = charSequenceList25.pop();
        java.lang.CharSequence charSequence39 = charSequenceList25.removeLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[hi!, ]" + "'", str31, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceItor35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "hi!" + "'", charSequence38, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "" + "'", charSequence39, "");
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        charSequenceList17.addLast((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        java.util.LinkedList<java.lang.Comparable<java.lang.String>> strComparableList32 = new java.util.LinkedList<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = charSequenceList29.contains((java.lang.Object) strComparableList32);
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = charSequenceList36.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList43, charSequenceArray42);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator45 = charSequenceList43.spliterator();
        int int46 = charSequenceList43.size();
        boolean boolean47 = charSequenceList36.contains((java.lang.Object) charSequenceList43);
        java.lang.CharSequence charSequence48 = charSequenceList36.element();
        java.lang.CharSequence[] charSequenceArray50 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList51 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList51, charSequenceArray50);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList54 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean55 = charSequenceList51.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList54);
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList58 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58, charSequenceArray57);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator60 = charSequenceList58.spliterator();
        int int61 = charSequenceList58.size();
        boolean boolean62 = charSequenceList51.contains((java.lang.Object) charSequenceList58);
        java.lang.CharSequence charSequence63 = charSequenceList51.element();
        java.lang.CharSequence[] charSequenceArray65 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList66 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList66, charSequenceArray65);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator68 = charSequenceList66.spliterator();
        boolean boolean69 = charSequenceList66.isEmpty();
        charSequenceList66.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str72 = charSequenceList66.toString();
        boolean boolean73 = charSequenceList51.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList66);
        boolean boolean75 = charSequenceList66.offer((java.lang.CharSequence) "");
        charSequenceList66.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean80 = charSequenceList66.add((java.lang.CharSequence) "");
        int int81 = charSequenceList36.lastIndexOf((java.lang.Object) boolean80);
        boolean boolean82 = charSequenceList29.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36);
        java.lang.CharSequence[] charSequenceArray84 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList85 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList85, charSequenceArray84);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList88 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean89 = charSequenceList85.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList88);
        java.lang.CharSequence charSequence90 = charSequenceList85.peek();
        java.lang.CharSequence charSequence91 = charSequenceList85.pollFirst();
        charSequenceList85.addFirst((java.lang.CharSequence) "hi!");
        int int94 = charSequenceList36.indexOf((java.lang.Object) charSequenceList85);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream95 = charSequenceList36.stream();
        boolean boolean96 = charSequenceList17.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36);
        java.lang.CharSequence charSequence97 = charSequenceList36.poll();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "hi!" + "'", charSequence48, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + charSequence63 + "' != '" + "hi!" + "'", charSequence63, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[hi!, ]" + "'", str72, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(charSequenceArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + charSequence90 + "' != '" + "hi!" + "'", charSequence90, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence91 + "' != '" + "hi!" + "'", charSequence91, "hi!");
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertNotNull(charSequenceStream95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertEquals("'" + charSequence97 + "' != '" + "hi!" + "'", charSequence97, "hi!");
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean10 = charSequenceList2.contains((java.lang.Object) (-1.0d));
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        int int19 = charSequenceList13.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean21 = charSequenceList13.offerLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = charSequenceList24.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        boolean boolean30 = charSequenceList24.offerFirst((java.lang.CharSequence) "hi!");
        int int31 = charSequenceList13.lastIndexOf((java.lang.Object) "hi!");
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = charSequenceList34.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        java.lang.CharSequence[] charSequenceArray40 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList41 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList41, charSequenceArray40);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator43 = charSequenceList41.spliterator();
        int int44 = charSequenceList41.size();
        boolean boolean45 = charSequenceList34.contains((java.lang.Object) charSequenceList41);
        java.lang.CharSequence charSequence46 = charSequenceList34.element();
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator51 = charSequenceList49.spliterator();
        boolean boolean52 = charSequenceList49.isEmpty();
        charSequenceList49.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str55 = charSequenceList49.toString();
        boolean boolean56 = charSequenceList34.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49);
        boolean boolean58 = charSequenceList49.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor59 = charSequenceList49.descendingIterator();
        boolean boolean60 = charSequenceList13.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator61 = charSequenceList49.spliterator();
        charSequenceList49.clear();
        java.lang.CharSequence charSequence63 = charSequenceList49.pollFirst();
        int int64 = charSequenceList2.lastIndexOf((java.lang.Object) charSequence63);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charSequenceArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + charSequence46 + "' != '" + "hi!" + "'", charSequence46, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[hi!, ]" + "'", str55, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(charSequenceItor59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator61);
        org.junit.Assert.assertNull(charSequence63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        int int27 = charSequenceList2.indexOf((java.lang.Object) charSequence26);
        java.lang.String str28 = charSequenceList2.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.CharSequence> charSequenceList31 = charSequenceList2.subList((int) (byte) 10, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[hi!]" + "'", str28, "[hi!]");
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence charSequence9 = charSequenceList2.peek();
        int int11 = charSequenceList2.indexOf((java.lang.Object) (short) 1);
        java.lang.CharSequence charSequence12 = charSequenceList2.pollFirst();
        boolean boolean13 = charSequenceList2.isEmpty();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "hi!" + "'", charSequence12, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence charSequence17 = charSequenceList12.peek();
        java.lang.CharSequence charSequence18 = charSequenceList12.pollFirst();
        boolean boolean19 = charSequenceList2.contains((java.lang.Object) charSequence18);
        charSequenceList2.addLast((java.lang.CharSequence) "hi!");
        java.lang.Object obj22 = charSequenceList2.clone();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "hi!" + "'", charSequence18, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "[hi!, , , hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "[hi!, , , hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "[hi!, , , hi!]");
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceList12.spliterator();
        boolean boolean15 = charSequenceList12.isEmpty();
        java.lang.CharSequence charSequence16 = charSequenceList12.removeLast();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence charSequence24 = charSequenceList19.peek();
        boolean boolean26 = charSequenceList19.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = charSequenceList29.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        boolean boolean34 = charSequenceList19.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.CharSequence charSequence35 = charSequenceList19.pop();
        boolean boolean36 = charSequenceList12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = charSequenceList39.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        java.lang.Object obj44 = null;
        boolean boolean45 = charSequenceList39.equals(obj44);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence charSequence47 = charSequenceList39.peek();
        java.lang.CharSequence charSequence48 = charSequenceList39.remove();
        boolean boolean49 = charSequenceList19.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean50 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor51 = charSequenceList39.descendingIterator();
        java.util.Collection<java.lang.CharSequence> charSequenceCollection53 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean54 = charSequenceList39.addAll((-1), charSequenceCollection53);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[]" + "'", str8, "[]");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "hi!" + "'", charSequence24, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "hi!" + "'", charSequence47, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "hi!" + "'", charSequence48, "hi!");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(charSequenceItor51);
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence22 = charSequenceList17.peek();
        java.lang.CharSequence charSequence23 = charSequenceList17.pollFirst();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceList28.spliterator();
        boolean boolean31 = charSequenceList28.isEmpty();
        charSequenceList28.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str34 = charSequenceList28.toString();
        java.lang.CharSequence charSequence35 = charSequenceList28.removeFirst();
        boolean boolean37 = charSequenceList28.offer((java.lang.CharSequence) "hi!");
        int int38 = charSequenceList17.lastIndexOf((java.lang.Object) "hi!");
        int int39 = charSequenceList2.lastIndexOf((java.lang.Object) "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "hi!" + "'", charSequence23, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[hi!, ]" + "'", str34, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList2.spliterator();
        boolean boolean12 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence13 = charSequenceList2.element();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceList2.stream();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor15 = charSequenceList2.listIterator();
        java.lang.Object[] objArray16 = charSequenceList2.toArray();
        java.lang.CharSequence charSequence17 = charSequenceList2.pollLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!, hi!]");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceList11.spliterator();
        java.lang.CharSequence charSequence16 = charSequenceList11.element();
        java.lang.Object[] objArray17 = charSequenceList11.toArray();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean11 = charSequenceList2.offerLast((java.lang.CharSequence) "[[hi!, ]]");
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = charSequenceList14.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.Object obj19 = null;
        boolean boolean20 = charSequenceList14.equals(obj19);
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator25 = charSequenceList23.spliterator();
        boolean boolean26 = charSequenceList14.removeLastOccurrence((java.lang.Object) charSequenceList23);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = charSequenceList29.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceList36.spliterator();
        int int39 = charSequenceList36.size();
        boolean boolean40 = charSequenceList29.contains((java.lang.Object) charSequenceList36);
        java.lang.CharSequence charSequence41 = charSequenceList36.removeFirst();
        int int42 = charSequenceList23.indexOf((java.lang.Object) charSequence41);
        int int43 = charSequenceList2.lastIndexOf((java.lang.Object) charSequence41);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream44 = charSequenceList2.stream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "" + "'", charSequence41, "");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(charSequenceStream44);
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        java.lang.CharSequence charSequence27 = charSequenceList21.pollFirst();
        charSequenceList21.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = charSequenceList32.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        java.lang.Object obj37 = null;
        boolean boolean38 = charSequenceList32.equals(obj37);
        java.lang.CharSequence[] charSequenceArray40 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList41 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList41, charSequenceArray40);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator43 = charSequenceList41.spliterator();
        boolean boolean44 = charSequenceList32.removeLastOccurrence((java.lang.Object) charSequenceList41);
        charSequenceList32.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean47 = charSequenceList21.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        boolean boolean48 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        java.util.function.UnaryOperator<java.lang.CharSequence> charSequenceUnaryOperator49 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList2.replaceAll(charSequenceUnaryOperator49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charSequenceArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList2.removeLastOccurrence(obj9);
        boolean boolean12 = charSequenceList2.remove((java.lang.Object) (short) 10);
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = charSequenceList15.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList18);
        java.lang.Object obj20 = null;
        boolean boolean21 = charSequenceList15.equals(obj20);
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = charSequenceList24.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        java.lang.CharSequence charSequence29 = charSequenceList24.peek();
        java.lang.CharSequence charSequence30 = charSequenceList24.pollFirst();
        boolean boolean31 = charSequenceList15.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor32 = charSequenceList15.iterator();
        java.lang.CharSequence charSequence33 = charSequenceList15.pollFirst();
        int int34 = charSequenceList2.lastIndexOf((java.lang.Object) charSequence33);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "hi!" + "'", charSequence30, "hi!");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(charSequenceItor32);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "hi!" + "'", charSequence33, "hi!");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        int int27 = charSequenceList2.indexOf((java.lang.Object) charSequence26);
        int int28 = charSequenceList2.size();
        charSequenceList2.addFirst((java.lang.CharSequence) "");
        charSequenceList2.add((int) (byte) 0, (java.lang.CharSequence) "[hi!, ]");
        boolean boolean35 = charSequenceList2.offerLast((java.lang.CharSequence) "[]");
        java.lang.CharSequence charSequence36 = charSequenceList2.getLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "[]" + "'", charSequence36, "[]");
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceList11.spliterator();
        java.lang.CharSequence charSequence16 = charSequenceList11.element();
        boolean boolean18 = charSequenceList11.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence19 = charSequenceList11.pop();
        charSequenceList11.addLast((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor22 = charSequenceList11.iterator();
        boolean boolean24 = charSequenceList11.add((java.lang.CharSequence) "[[hi!, ], hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "[hi!, ]" + "'", charSequence19, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceItor22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence charSequence15 = charSequenceList9.pollLast();
        charSequenceList9.addLast((java.lang.CharSequence) "[hi!, [hi!, ]]");
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceList20.spliterator();
        java.util.LinkedList<java.lang.Comparable<java.lang.String>> strComparableList23 = new java.util.LinkedList<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = charSequenceList20.contains((java.lang.Object) strComparableList23);
        boolean boolean25 = charSequenceList9.equals((java.lang.Object) strComparableList23);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNull(charSequence15);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        charSequenceList2.clear();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.Object obj26 = charSequenceList24.clone();
        int int27 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList24);
        java.lang.Object obj28 = charSequenceList24.clone();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence charSequence36 = charSequenceList31.peek();
        java.lang.CharSequence charSequence37 = charSequenceList31.pollFirst();
        charSequenceList31.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42, charSequenceArray41);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = charSequenceList42.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        java.lang.Object obj47 = null;
        boolean boolean48 = charSequenceList42.equals(obj47);
        java.lang.CharSequence[] charSequenceArray50 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList51 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList51, charSequenceArray50);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator53 = charSequenceList51.spliterator();
        boolean boolean54 = charSequenceList42.removeLastOccurrence((java.lang.Object) charSequenceList51);
        java.lang.CharSequence charSequence55 = charSequenceList51.removeLast();
        boolean boolean56 = charSequenceList31.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList51);
        java.lang.CharSequence[] charSequenceArray58 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList59 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList59, charSequenceArray58);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList62 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean63 = charSequenceList59.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList62);
        java.lang.CharSequence[] charSequenceArray65 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList66 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList66, charSequenceArray65);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator68 = charSequenceList66.spliterator();
        int int69 = charSequenceList66.size();
        boolean boolean70 = charSequenceList59.contains((java.lang.Object) charSequenceList66);
        java.lang.CharSequence charSequence71 = charSequenceList59.element();
        java.lang.CharSequence[] charSequenceArray73 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList74 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList74, charSequenceArray73);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator76 = charSequenceList74.spliterator();
        boolean boolean77 = charSequenceList74.isEmpty();
        charSequenceList74.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str80 = charSequenceList74.toString();
        boolean boolean81 = charSequenceList59.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList74);
        boolean boolean83 = charSequenceList74.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor84 = charSequenceList74.descendingIterator();
        boolean boolean85 = charSequenceList51.remove((java.lang.Object) charSequenceItor84);
        int int86 = charSequenceList24.lastIndexOf((java.lang.Object) charSequenceList51);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence87 = charSequenceList24.pop();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "[]");
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "hi!" + "'", charSequence36, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "hi!" + "'", charSequence37, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(charSequenceArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + charSequence55 + "' != '" + "" + "'", charSequence55, "");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charSequenceArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(charSequenceArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + charSequence71 + "' != '" + "hi!" + "'", charSequence71, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[hi!, ]" + "'", str80, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(charSequenceItor84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence22 = charSequenceList17.peek();
        boolean boolean24 = charSequenceList17.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean25 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence26 = charSequenceList2.pop();
        java.lang.CharSequence charSequence27 = charSequenceList2.peekFirst();
        java.lang.CharSequence charSequence28 = charSequenceList2.peekFirst();
        java.lang.CharSequence charSequence29 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator34 = charSequenceList32.spliterator();
        boolean boolean35 = charSequenceList32.isEmpty();
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceList38.spliterator();
        boolean boolean41 = charSequenceList38.isEmpty();
        charSequenceList38.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean45 = charSequenceList38.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence46 = charSequenceList38.pop();
        charSequenceList38.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean50 = charSequenceList38.offer((java.lang.CharSequence) "[hi!, ]");
        boolean boolean52 = charSequenceList38.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence53 = charSequenceList38.getFirst();
        java.lang.CharSequence[] charSequenceArray55 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56, charSequenceArray55);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList59 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean60 = charSequenceList56.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList59);
        int int62 = charSequenceList56.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence63 = charSequenceList56.removeLast();
        java.lang.CharSequence charSequence64 = charSequenceList56.peekLast();
        java.lang.CharSequence[] charSequenceArray66 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList67 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList67, charSequenceArray66);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList70 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean71 = charSequenceList67.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList70);
        java.lang.CharSequence[] charSequenceArray73 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList74 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList74, charSequenceArray73);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator76 = charSequenceList74.spliterator();
        int int77 = charSequenceList74.size();
        boolean boolean78 = charSequenceList67.contains((java.lang.Object) charSequenceList74);
        java.lang.CharSequence charSequence79 = charSequenceList67.element();
        java.lang.CharSequence[] charSequenceArray81 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList82 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList82, charSequenceArray81);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator84 = charSequenceList82.spliterator();
        boolean boolean85 = charSequenceList82.isEmpty();
        charSequenceList82.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str88 = charSequenceList82.toString();
        boolean boolean89 = charSequenceList67.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList82);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream90 = charSequenceList82.stream();
        boolean boolean91 = charSequenceList56.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList82);
        java.lang.CharSequence charSequence92 = charSequenceList56.remove();
        boolean boolean93 = charSequenceList38.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56);
        int int94 = charSequenceList32.lastIndexOf((java.lang.Object) charSequenceList56);
        boolean boolean95 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.Object obj96 = null;
        int int97 = charSequenceList32.lastIndexOf(obj96);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNull(charSequence27);
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNull(charSequence29);
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + charSequence46 + "' != '" + "hi!" + "'", charSequence46, "hi!");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "[hi!, ]" + "'", charSequence53, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence63 + "' != '" + "hi!" + "'", charSequence63, "hi!");
        org.junit.Assert.assertNull(charSequence64);
        org.junit.Assert.assertNotNull(charSequenceArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(charSequenceArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + charSequence79 + "' != '" + "hi!" + "'", charSequence79, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[hi!, ]" + "'", str88, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(charSequenceStream90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertEquals("'" + charSequence92 + "' != '" + "hi!" + "'", charSequence92, "hi!");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-1) + "'", int97 == (-1));
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceList11.spliterator();
        java.lang.CharSequence charSequence16 = charSequenceList11.removeLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence22 = charSequenceList17.peek();
        boolean boolean24 = charSequenceList17.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean25 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence26 = charSequenceList2.pop();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = charSequenceList29.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.CharSequence charSequence34 = charSequenceList29.peek();
        java.lang.CharSequence charSequence35 = charSequenceList29.pollFirst();
        charSequenceList29.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = charSequenceList40.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        java.lang.Object obj45 = null;
        boolean boolean46 = charSequenceList40.equals(obj45);
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator51 = charSequenceList49.spliterator();
        boolean boolean52 = charSequenceList40.removeLastOccurrence((java.lang.Object) charSequenceList49);
        charSequenceList40.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean55 = charSequenceList29.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        boolean boolean56 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        java.lang.Object obj57 = charSequenceList2.clone();
        java.lang.CharSequence[] charSequenceArray59 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList60 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList60, charSequenceArray59);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList63 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean64 = charSequenceList60.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList63);
        java.lang.CharSequence charSequence65 = charSequenceList60.peek();
        java.lang.CharSequence charSequence66 = charSequenceList60.pollFirst();
        charSequenceList60.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList71 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList71, charSequenceArray70);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList74 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean75 = charSequenceList71.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList74);
        java.lang.Object obj76 = null;
        boolean boolean77 = charSequenceList71.equals(obj76);
        java.lang.CharSequence[] charSequenceArray79 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList80 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList80, charSequenceArray79);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator82 = charSequenceList80.spliterator();
        boolean boolean83 = charSequenceList71.removeLastOccurrence((java.lang.Object) charSequenceList80);
        charSequenceList71.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean86 = charSequenceList60.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList71);
        java.lang.CharSequence charSequence87 = charSequenceList71.pollLast();
        boolean boolean88 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList71);
        java.lang.CharSequence charSequence89 = charSequenceList2.pollFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "[]");
        org.junit.Assert.assertNotNull(charSequenceArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + charSequence65 + "' != '" + "hi!" + "'", charSequence65, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence66 + "' != '" + "hi!" + "'", charSequence66, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(charSequenceArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertEquals("'" + charSequence87 + "' != '" + "hi!" + "'", charSequence87, "hi!");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertEquals("'" + charSequence89 + "' != '" + "hi!" + "'", charSequence89, "hi!");
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceList12.spliterator();
        boolean boolean15 = charSequenceList12.isEmpty();
        java.lang.CharSequence charSequence16 = charSequenceList12.removeLast();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence charSequence24 = charSequenceList19.peek();
        boolean boolean26 = charSequenceList19.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = charSequenceList29.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        boolean boolean34 = charSequenceList19.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.CharSequence charSequence35 = charSequenceList19.pop();
        boolean boolean36 = charSequenceList12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = charSequenceList39.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        java.lang.Object obj44 = null;
        boolean boolean45 = charSequenceList39.equals(obj44);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence charSequence47 = charSequenceList39.peek();
        java.lang.CharSequence charSequence48 = charSequenceList39.remove();
        boolean boolean49 = charSequenceList19.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean50 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence charSequence51 = charSequenceList39.peekLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[]" + "'", str8, "[]");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "hi!" + "'", charSequence24, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "hi!" + "'", charSequence47, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "hi!" + "'", charSequence48, "hi!");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(charSequence51);
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence charSequence10 = charSequenceList2.poll();
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = charSequenceList14.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceList21.spliterator();
        int int24 = charSequenceList21.size();
        boolean boolean25 = charSequenceList14.contains((java.lang.Object) charSequenceList21);
        java.lang.CharSequence charSequence26 = charSequenceList14.element();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        boolean boolean32 = charSequenceList29.isEmpty();
        charSequenceList29.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str35 = charSequenceList29.toString();
        boolean boolean36 = charSequenceList14.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        charSequenceList29.addLast((java.lang.CharSequence) "");
        boolean boolean39 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceList2.spliterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[hi!, ]" + "'", str35, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence charSequence15 = charSequenceList2.peekLast();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.CharSequence> charSequenceList18 = charSequenceList2.subList((int) (byte) 100, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "hi!" + "'", charSequence15, "hi!");
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList11.isEmpty();
        charSequenceList11.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean18 = charSequenceList11.offerLast((java.lang.CharSequence) "");
        charSequenceList11.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean21 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence charSequence22 = charSequenceList2.peek();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence23 = charSequenceList2.getFirst();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(charSequence22);
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList11.isEmpty();
        charSequenceList11.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean18 = charSequenceList11.offerLast((java.lang.CharSequence) "");
        charSequenceList11.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean21 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence charSequence22 = charSequenceList11.removeFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "[hi!, ]" + "'", charSequence22, "[hi!, ]");
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor5 = charSequenceList2.descendingIterator();
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList8 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = charSequenceList8.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        int int14 = charSequenceList8.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence15 = charSequenceList8.removeLast();
        java.lang.CharSequence charSequence16 = charSequenceList8.peekLast();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList26 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26, charSequenceArray25);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator28 = charSequenceList26.spliterator();
        int int29 = charSequenceList26.size();
        boolean boolean30 = charSequenceList19.contains((java.lang.Object) charSequenceList26);
        java.lang.CharSequence charSequence31 = charSequenceList19.element();
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceList34.spliterator();
        boolean boolean37 = charSequenceList34.isEmpty();
        charSequenceList34.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str40 = charSequenceList34.toString();
        boolean boolean41 = charSequenceList19.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream42 = charSequenceList34.stream();
        boolean boolean43 = charSequenceList8.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence charSequence44 = charSequenceList8.remove();
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "", "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48, charSequenceArray47);
        java.lang.CharSequence charSequence50 = charSequenceList48.pollFirst();
        boolean boolean51 = charSequenceList8.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48);
        int int52 = charSequenceList2.indexOf((java.lang.Object) boolean51);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence54 = charSequenceList2.remove(7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 7, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertNotNull(charSequenceItor5);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "hi!" + "'", charSequence15, "hi!");
        org.junit.Assert.assertNull(charSequence16);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "hi!" + "'", charSequence31, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[hi!, ]" + "'", str40, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(charSequenceStream42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "hi!" + "'", charSequence44, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "" + "'", charSequence50, "");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence charSequence10 = charSequenceList2.poll();
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = charSequenceList14.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceList21.spliterator();
        int int24 = charSequenceList21.size();
        boolean boolean25 = charSequenceList14.contains((java.lang.Object) charSequenceList21);
        java.lang.CharSequence charSequence26 = charSequenceList14.element();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        boolean boolean32 = charSequenceList29.isEmpty();
        charSequenceList29.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str35 = charSequenceList29.toString();
        boolean boolean36 = charSequenceList14.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        charSequenceList29.addLast((java.lang.CharSequence) "");
        boolean boolean39 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        boolean boolean40 = charSequenceList29.isEmpty();
        java.lang.CharSequence charSequence41 = charSequenceList29.pollFirst();
        boolean boolean43 = charSequenceList29.offerLast((java.lang.CharSequence) "[]");
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = charSequenceList46.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList49);
        java.lang.CharSequence charSequence51 = charSequenceList46.peek();
        boolean boolean53 = charSequenceList46.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator54 = charSequenceList46.spliterator();
        boolean boolean56 = charSequenceList46.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence57 = charSequenceList46.element();
        java.lang.CharSequence charSequence58 = charSequenceList46.peekLast();
        int int59 = charSequenceList29.indexOf((java.lang.Object) charSequenceList46);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[hi!, ]" + "'", str35, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "hi!" + "'", charSequence51, "hi!");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + charSequence57 + "' != '" + "hi!" + "'", charSequence57, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence58 + "' != '" + "hi!" + "'", charSequence58, "hi!");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList8 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList8.spliterator();
        int int11 = charSequenceList8.size();
        boolean boolean12 = charSequenceList2.contains((java.lang.Object) charSequenceList8);
        java.lang.CharSequence charSequence13 = charSequenceList2.getLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList7 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList10 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean11 = charSequenceList7.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList10);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceList14.spliterator();
        int int17 = charSequenceList14.size();
        boolean boolean18 = charSequenceList7.contains((java.lang.Object) charSequenceList14);
        java.lang.CharSequence charSequence19 = charSequenceList7.element();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        boolean boolean25 = charSequenceList22.isEmpty();
        charSequenceList22.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str28 = charSequenceList22.toString();
        boolean boolean29 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        boolean boolean31 = charSequenceList22.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor32 = charSequenceList22.descendingIterator();
        boolean boolean33 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceItor32);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.CharSequence> charSequenceList36 = charSequenceList2.subList((int) (short) 0, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 97");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "hi!" + "'", charSequence19, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[hi!, ]" + "'", str28, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceItor32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList13.equals(obj18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        boolean boolean25 = charSequenceList13.removeLastOccurrence((java.lang.Object) charSequenceList22);
        charSequenceList13.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean28 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        java.util.LinkedList<java.io.Serializable> serializableList29 = new java.util.LinkedList<java.io.Serializable>();
        boolean boolean30 = charSequenceList2.equals((java.lang.Object) serializableList29);
        java.lang.CharSequence charSequence32 = charSequenceList2.get(0);
        java.lang.CharSequence charSequence33 = charSequenceList2.removeFirst();
        java.lang.CharSequence charSequence34 = charSequenceList2.removeFirst();
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator39 = charSequenceList37.spliterator();
        java.util.LinkedList<java.lang.Comparable<java.lang.String>> strComparableList40 = new java.util.LinkedList<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = charSequenceList37.contains((java.lang.Object) strComparableList40);
        java.lang.CharSequence[] charSequenceArray43 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList44 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList44, charSequenceArray43);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = charSequenceList44.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList47);
        java.lang.CharSequence[] charSequenceArray50 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList51 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList51, charSequenceArray50);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator53 = charSequenceList51.spliterator();
        int int54 = charSequenceList51.size();
        boolean boolean55 = charSequenceList44.contains((java.lang.Object) charSequenceList51);
        java.lang.CharSequence charSequence56 = charSequenceList44.element();
        java.lang.CharSequence[] charSequenceArray58 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList59 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList59, charSequenceArray58);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList62 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean63 = charSequenceList59.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList62);
        java.lang.CharSequence[] charSequenceArray65 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList66 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList66, charSequenceArray65);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator68 = charSequenceList66.spliterator();
        int int69 = charSequenceList66.size();
        boolean boolean70 = charSequenceList59.contains((java.lang.Object) charSequenceList66);
        java.lang.CharSequence charSequence71 = charSequenceList59.element();
        java.lang.CharSequence[] charSequenceArray73 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList74 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList74, charSequenceArray73);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator76 = charSequenceList74.spliterator();
        boolean boolean77 = charSequenceList74.isEmpty();
        charSequenceList74.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str80 = charSequenceList74.toString();
        boolean boolean81 = charSequenceList59.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList74);
        boolean boolean83 = charSequenceList74.offer((java.lang.CharSequence) "");
        charSequenceList74.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean88 = charSequenceList74.add((java.lang.CharSequence) "");
        int int89 = charSequenceList44.lastIndexOf((java.lang.Object) boolean88);
        boolean boolean90 = charSequenceList37.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList44);
        boolean boolean92 = charSequenceList44.remove((java.lang.Object) (short) 100);
        boolean boolean93 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList44);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "hi!" + "'", charSequence32, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "hi!" + "'", charSequence33, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(charSequenceArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + charSequence56 + "' != '" + "hi!" + "'", charSequence56, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(charSequenceArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + charSequence71 + "' != '" + "hi!" + "'", charSequence71, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[hi!, ]" + "'", str80, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList13.equals(obj18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        boolean boolean25 = charSequenceList13.removeLastOccurrence((java.lang.Object) charSequenceList22);
        charSequenceList13.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean28 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        java.lang.CharSequence charSequence29 = charSequenceList2.remove();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence31 = charSequenceList2.get(2);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 2, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean10 = charSequenceList2.offerLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.String str11 = charSequenceList2.toString();
        java.lang.CharSequence charSequence12 = charSequenceList2.pop();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = charSequenceList15.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList18);
        java.lang.CharSequence charSequence20 = charSequenceList15.peek();
        boolean boolean22 = charSequenceList15.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = charSequenceList25.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        boolean boolean30 = charSequenceList15.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence charSequence31 = charSequenceList28.poll();
        charSequenceList28.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.Object obj34 = charSequenceList28.clone();
        java.lang.String str35 = charSequenceList28.toString();
        java.lang.CharSequence charSequence37 = charSequenceList28.get((int) (short) 0);
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = charSequenceList40.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        java.lang.Object obj45 = null;
        boolean boolean46 = charSequenceList40.equals(obj45);
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = charSequenceList49.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        java.lang.CharSequence charSequence54 = charSequenceList49.peek();
        boolean boolean56 = charSequenceList49.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray58 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList59 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList59, charSequenceArray58);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList62 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean63 = charSequenceList59.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList62);
        boolean boolean64 = charSequenceList49.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList62);
        java.lang.CharSequence charSequence65 = charSequenceList62.poll();
        boolean boolean66 = charSequenceList40.remove((java.lang.Object) charSequenceList62);
        int int67 = charSequenceList28.indexOf((java.lang.Object) boolean66);
        boolean boolean68 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList69 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        java.lang.CharSequence charSequence70 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray72 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList73 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList73, charSequenceArray72);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList76 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean77 = charSequenceList73.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList76);
        java.lang.CharSequence[] charSequenceArray79 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList80 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList80, charSequenceArray79);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator82 = charSequenceList80.spliterator();
        int int83 = charSequenceList80.size();
        boolean boolean84 = charSequenceList73.contains((java.lang.Object) charSequenceList80);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream85 = charSequenceList73.stream();
        java.lang.CharSequence charSequence86 = charSequenceList73.getFirst();
        boolean boolean87 = charSequenceList2.remove((java.lang.Object) charSequenceList73);
        charSequenceList73.push((java.lang.CharSequence) "[, ]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[hi!, [hi!, ]]" + "'", str11, "[hi!, [hi!, ]]");
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "hi!" + "'", charSequence12, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "hi!" + "'", charSequence20, "hi!");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(charSequence31);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "[[hi!, ]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "[[hi!, ]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "[[hi!, ]]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[[hi!, ]]" + "'", str35, "[[hi!, ]]");
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "[hi!, ]" + "'", charSequence37, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "hi!" + "'", charSequence54, "hi!");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charSequenceArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(charSequence65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertEquals("'" + charSequence70 + "' != '" + "[hi!, ]" + "'", charSequence70, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(charSequenceArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(charSequenceStream85);
        org.junit.Assert.assertEquals("'" + charSequence86 + "' != '" + "hi!" + "'", charSequence86, "hi!");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceList17.poll();
        java.lang.CharSequence charSequence28 = charSequenceList17.getFirst();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence31 = charSequenceList17.set((int) (byte) -1, (java.lang.CharSequence) "[[hi!, ]]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.pop();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence13 = charSequenceList2.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceList2.parallelStream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream14);
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence charSequence9 = charSequenceList2.removeFirst();
        boolean boolean11 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = charSequenceList14.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceList21.spliterator();
        int int24 = charSequenceList21.size();
        boolean boolean25 = charSequenceList14.contains((java.lang.Object) charSequenceList21);
        java.lang.CharSequence charSequence26 = charSequenceList14.element();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        boolean boolean32 = charSequenceList29.isEmpty();
        charSequenceList29.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str35 = charSequenceList29.toString();
        boolean boolean36 = charSequenceList14.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        boolean boolean38 = charSequenceList29.offer((java.lang.CharSequence) "");
        charSequenceList29.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList29.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        charSequenceList29.addLast((java.lang.CharSequence) "hi!");
        boolean boolean47 = charSequenceList2.removeFirstOccurrence((java.lang.Object) "hi!");
        int int48 = charSequenceList2.size();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream49 = charSequenceList2.stream();
        java.lang.CharSequence charSequence50 = charSequenceList2.element();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[hi!, ]" + "'", str35, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(charSequenceStream49);
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "" + "'", charSequence50, "");
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence charSequence9 = charSequenceList2.removeFirst();
        boolean boolean11 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = charSequenceList14.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceList21.spliterator();
        int int24 = charSequenceList21.size();
        boolean boolean25 = charSequenceList14.contains((java.lang.Object) charSequenceList21);
        java.lang.CharSequence charSequence26 = charSequenceList14.element();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        boolean boolean32 = charSequenceList29.isEmpty();
        charSequenceList29.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str35 = charSequenceList29.toString();
        boolean boolean36 = charSequenceList14.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        boolean boolean38 = charSequenceList29.offer((java.lang.CharSequence) "");
        charSequenceList29.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList29.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        charSequenceList29.addLast((java.lang.CharSequence) "hi!");
        boolean boolean47 = charSequenceList2.removeFirstOccurrence((java.lang.Object) "hi!");
        boolean boolean49 = charSequenceList2.offerLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence50 = charSequenceList2.getFirst();
        java.lang.CharSequence charSequence51 = charSequenceList2.poll();
        java.lang.CharSequence charSequence52 = charSequenceList2.removeLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[hi!, ]" + "'", str35, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "" + "'", charSequence50, "");
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "" + "'", charSequence51, "");
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "[hi!, ]" + "'", charSequence52, "[hi!, ]");
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        charSequenceList2.clear();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.Object obj26 = charSequenceList24.clone();
        int int27 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList24);
        java.lang.CharSequence charSequence28 = charSequenceList2.peekLast();
        java.lang.CharSequence charSequence29 = charSequenceList2.poll();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNull(charSequence29);
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence charSequence9 = charSequenceList2.removeFirst();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream10 = charSequenceList2.parallelStream();
        java.lang.CharSequence charSequence11 = charSequenceList2.getFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream10);
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "" + "'", charSequence11, "");
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceList11.spliterator();
        java.lang.CharSequence charSequence16 = charSequenceList11.element();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence18 = charSequenceList11.get((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor27 = charSequenceList17.listIterator();
        java.lang.CharSequence charSequence28 = charSequenceList17.poll();
        java.lang.CharSequence charSequence29 = charSequenceList17.peek();
        java.lang.CharSequence charSequence30 = charSequenceList17.remove();
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList33, charSequenceArray32);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator35 = charSequenceList33.spliterator();
        boolean boolean36 = charSequenceList33.isEmpty();
        charSequenceList33.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str39 = charSequenceList33.toString();
        java.lang.CharSequence charSequence40 = charSequenceList33.removeFirst();
        boolean boolean42 = charSequenceList33.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean49 = charSequenceList45.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList48);
        java.lang.CharSequence[] charSequenceArray51 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52, charSequenceArray51);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator54 = charSequenceList52.spliterator();
        int int55 = charSequenceList52.size();
        boolean boolean56 = charSequenceList45.contains((java.lang.Object) charSequenceList52);
        java.lang.CharSequence charSequence57 = charSequenceList45.element();
        java.lang.CharSequence[] charSequenceArray59 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList60 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList60, charSequenceArray59);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator62 = charSequenceList60.spliterator();
        boolean boolean63 = charSequenceList60.isEmpty();
        charSequenceList60.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str66 = charSequenceList60.toString();
        boolean boolean67 = charSequenceList45.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList60);
        boolean boolean69 = charSequenceList60.offer((java.lang.CharSequence) "");
        charSequenceList60.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList60.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        charSequenceList60.addLast((java.lang.CharSequence) "hi!");
        boolean boolean78 = charSequenceList33.removeFirstOccurrence((java.lang.Object) "hi!");
        boolean boolean80 = charSequenceList33.offerLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence81 = charSequenceList33.pollFirst();
        java.lang.CharSequence charSequence82 = charSequenceList33.peekLast();
        boolean boolean83 = charSequenceList17.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.CharSequence> charSequenceItor85 = charSequenceList17.listIterator(3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 3, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceItor27);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "hi!" + "'", charSequence28, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "" + "'", charSequence29, "");
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "" + "'", charSequence30, "");
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[hi!, ]" + "'", str39, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "hi!" + "'", charSequence40, "hi!");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(charSequenceArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + charSequence57 + "' != '" + "hi!" + "'", charSequence57, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[hi!, ]" + "'", str66, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertEquals("'" + charSequence81 + "' != '" + "" + "'", charSequence81, "");
        org.junit.Assert.assertEquals("'" + charSequence82 + "' != '" + "[hi!, ]" + "'", charSequence82, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence9 = charSequenceList2.removeLast();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator21 = charSequenceList19.spliterator();
        int int22 = charSequenceList19.size();
        boolean boolean23 = charSequenceList12.contains((java.lang.Object) charSequenceList19);
        java.lang.CharSequence charSequence24 = charSequenceList12.element();
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator29 = charSequenceList27.spliterator();
        boolean boolean30 = charSequenceList27.isEmpty();
        charSequenceList27.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str33 = charSequenceList27.toString();
        boolean boolean34 = charSequenceList12.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        boolean boolean36 = charSequenceList27.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence37 = charSequenceList27.getLast();
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator42 = charSequenceList40.spliterator();
        boolean boolean43 = charSequenceList40.isEmpty();
        charSequenceList40.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean47 = charSequenceList40.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence48 = charSequenceList40.pop();
        charSequenceList40.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence53 = charSequenceList40.set((int) (short) 0, (java.lang.CharSequence) "");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceList40.parallelStream();
        boolean boolean55 = charSequenceList27.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        int int56 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList40);
        java.util.function.UnaryOperator<java.lang.CharSequence> charSequenceUnaryOperator57 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList40.replaceAll(charSequenceUnaryOperator57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "hi!" + "'", charSequence24, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[hi!, ]" + "'", str33, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "" + "'", charSequence37, "");
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "hi!" + "'", charSequence48, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "hi!" + "'", charSequence53, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence charSequence15 = charSequenceList9.pollLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor16 = charSequenceList9.listIterator();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator21 = charSequenceList19.spliterator();
        int int22 = charSequenceList19.size();
        java.lang.CharSequence charSequence23 = charSequenceList19.remove();
        boolean boolean24 = charSequenceList9.contains((java.lang.Object) charSequence23);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence26 = charSequenceList9.get((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNull(charSequence15);
        org.junit.Assert.assertNotNull(charSequenceItor16);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "" + "'", charSequence23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor25 = charSequenceList2.descendingIterator();
        java.lang.CharSequence charSequence26 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.CharSequence charSequence35 = charSequenceList30.peek();
        boolean boolean37 = charSequenceList30.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceList30.spliterator();
        boolean boolean40 = charSequenceList30.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence41 = charSequenceList30.element();
        java.lang.CharSequence charSequence42 = charSequenceList30.peekLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor43 = charSequenceList30.listIterator();
        charSequenceList30.addFirst((java.lang.CharSequence) "[hi!]");
        boolean boolean46 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = charSequenceList49.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        java.lang.CharSequence[] charSequenceArray55 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56, charSequenceArray55);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator58 = charSequenceList56.spliterator();
        int int59 = charSequenceList56.size();
        boolean boolean60 = charSequenceList49.contains((java.lang.Object) charSequenceList56);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream61 = charSequenceList49.stream();
        java.lang.CharSequence charSequence63 = null;
        charSequenceList49.add(0, charSequence63);
        java.lang.CharSequence charSequence65 = charSequenceList49.removeFirst();
        java.lang.CharSequence charSequence66 = charSequenceList49.peekFirst();
        boolean boolean67 = charSequenceList30.removeFirstOccurrence((java.lang.Object) charSequenceList49);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator68 = charSequenceList30.spliterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceItor25);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertNotNull(charSequenceItor43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charSequenceArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(charSequenceStream61);
        org.junit.Assert.assertNull(charSequence65);
        org.junit.Assert.assertEquals("'" + charSequence66 + "' != '" + "hi!" + "'", charSequence66, "hi!");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator68);
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        charSequenceList5.push((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        boolean boolean18 = charSequenceList11.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        boolean boolean26 = charSequenceList11.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        boolean boolean27 = charSequenceList24.isEmpty();
        java.lang.CharSequence charSequence28 = charSequenceList24.peekLast();
        java.lang.CharSequence charSequence29 = charSequenceList24.poll();
        java.lang.String str30 = charSequenceList24.toString();
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList33, charSequenceArray32);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean37 = charSequenceList33.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList36);
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator42 = charSequenceList40.spliterator();
        int int43 = charSequenceList40.size();
        boolean boolean44 = charSequenceList33.contains((java.lang.Object) charSequenceList40);
        java.lang.CharSequence charSequence45 = charSequenceList33.element();
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48, charSequenceArray47);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceList48.spliterator();
        boolean boolean51 = charSequenceList48.isEmpty();
        charSequenceList48.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str54 = charSequenceList48.toString();
        boolean boolean55 = charSequenceList33.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48);
        boolean boolean57 = charSequenceList48.offer((java.lang.CharSequence) "");
        charSequenceList48.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList48.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        boolean boolean65 = charSequenceList48.offerFirst((java.lang.CharSequence) "hi!");
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator66 = charSequenceList48.spliterator();
        boolean boolean67 = charSequenceList24.removeFirstOccurrence((java.lang.Object) charSequenceSpliterator66);
        java.lang.Object[] objArray68 = charSequenceList24.toArray();
        boolean boolean69 = charSequenceList5.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.String str70 = charSequenceList24.toString();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNull(charSequence29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[]" + "'", str30, "[]");
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + charSequence45 + "' != '" + "hi!" + "'", charSequence45, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[hi!, ]" + "'", str54, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[]" + "'", str70, "[]");
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceList11.spliterator();
        java.lang.CharSequence charSequence16 = charSequenceList11.element();
        boolean boolean18 = charSequenceList11.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceList28.spliterator();
        int int31 = charSequenceList28.size();
        boolean boolean32 = charSequenceList21.contains((java.lang.Object) charSequenceList28);
        java.lang.CharSequence charSequence33 = charSequenceList21.element();
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceList36.spliterator();
        boolean boolean39 = charSequenceList36.isEmpty();
        charSequenceList36.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str42 = charSequenceList36.toString();
        boolean boolean43 = charSequenceList21.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36);
        boolean boolean45 = charSequenceList36.offer((java.lang.CharSequence) "");
        charSequenceList36.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean50 = charSequenceList36.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence51 = charSequenceList36.poll();
        java.lang.CharSequence charSequence52 = charSequenceList36.peek();
        int int53 = charSequenceList11.indexOf((java.lang.Object) charSequenceList36);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceList11.stream();
        java.lang.CharSequence charSequence55 = charSequenceList11.getFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "hi!" + "'", charSequence33, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[hi!, ]" + "'", str42, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "hi!" + "'", charSequence51, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "hi!" + "'", charSequence52, "hi!");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertEquals("'" + charSequence55 + "' != '" + "[hi!, ]" + "'", charSequence55, "[hi!, ]");
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        int int27 = charSequenceList2.indexOf((java.lang.Object) charSequence26);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.CharSequence> charSequenceList30 = charSequenceList2.subList((int) (short) 1, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean10 = charSequenceList2.offerLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        boolean boolean19 = charSequenceList13.offerFirst((java.lang.CharSequence) "hi!");
        int int20 = charSequenceList2.lastIndexOf((java.lang.Object) "hi!");
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList26 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean27 = charSequenceList23.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList26);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator32 = charSequenceList30.spliterator();
        int int33 = charSequenceList30.size();
        boolean boolean34 = charSequenceList23.contains((java.lang.Object) charSequenceList30);
        java.lang.CharSequence charSequence35 = charSequenceList23.element();
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceList38.spliterator();
        boolean boolean41 = charSequenceList38.isEmpty();
        charSequenceList38.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str44 = charSequenceList38.toString();
        boolean boolean45 = charSequenceList23.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        boolean boolean47 = charSequenceList38.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor48 = charSequenceList38.descendingIterator();
        boolean boolean49 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        java.lang.CharSequence charSequence51 = charSequenceList38.get(2);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream52 = charSequenceList38.stream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[hi!, ]" + "'", str44, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceItor48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "" + "'", charSequence51, "");
        org.junit.Assert.assertNotNull(charSequenceStream52);
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        charSequenceList2.clear();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.Object obj26 = charSequenceList24.clone();
        int int27 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList24);
        java.lang.CharSequence charSequence28 = charSequenceList24.peekFirst();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence29 = charSequenceList24.removeLast();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(charSequence28);
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        int int27 = charSequenceList2.indexOf((java.lang.Object) charSequence26);
        int int28 = charSequenceList2.size();
        java.lang.CharSequence charSequence29 = charSequenceList2.pop();
        charSequenceList2.push((java.lang.CharSequence) "[hi!]");
        charSequenceList2.addFirst((java.lang.CharSequence) "[hi!]");
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = charSequenceList36.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList43, charSequenceArray42);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator45 = charSequenceList43.spliterator();
        int int46 = charSequenceList43.size();
        boolean boolean47 = charSequenceList36.contains((java.lang.Object) charSequenceList43);
        java.lang.CharSequence charSequence48 = charSequenceList36.element();
        java.lang.CharSequence[] charSequenceArray50 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList51 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList51, charSequenceArray50);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator53 = charSequenceList51.spliterator();
        boolean boolean54 = charSequenceList51.isEmpty();
        charSequenceList51.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str57 = charSequenceList51.toString();
        boolean boolean58 = charSequenceList36.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList51);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor59 = charSequenceList36.descendingIterator();
        boolean boolean60 = charSequenceList2.contains((java.lang.Object) charSequenceList36);
        boolean boolean62 = charSequenceList2.offerFirst((java.lang.CharSequence) "[]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "hi!" + "'", charSequence48, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[hi!, ]" + "'", str57, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(charSequenceItor59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        int int10 = charSequenceList2.size();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean18 = charSequenceList15.isEmpty();
        java.lang.CharSequence charSequence19 = charSequenceList15.peekLast();
        java.lang.CharSequence charSequence20 = charSequenceList15.poll();
        java.lang.String str21 = charSequenceList15.toString();
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = charSequenceList24.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        java.lang.CharSequence charSequence29 = charSequenceList24.peek();
        boolean boolean31 = charSequenceList24.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = charSequenceList34.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        boolean boolean39 = charSequenceList24.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        java.lang.CharSequence charSequence40 = charSequenceList37.poll();
        charSequenceList37.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.Object obj43 = charSequenceList37.clone();
        java.lang.String str44 = charSequenceList37.toString();
        boolean boolean45 = charSequenceList15.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(charSequence19);
        org.junit.Assert.assertNull(charSequence20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[]" + "'", str21, "[]");
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(charSequence40);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "[[hi!, ]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "[[hi!, ]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "[[hi!, ]]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[[hi!, ]]" + "'", str44, "[[hi!, ]]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        java.lang.CharSequence charSequence10 = charSequenceList2.peek();
        java.lang.CharSequence charSequence11 = charSequenceList2.remove();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.CharSequence> charSequenceItor13 = charSequenceList2.listIterator((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "hi!" + "'", charSequence11, "hi!");
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        java.lang.CharSequence charSequence6 = charSequenceList2.remove();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        boolean boolean12 = charSequenceList9.isEmpty();
        charSequenceList9.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean16 = charSequenceList9.offerLast((java.lang.CharSequence) "");
        charSequenceList9.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence19 = charSequenceList9.removeLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor20 = charSequenceList9.listIterator();
        boolean boolean21 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList9);
        boolean boolean22 = charSequenceList9.isEmpty();
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = charSequenceList25.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence charSequence30 = charSequenceList25.peek();
        java.lang.CharSequence charSequence31 = charSequenceList25.pollFirst();
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceList34.spliterator();
        boolean boolean37 = charSequenceList34.isEmpty();
        charSequenceList34.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean41 = charSequenceList34.offerLast((java.lang.CharSequence) "");
        charSequenceList34.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean44 = charSequenceList25.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor45 = charSequenceList34.descendingIterator();
        boolean boolean46 = charSequenceList9.removeFirstOccurrence((java.lang.Object) charSequenceList34);
        boolean boolean47 = charSequenceList9.isEmpty();
        charSequenceList9.addFirst((java.lang.CharSequence) "");
        java.util.LinkedList<java.lang.CharSequence> charSequenceList50 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.util.function.UnaryOperator<java.lang.CharSequence> charSequenceUnaryOperator51 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList50.replaceAll(charSequenceUnaryOperator51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertNotNull(charSequenceItor20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "hi!" + "'", charSequence30, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "hi!" + "'", charSequence31, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceItor45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        charSequenceList2.addFirst((java.lang.CharSequence) "[hi!, ]");
        charSequenceList2.clear();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceList15.spliterator();
        java.util.LinkedList<java.lang.Comparable<java.lang.String>> strComparableList18 = new java.util.LinkedList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = charSequenceList15.contains((java.lang.Object) strComparableList18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = charSequenceList22.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        int int32 = charSequenceList29.size();
        boolean boolean33 = charSequenceList22.contains((java.lang.Object) charSequenceList29);
        java.lang.CharSequence charSequence34 = charSequenceList22.element();
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        java.lang.CharSequence[] charSequenceArray43 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList44 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList44, charSequenceArray43);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator46 = charSequenceList44.spliterator();
        int int47 = charSequenceList44.size();
        boolean boolean48 = charSequenceList37.contains((java.lang.Object) charSequenceList44);
        java.lang.CharSequence charSequence49 = charSequenceList37.element();
        java.lang.CharSequence[] charSequenceArray51 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52, charSequenceArray51);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator54 = charSequenceList52.spliterator();
        boolean boolean55 = charSequenceList52.isEmpty();
        charSequenceList52.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str58 = charSequenceList52.toString();
        boolean boolean59 = charSequenceList37.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        boolean boolean61 = charSequenceList52.offer((java.lang.CharSequence) "");
        charSequenceList52.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean66 = charSequenceList52.add((java.lang.CharSequence) "");
        int int67 = charSequenceList22.lastIndexOf((java.lang.Object) boolean66);
        boolean boolean68 = charSequenceList15.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList71 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList71, charSequenceArray70);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList74 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean75 = charSequenceList71.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList74);
        java.lang.CharSequence charSequence76 = charSequenceList71.peek();
        java.lang.CharSequence charSequence77 = charSequenceList71.pollFirst();
        charSequenceList71.addFirst((java.lang.CharSequence) "hi!");
        int int80 = charSequenceList22.indexOf((java.lang.Object) charSequenceList71);
        boolean boolean81 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        boolean boolean83 = charSequenceList2.offer((java.lang.CharSequence) "[[hi!, ]]");
        java.lang.CharSequence charSequence84 = charSequenceList2.peek();
        java.lang.CharSequence charSequence85 = charSequenceList2.removeFirst();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor86 = charSequenceList2.iterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "hi!" + "'", charSequence49, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[hi!, ]" + "'", str58, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + charSequence76 + "' != '" + "hi!" + "'", charSequence76, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence77 + "' != '" + "hi!" + "'", charSequence77, "hi!");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertEquals("'" + charSequence84 + "' != '" + "[[hi!, ]]" + "'", charSequence84, "[[hi!, ]]");
        org.junit.Assert.assertEquals("'" + charSequence85 + "' != '" + "[[hi!, ]]" + "'", charSequence85, "[[hi!, ]]");
        org.junit.Assert.assertNotNull(charSequenceItor86);
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence charSequence10 = charSequenceList2.poll();
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence12 = charSequenceList2.getLast();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        java.lang.CharSequence charSequence10 = charSequenceList9.peekLast();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceList13.spliterator();
        charSequenceList13.clear();
        java.lang.Object[] objArray17 = charSequenceList13.toArray();
        boolean boolean18 = charSequenceList9.removeFirstOccurrence((java.lang.Object) charSequenceList13);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceList17.remove();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream28 = charSequenceList17.parallelStream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream28);
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence charSequence19 = charSequenceList2.peek();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = charSequenceList22.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        int int32 = charSequenceList29.size();
        boolean boolean33 = charSequenceList22.contains((java.lang.Object) charSequenceList29);
        java.lang.CharSequence charSequence34 = charSequenceList22.element();
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator39 = charSequenceList37.spliterator();
        boolean boolean40 = charSequenceList37.isEmpty();
        charSequenceList37.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str43 = charSequenceList37.toString();
        boolean boolean44 = charSequenceList22.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        boolean boolean46 = charSequenceList37.offer((java.lang.CharSequence) "");
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor47 = charSequenceList37.listIterator();
        java.lang.CharSequence charSequence48 = charSequenceList37.poll();
        int int49 = charSequenceList37.size();
        int int50 = charSequenceList2.indexOf((java.lang.Object) charSequenceList37);
        java.lang.CharSequence charSequence51 = charSequenceList2.remove();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "hi!" + "'", charSequence19, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[hi!, ]" + "'", str43, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceItor47);
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "hi!" + "'", charSequence48, "hi!");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "hi!" + "'", charSequence51, "hi!");
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        int int15 = charSequenceList2.size();
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = charSequenceList18.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        java.lang.Object obj23 = charSequenceList21.clone();
        charSequenceList21.addLast((java.lang.CharSequence) "[hi!, ]");
        boolean boolean27 = charSequenceList21.offerLast((java.lang.CharSequence) "[hi!, ]");
        boolean boolean28 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList21);
        charSequenceList2.addLast((java.lang.CharSequence) "[hi!, hi!, ]");
        java.lang.Object obj31 = null;
        boolean boolean32 = charSequenceList2.contains(obj31);
        java.lang.CharSequence charSequence33 = charSequenceList2.pop();
        boolean boolean34 = charSequenceList2.isEmpty();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "hi!" + "'", charSequence33, "hi!");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceList17.stream();
        boolean boolean27 = charSequenceList17.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence28 = charSequenceList17.poll();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor29 = charSequenceList17.iterator();
        java.lang.CharSequence charSequence30 = charSequenceList17.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream31 = charSequenceList17.parallelStream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceStream25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "[hi!, ]" + "'", charSequence28, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceItor29);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "" + "'", charSequence30, "");
        org.junit.Assert.assertNotNull(charSequenceStream31);
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        int int27 = charSequenceList2.indexOf((java.lang.Object) charSequence26);
        int int28 = charSequenceList2.size();
        charSequenceList2.addFirst((java.lang.CharSequence) "");
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList2.add((int) 'a', (java.lang.CharSequence) "[hi!, ]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor27 = charSequenceList17.listIterator();
        java.lang.CharSequence charSequence28 = charSequenceList17.poll();
        java.lang.CharSequence charSequence29 = charSequenceList17.peek();
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceItor27);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "hi!" + "'", charSequence28, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "" + "'", charSequence29, "");
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceList11.spliterator();
        java.lang.CharSequence charSequence16 = charSequenceList11.element();
        boolean boolean18 = charSequenceList11.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceList28.spliterator();
        int int31 = charSequenceList28.size();
        boolean boolean32 = charSequenceList21.contains((java.lang.Object) charSequenceList28);
        java.lang.CharSequence charSequence33 = charSequenceList21.element();
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceList36.spliterator();
        boolean boolean39 = charSequenceList36.isEmpty();
        charSequenceList36.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str42 = charSequenceList36.toString();
        boolean boolean43 = charSequenceList21.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36);
        boolean boolean45 = charSequenceList36.offer((java.lang.CharSequence) "");
        charSequenceList36.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean50 = charSequenceList36.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence51 = charSequenceList36.poll();
        java.lang.CharSequence charSequence52 = charSequenceList36.peek();
        int int53 = charSequenceList11.indexOf((java.lang.Object) charSequenceList36);
        java.lang.CharSequence charSequence54 = charSequenceList36.removeFirst();
        java.lang.Object[] objArray55 = charSequenceList36.toArray();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator56 = charSequenceList36.spliterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "hi!" + "'", charSequence33, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[hi!, ]" + "'", str42, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "hi!" + "'", charSequence51, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "hi!" + "'", charSequence52, "hi!");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "hi!" + "'", charSequence54, "hi!");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[, , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[, , ]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator56);
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        charSequenceList2.clear();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.Object obj26 = charSequenceList24.clone();
        int int27 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList24);
        java.lang.CharSequence charSequence28 = charSequenceList24.peekFirst();
        java.lang.CharSequence charSequence29 = charSequenceList24.peekFirst();
        java.lang.Object obj30 = charSequenceList24.clone();
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = charSequenceList34.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        java.lang.CharSequence[] charSequenceArray40 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList41 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList41, charSequenceArray40);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator43 = charSequenceList41.spliterator();
        int int44 = charSequenceList41.size();
        boolean boolean45 = charSequenceList34.contains((java.lang.Object) charSequenceList41);
        java.lang.CharSequence charSequence46 = charSequenceList34.element();
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator51 = charSequenceList49.spliterator();
        boolean boolean52 = charSequenceList49.isEmpty();
        charSequenceList49.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str55 = charSequenceList49.toString();
        boolean boolean56 = charSequenceList34.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49);
        boolean boolean58 = charSequenceList49.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor59 = charSequenceList49.descendingIterator();
        java.lang.CharSequence charSequence60 = null;
        charSequenceList49.addLast(charSequence60);
        java.lang.CharSequence[] charSequenceArray63 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList64 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64, charSequenceArray63);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList67 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean68 = charSequenceList64.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList67);
        java.lang.CharSequence charSequence69 = charSequenceList64.peek();
        boolean boolean71 = charSequenceList64.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray73 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList74 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList74, charSequenceArray73);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList77 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean78 = charSequenceList74.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList77);
        boolean boolean79 = charSequenceList64.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList77);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream80 = charSequenceList77.parallelStream();
        int int81 = charSequenceList49.lastIndexOf((java.lang.Object) charSequenceStream80);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean82 = charSequenceList24.addAll((int) (short) 10, (java.util.Collection<java.lang.CharSequence>) charSequenceList49);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNull(charSequence29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "[]");
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charSequenceArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + charSequence46 + "' != '" + "hi!" + "'", charSequence46, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[hi!, ]" + "'", str55, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(charSequenceItor59);
        org.junit.Assert.assertNotNull(charSequenceArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + charSequence69 + "' != '" + "hi!" + "'", charSequence69, "hi!");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(charSequenceArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(charSequenceStream80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        int int27 = charSequenceList2.indexOf((java.lang.Object) charSequence26);
        int int28 = charSequenceList2.size();
        charSequenceList2.addFirst((java.lang.CharSequence) "");
        charSequenceList2.add((int) (byte) 0, (java.lang.CharSequence) "[hi!, ]");
        boolean boolean35 = charSequenceList2.offerLast((java.lang.CharSequence) "[]");
        charSequenceList2.clear();
        java.lang.CharSequence charSequence37 = charSequenceList2.peekFirst();
        java.lang.CharSequence charSequence38 = charSequenceList2.peek();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(charSequence37);
        org.junit.Assert.assertNull(charSequence38);
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence charSequence10 = charSequenceList2.poll();
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        charSequenceList11.add(0, (java.lang.CharSequence) "[hi!, [hi!, ]]");
        java.util.LinkedList<java.lang.Iterable<java.lang.CharSequence>> charSequenceIterableList15 = new java.util.LinkedList<java.lang.Iterable<java.lang.CharSequence>>();
        boolean boolean16 = charSequenceList11.removeFirstOccurrence((java.lang.Object) charSequenceIterableList15);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        charSequenceList5.push((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        boolean boolean18 = charSequenceList11.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        boolean boolean26 = charSequenceList11.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        boolean boolean27 = charSequenceList24.isEmpty();
        java.lang.CharSequence charSequence28 = charSequenceList24.peekLast();
        java.lang.CharSequence charSequence29 = charSequenceList24.poll();
        java.lang.String str30 = charSequenceList24.toString();
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList33, charSequenceArray32);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean37 = charSequenceList33.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList36);
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator42 = charSequenceList40.spliterator();
        int int43 = charSequenceList40.size();
        boolean boolean44 = charSequenceList33.contains((java.lang.Object) charSequenceList40);
        java.lang.CharSequence charSequence45 = charSequenceList33.element();
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48, charSequenceArray47);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceList48.spliterator();
        boolean boolean51 = charSequenceList48.isEmpty();
        charSequenceList48.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str54 = charSequenceList48.toString();
        boolean boolean55 = charSequenceList33.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48);
        boolean boolean57 = charSequenceList48.offer((java.lang.CharSequence) "");
        charSequenceList48.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList48.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        boolean boolean65 = charSequenceList48.offerFirst((java.lang.CharSequence) "hi!");
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator66 = charSequenceList48.spliterator();
        boolean boolean67 = charSequenceList24.removeFirstOccurrence((java.lang.Object) charSequenceSpliterator66);
        java.lang.Object[] objArray68 = charSequenceList24.toArray();
        boolean boolean69 = charSequenceList5.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence70 = charSequenceList5.pollFirst();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator71 = charSequenceList5.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence72 = charSequenceList5.element();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNull(charSequence29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[]" + "'", str30, "[]");
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + charSequence45 + "' != '" + "hi!" + "'", charSequence45, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[hi!, ]" + "'", str54, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + charSequence70 + "' != '" + "" + "'", charSequence70, "");
        org.junit.Assert.assertNotNull(charSequenceSpliterator71);
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor25 = charSequenceList2.descendingIterator();
        java.lang.CharSequence charSequence26 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.Object obj35 = null;
        boolean boolean36 = charSequenceList30.equals(obj35);
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = charSequenceList39.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        java.lang.CharSequence charSequence44 = charSequenceList39.peek();
        java.lang.CharSequence charSequence45 = charSequenceList39.pollFirst();
        boolean boolean46 = charSequenceList30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = charSequenceList49.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        java.lang.CharSequence charSequence54 = charSequenceList49.peek();
        int int55 = charSequenceList30.indexOf((java.lang.Object) charSequence54);
        int int56 = charSequenceList30.size();
        java.lang.Object obj57 = charSequenceList30.clone();
        boolean boolean58 = charSequenceList2.addAll((int) (short) 1, (java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        boolean boolean60 = charSequenceList2.offerFirst((java.lang.CharSequence) "[hi!]");
        java.lang.CharSequence charSequence61 = charSequenceList2.poll();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceItor25);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "hi!" + "'", charSequence44, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence45 + "' != '" + "hi!" + "'", charSequence45, "hi!");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "hi!" + "'", charSequence54, "hi!");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + charSequence61 + "' != '" + "[hi!]" + "'", charSequence61, "[hi!]");
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence charSequence19 = charSequenceList2.peek();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = charSequenceList22.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        int int32 = charSequenceList29.size();
        boolean boolean33 = charSequenceList22.contains((java.lang.Object) charSequenceList29);
        java.lang.CharSequence charSequence34 = charSequenceList22.element();
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator39 = charSequenceList37.spliterator();
        boolean boolean40 = charSequenceList37.isEmpty();
        charSequenceList37.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str43 = charSequenceList37.toString();
        boolean boolean44 = charSequenceList22.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        boolean boolean46 = charSequenceList37.offer((java.lang.CharSequence) "");
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor47 = charSequenceList37.listIterator();
        java.lang.CharSequence charSequence48 = charSequenceList37.poll();
        int int49 = charSequenceList37.size();
        int int50 = charSequenceList2.indexOf((java.lang.Object) charSequenceList37);
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList53 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53, charSequenceArray52);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator55 = charSequenceList53.spliterator();
        boolean boolean56 = charSequenceList53.isEmpty();
        java.lang.CharSequence charSequence57 = charSequenceList53.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream58 = charSequenceList53.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream59 = charSequenceList53.parallelStream();
        charSequenceList53.push((java.lang.CharSequence) "hi!");
        boolean boolean62 = charSequenceList37.remove((java.lang.Object) "hi!");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor63 = charSequenceList37.descendingIterator();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor64 = charSequenceList37.iterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "hi!" + "'", charSequence19, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[hi!, ]" + "'", str43, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceItor47);
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "hi!" + "'", charSequence48, "hi!");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + charSequence57 + "' != '" + "" + "'", charSequence57, "");
        org.junit.Assert.assertNotNull(charSequenceStream58);
        org.junit.Assert.assertNotNull(charSequenceStream59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(charSequenceItor63);
        org.junit.Assert.assertNotNull(charSequenceItor64);
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence charSequence9 = charSequenceList2.peek();
        java.lang.CharSequence charSequence10 = charSequenceList2.getFirst();
        java.lang.Object obj11 = charSequenceList2.clone();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "[hi!, ]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "[hi!, ]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "[hi!, ]");
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence charSequence10 = charSequenceList2.poll();
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = charSequenceList15.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList18);
        java.lang.Object obj20 = null;
        boolean boolean21 = charSequenceList15.equals(obj20);
        java.lang.CharSequence charSequence22 = charSequenceList15.poll();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor23 = charSequenceList15.descendingIterator();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean24 = charSequenceList2.addAll(10, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertNotNull(charSequenceItor23);
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList2.spliterator();
        boolean boolean12 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence13 = charSequenceList2.element();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceList2.spliterator();
        java.lang.CharSequence charSequence15 = charSequenceList2.poll();
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = charSequenceList18.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator27 = charSequenceList25.spliterator();
        int int28 = charSequenceList25.size();
        boolean boolean29 = charSequenceList18.contains((java.lang.Object) charSequenceList25);
        java.lang.CharSequence charSequence30 = charSequenceList25.removeFirst();
        java.lang.CharSequence charSequence31 = charSequenceList25.pollLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor32 = charSequenceList25.listIterator();
        int int33 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceItor32);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "hi!" + "'", charSequence15, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "" + "'", charSequence30, "");
        org.junit.Assert.assertNull(charSequence31);
        org.junit.Assert.assertNotNull(charSequenceItor32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList13.equals(obj18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        boolean boolean25 = charSequenceList13.removeLastOccurrence((java.lang.Object) charSequenceList22);
        charSequenceList13.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean28 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        java.util.LinkedList<java.io.Serializable> serializableList29 = new java.util.LinkedList<java.io.Serializable>();
        boolean boolean30 = charSequenceList2.equals((java.lang.Object) serializableList29);
        java.lang.CharSequence charSequence32 = charSequenceList2.get(0);
        java.lang.CharSequence charSequence33 = charSequenceList2.pop();
        java.lang.CharSequence charSequence34 = charSequenceList2.getFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "hi!" + "'", charSequence32, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "hi!" + "'", charSequence33, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.pop();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean14 = charSequenceList2.offer((java.lang.CharSequence) "[hi!, ]");
        boolean boolean16 = charSequenceList2.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence17 = charSequenceList2.getFirst();
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        int int26 = charSequenceList20.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence27 = charSequenceList20.removeLast();
        java.lang.CharSequence charSequence28 = charSequenceList20.peekLast();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceList38.spliterator();
        int int41 = charSequenceList38.size();
        boolean boolean42 = charSequenceList31.contains((java.lang.Object) charSequenceList38);
        java.lang.CharSequence charSequence43 = charSequenceList31.element();
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceList46.spliterator();
        boolean boolean49 = charSequenceList46.isEmpty();
        charSequenceList46.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str52 = charSequenceList46.toString();
        boolean boolean53 = charSequenceList31.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceList46.stream();
        boolean boolean55 = charSequenceList20.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        java.lang.CharSequence charSequence56 = charSequenceList20.remove();
        boolean boolean57 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence58 = charSequenceList2.getFirst();
        java.lang.CharSequence charSequence60 = charSequenceList2.get((int) (short) 1);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "[hi!, ]" + "'", charSequence17, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "hi!" + "'", charSequence43, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[hi!, ]" + "'", str52, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + charSequence56 + "' != '" + "hi!" + "'", charSequence56, "hi!");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + charSequence58 + "' != '" + "[hi!, ]" + "'", charSequence58, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence60 + "' != '" + "hi!" + "'", charSequence60, "hi!");
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        java.lang.CharSequence charSequence6 = charSequenceList2.remove();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        boolean boolean12 = charSequenceList9.isEmpty();
        charSequenceList9.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean16 = charSequenceList9.offerLast((java.lang.CharSequence) "");
        charSequenceList9.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence19 = charSequenceList9.removeLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor20 = charSequenceList9.listIterator();
        boolean boolean21 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList9);
        boolean boolean22 = charSequenceList9.isEmpty();
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = charSequenceList25.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence charSequence30 = charSequenceList25.peek();
        java.lang.CharSequence charSequence31 = charSequenceList25.pollFirst();
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceList34.spliterator();
        boolean boolean37 = charSequenceList34.isEmpty();
        charSequenceList34.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean41 = charSequenceList34.offerLast((java.lang.CharSequence) "");
        charSequenceList34.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean44 = charSequenceList25.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor45 = charSequenceList34.descendingIterator();
        boolean boolean46 = charSequenceList9.removeFirstOccurrence((java.lang.Object) charSequenceList34);
        boolean boolean47 = charSequenceList9.isEmpty();
        charSequenceList9.addFirst((java.lang.CharSequence) "");
        java.util.LinkedList<java.lang.CharSequence> charSequenceList50 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.lang.CharSequence charSequence51 = charSequenceList50.pollFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertNotNull(charSequenceItor20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "hi!" + "'", charSequence30, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "hi!" + "'", charSequence31, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceItor45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "" + "'", charSequence51, "");
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceList17.stream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceList17.spliterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream27 = charSequenceList17.parallelStream();
        charSequenceList17.addLast((java.lang.CharSequence) "[[hi!, ], hi!, ]");
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator34 = charSequenceList32.spliterator();
        boolean boolean35 = charSequenceList32.isEmpty();
        charSequenceList32.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str38 = charSequenceList32.toString();
        java.lang.CharSequence charSequence39 = charSequenceList32.removeFirst();
        boolean boolean41 = charSequenceList32.removeLastOccurrence((java.lang.Object) (short) 100);
        java.lang.CharSequence[] charSequenceArray43 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList44 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList44, charSequenceArray43);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator46 = charSequenceList44.spliterator();
        int int47 = charSequenceList44.size();
        java.lang.CharSequence charSequence48 = charSequenceList44.remove();
        boolean boolean49 = charSequenceList32.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList44);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor50 = charSequenceList44.descendingIterator();
        int int51 = charSequenceList17.lastIndexOf((java.lang.Object) charSequenceItor50);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceStream25);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
        org.junit.Assert.assertNotNull(charSequenceStream27);
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[hi!, ]" + "'", str38, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "hi!" + "'", charSequence39, "hi!");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "" + "'", charSequence48, "");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(charSequenceItor50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        charSequenceList2.clear();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.Object obj26 = charSequenceList24.clone();
        int int27 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList24);
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor29 = charSequenceList2.listIterator(0);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor30 = charSequenceList2.descendingIterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(charSequenceItor29);
        org.junit.Assert.assertNotNull(charSequenceItor30);
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList2.spliterator();
        boolean boolean12 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        charSequenceList2.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceList2.spliterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.pop();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean14 = charSequenceList2.offer((java.lang.CharSequence) "[hi!, ]");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence17 = charSequenceList2.set((int) '#', (java.lang.CharSequence) "[hi!, [hi!, ]]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Size: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence charSequence9 = charSequenceList2.removeFirst();
        boolean boolean11 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = charSequenceList14.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceList21.spliterator();
        int int24 = charSequenceList21.size();
        boolean boolean25 = charSequenceList14.contains((java.lang.Object) charSequenceList21);
        java.lang.CharSequence charSequence26 = charSequenceList14.element();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        boolean boolean32 = charSequenceList29.isEmpty();
        charSequenceList29.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str35 = charSequenceList29.toString();
        boolean boolean36 = charSequenceList14.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        boolean boolean38 = charSequenceList29.offer((java.lang.CharSequence) "");
        charSequenceList29.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList29.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        charSequenceList29.addLast((java.lang.CharSequence) "hi!");
        boolean boolean47 = charSequenceList2.removeFirstOccurrence((java.lang.Object) "hi!");
        boolean boolean49 = charSequenceList2.offerLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence50 = charSequenceList2.getFirst();
        java.lang.CharSequence charSequence51 = charSequenceList2.poll();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.CharSequence> charSequenceList54 = charSequenceList2.subList((int) (byte) 1, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[hi!, ]" + "'", str35, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "" + "'", charSequence50, "");
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "" + "'", charSequence51, "");
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        boolean boolean14 = charSequenceList2.isEmpty();
        java.lang.Object obj15 = charSequenceList2.clone();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceList2.parallelStream();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence18 = charSequenceList2.remove((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceStream16);
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceList12.spliterator();
        boolean boolean15 = charSequenceList12.isEmpty();
        java.lang.CharSequence charSequence16 = charSequenceList12.removeLast();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence charSequence24 = charSequenceList19.peek();
        boolean boolean26 = charSequenceList19.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = charSequenceList29.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        boolean boolean34 = charSequenceList19.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.CharSequence charSequence35 = charSequenceList19.pop();
        boolean boolean36 = charSequenceList12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = charSequenceList39.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        java.lang.Object obj44 = null;
        boolean boolean45 = charSequenceList39.equals(obj44);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence charSequence47 = charSequenceList39.peek();
        java.lang.CharSequence charSequence48 = charSequenceList39.remove();
        boolean boolean49 = charSequenceList19.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean50 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList53 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53, charSequenceArray52);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = charSequenceList53.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList56);
        int int59 = charSequenceList53.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean61 = charSequenceList53.contains((java.lang.Object) (-1.0d));
        java.lang.CharSequence charSequence62 = charSequenceList53.getFirst();
        boolean boolean63 = charSequenceList39.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53);
        java.lang.CharSequence charSequence64 = charSequenceList39.peek();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator65 = charSequenceList39.spliterator();
        java.lang.CharSequence charSequence66 = charSequenceList39.pollFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[]" + "'", str8, "[]");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "hi!" + "'", charSequence24, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "hi!" + "'", charSequence47, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "hi!" + "'", charSequence48, "hi!");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + charSequence62 + "' != '" + "hi!" + "'", charSequence62, "hi!");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + charSequence64 + "' != '" + "hi!" + "'", charSequence64, "hi!");
        org.junit.Assert.assertNotNull(charSequenceSpliterator65);
        org.junit.Assert.assertEquals("'" + charSequence66 + "' != '" + "hi!" + "'", charSequence66, "hi!");
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence charSequence15 = charSequenceList9.pollLast();
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = charSequenceList18.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        java.lang.CharSequence charSequence23 = charSequenceList18.peek();
        boolean boolean25 = charSequenceList18.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = charSequenceList28.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean33 = charSequenceList18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean34 = charSequenceList9.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        boolean boolean43 = charSequenceList37.offerFirst((java.lang.CharSequence) "hi!");
        boolean boolean44 = charSequenceList31.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        boolean boolean46 = charSequenceList31.offer((java.lang.CharSequence) "");
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        java.lang.Object obj48 = null;
        boolean boolean49 = charSequenceList31.equals(obj48);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNull(charSequence15);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "hi!" + "'", charSequence23, "hi!");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.pop();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence13 = charSequenceList2.poll();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = charSequenceList16.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence charSequence21 = charSequenceList16.peek();
        boolean boolean23 = charSequenceList16.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList26 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26, charSequenceArray25);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = charSequenceList26.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        boolean boolean31 = charSequenceList16.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        charSequenceList16.clear();
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = charSequenceList35.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        java.lang.Object obj40 = charSequenceList38.clone();
        int int41 = charSequenceList16.lastIndexOf((java.lang.Object) charSequenceList38);
        java.lang.CharSequence charSequence42 = charSequenceList38.peekFirst();
        java.lang.CharSequence charSequence43 = charSequenceList38.peekFirst();
        boolean boolean44 = charSequenceList2.removeFirstOccurrence((java.lang.Object) charSequenceList38);
        charSequenceList38.addLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence47 = charSequenceList38.remove();
        charSequenceList38.push((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence[] charSequenceArray51 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52, charSequenceArray51);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList55 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean56 = charSequenceList52.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList55);
        java.lang.CharSequence[] charSequenceArray58 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList59 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList59, charSequenceArray58);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator61 = charSequenceList59.spliterator();
        int int62 = charSequenceList59.size();
        boolean boolean63 = charSequenceList52.contains((java.lang.Object) charSequenceList59);
        java.lang.CharSequence charSequence64 = charSequenceList52.element();
        java.lang.CharSequence[] charSequenceArray66 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList67 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList67, charSequenceArray66);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator69 = charSequenceList67.spliterator();
        boolean boolean70 = charSequenceList67.isEmpty();
        charSequenceList67.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str73 = charSequenceList67.toString();
        boolean boolean74 = charSequenceList52.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList67);
        boolean boolean76 = charSequenceList67.offer((java.lang.CharSequence) "");
        java.lang.Object obj77 = charSequenceList67.clone();
        boolean boolean78 = charSequenceList38.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList67);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "hi!" + "'", charSequence21, "hi!");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(charSequence42);
        org.junit.Assert.assertNull(charSequence43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "" + "'", charSequence47, "");
        org.junit.Assert.assertNotNull(charSequenceArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charSequenceArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + charSequence64 + "' != '" + "hi!" + "'", charSequence64, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[hi!, ]" + "'", str73, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "[hi!, , ]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "[hi!, , ]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "[hi!, , ]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.pop();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean14 = charSequenceList2.offer((java.lang.CharSequence) "[hi!, ]");
        boolean boolean16 = charSequenceList2.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence17 = charSequenceList2.getFirst();
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        int int26 = charSequenceList20.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence27 = charSequenceList20.removeLast();
        java.lang.CharSequence charSequence28 = charSequenceList20.peekLast();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceList38.spliterator();
        int int41 = charSequenceList38.size();
        boolean boolean42 = charSequenceList31.contains((java.lang.Object) charSequenceList38);
        java.lang.CharSequence charSequence43 = charSequenceList31.element();
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceList46.spliterator();
        boolean boolean49 = charSequenceList46.isEmpty();
        charSequenceList46.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str52 = charSequenceList46.toString();
        boolean boolean53 = charSequenceList31.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceList46.stream();
        boolean boolean55 = charSequenceList20.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        boolean boolean56 = charSequenceList2.contains((java.lang.Object) charSequenceList20);
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor57 = charSequenceList20.listIterator();
        java.lang.CharSequence charSequence58 = charSequenceList20.removeLast();
        int int59 = charSequenceList20.size();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "[hi!, ]" + "'", charSequence17, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "hi!" + "'", charSequence43, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[hi!, ]" + "'", str52, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charSequenceItor57);
        org.junit.Assert.assertEquals("'" + charSequence58 + "' != '" + "" + "'", charSequence58, "");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceList2.parallelStream();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator21 = charSequenceList19.spliterator();
        int int22 = charSequenceList19.size();
        boolean boolean23 = charSequenceList12.contains((java.lang.Object) charSequenceList19);
        boolean boolean24 = charSequenceList12.isEmpty();
        java.lang.Object obj25 = charSequenceList12.clone();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream26 = charSequenceList12.parallelStream();
        boolean boolean27 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.Object[] objArray28 = charSequenceList2.toArray();
        java.lang.CharSequence charSequence29 = charSequenceList2.peekLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor31 = charSequenceList2.listIterator((int) (short) 1);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
        org.junit.Assert.assertNotNull(charSequenceItor31);
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence charSequence15 = charSequenceList11.removeLast();
        java.util.List<java.lang.CharSequence> charSequenceList18 = charSequenceList11.subList(0, (int) (short) 0);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor19 = charSequenceList11.descendingIterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "" + "'", charSequence15, "");
        org.junit.Assert.assertNotNull(charSequenceList18);
        org.junit.Assert.assertNotNull(charSequenceItor19);
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean18 = charSequenceList15.isEmpty();
        java.lang.CharSequence charSequence19 = charSequenceList15.peekLast();
        java.lang.CharSequence charSequence20 = charSequenceList15.poll();
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.Object[] objArray22 = charSequenceList15.toArray();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(charSequence19);
        org.junit.Assert.assertNull(charSequence20);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence charSequence15 = charSequenceList9.pollLast();
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = charSequenceList18.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        java.lang.CharSequence charSequence23 = charSequenceList18.peek();
        boolean boolean25 = charSequenceList18.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = charSequenceList28.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean33 = charSequenceList18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean34 = charSequenceList9.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        boolean boolean43 = charSequenceList37.offerFirst((java.lang.CharSequence) "hi!");
        boolean boolean44 = charSequenceList31.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceList47.spliterator();
        boolean boolean50 = charSequenceList47.isEmpty();
        java.lang.CharSequence charSequence51 = charSequenceList47.removeLast();
        java.lang.CharSequence[] charSequenceArray53 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList54 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList54, charSequenceArray53);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList57 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean58 = charSequenceList54.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList57);
        java.lang.CharSequence charSequence59 = charSequenceList54.peek();
        boolean boolean61 = charSequenceList54.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray63 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList64 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64, charSequenceArray63);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList67 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean68 = charSequenceList64.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList67);
        boolean boolean69 = charSequenceList54.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList67);
        java.lang.CharSequence charSequence70 = charSequenceList54.pop();
        boolean boolean71 = charSequenceList47.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList54);
        java.lang.CharSequence[] charSequenceArray73 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList74 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList74, charSequenceArray73);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList77 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean78 = charSequenceList74.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList77);
        java.lang.Object obj79 = null;
        boolean boolean80 = charSequenceList74.equals(obj79);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList81 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList74);
        java.lang.CharSequence charSequence82 = charSequenceList74.peek();
        java.lang.CharSequence charSequence83 = charSequenceList74.remove();
        boolean boolean84 = charSequenceList54.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList74);
        boolean boolean85 = charSequenceList31.removeFirstOccurrence((java.lang.Object) charSequenceList74);
        java.lang.CharSequence charSequence86 = charSequenceList31.peek();
        java.lang.String str87 = charSequenceList31.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence89 = charSequenceList31.get(3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 3, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNull(charSequence15);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "hi!" + "'", charSequence23, "hi!");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "" + "'", charSequence51, "");
        org.junit.Assert.assertNotNull(charSequenceArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + charSequence59 + "' != '" + "hi!" + "'", charSequence59, "hi!");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charSequenceArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + charSequence70 + "' != '" + "hi!" + "'", charSequence70, "hi!");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(charSequenceArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + charSequence82 + "' != '" + "hi!" + "'", charSequence82, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence83 + "' != '" + "hi!" + "'", charSequence83, "hi!");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(charSequence86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[]" + "'", str87, "[]");
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        boolean boolean14 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence15 = charSequenceList2.remove();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        charSequenceList2.addLast((java.lang.CharSequence) "[hi!]");
        java.lang.CharSequence charSequence20 = charSequenceList2.getLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "hi!" + "'", charSequence15, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "[hi!]" + "'", charSequence20, "[hi!]");
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceList2.stream();
        java.lang.CharSequence charSequence16 = null;
        charSequenceList2.add(0, charSequence16);
        java.lang.CharSequence charSequence18 = charSequenceList2.removeFirst();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor19 = charSequenceList2.iterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertNull(charSequence18);
        org.junit.Assert.assertNotNull(charSequenceItor19);
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceList17.getLast();
        java.lang.CharSequence charSequence28 = charSequenceList17.poll();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "hi!" + "'", charSequence28, "hi!");
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        charSequenceList2.addFirst((java.lang.CharSequence) "[hi!, ]");
        charSequenceList2.clear();
        java.util.LinkedList<java.io.Serializable> serializableList13 = new java.util.LinkedList<java.io.Serializable>();
        int int14 = charSequenceList2.lastIndexOf((java.lang.Object) serializableList13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence16 = charSequenceList2.get((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor19 = charSequenceList11.listIterator();
        boolean boolean21 = charSequenceList11.offerLast((java.lang.CharSequence) "[hi!, [[hi!, ]]]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceItor19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceList17.stream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceList17.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator27 = charSequenceList17.spliterator();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.Object obj35 = null;
        boolean boolean36 = charSequenceList30.equals(obj35);
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceList39.spliterator();
        boolean boolean42 = charSequenceList30.removeLastOccurrence((java.lang.Object) charSequenceList39);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean49 = charSequenceList45.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList48);
        java.lang.CharSequence charSequence50 = charSequenceList45.peek();
        boolean boolean52 = charSequenceList45.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean53 = charSequenceList30.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        java.lang.CharSequence charSequence54 = charSequenceList30.pop();
        java.lang.CharSequence charSequence55 = charSequenceList30.peekFirst();
        boolean boolean56 = charSequenceList17.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        boolean boolean58 = charSequenceList17.removeLastOccurrence((java.lang.Object) '4');
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceStream25);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
        org.junit.Assert.assertNotNull(charSequenceSpliterator27);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "hi!" + "'", charSequence50, "hi!");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "hi!" + "'", charSequence54, "hi!");
        org.junit.Assert.assertNull(charSequence55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList2.spliterator();
        boolean boolean12 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        charSequenceList2.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceList18.spliterator();
        boolean boolean21 = charSequenceList18.isEmpty();
        boolean boolean22 = charSequenceList2.equals((java.lang.Object) charSequenceList18);
        java.lang.CharSequence charSequence24 = charSequenceList2.remove((int) (short) 0);
        int int25 = charSequenceList2.size();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor26 = charSequenceList2.listIterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "hi!" + "'", charSequence24, "hi!");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertNotNull(charSequenceItor26);
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence22 = charSequenceList17.peek();
        boolean boolean24 = charSequenceList17.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean25 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence26 = charSequenceList2.pop();
        java.lang.CharSequence charSequence27 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.CharSequence charSequence35 = charSequenceList30.peek();
        java.lang.CharSequence charSequence36 = charSequenceList30.pollFirst();
        charSequenceList30.addFirst((java.lang.CharSequence) "hi!");
        java.lang.Object obj39 = charSequenceList30.clone();
        boolean boolean40 = charSequenceList2.remove((java.lang.Object) charSequenceList30);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNull(charSequence27);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "hi!" + "'", charSequence36, "hi!");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceList20.spliterator();
        boolean boolean23 = charSequenceList20.isEmpty();
        java.lang.CharSequence charSequence24 = charSequenceList20.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceList20.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream26 = charSequenceList20.parallelStream();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator39 = charSequenceList37.spliterator();
        int int40 = charSequenceList37.size();
        boolean boolean41 = charSequenceList30.contains((java.lang.Object) charSequenceList37);
        boolean boolean42 = charSequenceList30.isEmpty();
        java.lang.Object obj43 = charSequenceList30.clone();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream44 = charSequenceList30.parallelStream();
        boolean boolean45 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48, charSequenceArray47);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceList48.spliterator();
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList53 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53, charSequenceArray52);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = charSequenceList53.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList56);
        java.lang.CharSequence[] charSequenceArray59 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList60 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList60, charSequenceArray59);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator62 = charSequenceList60.spliterator();
        int int63 = charSequenceList60.size();
        boolean boolean64 = charSequenceList53.contains((java.lang.Object) charSequenceList60);
        java.lang.CharSequence charSequence65 = charSequenceList53.element();
        java.lang.CharSequence[] charSequenceArray67 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList68 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList68, charSequenceArray67);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator70 = charSequenceList68.spliterator();
        boolean boolean71 = charSequenceList68.isEmpty();
        charSequenceList68.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str74 = charSequenceList68.toString();
        boolean boolean75 = charSequenceList53.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList68);
        boolean boolean77 = charSequenceList68.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor78 = charSequenceList68.descendingIterator();
        boolean boolean79 = charSequenceList48.removeLastOccurrence((java.lang.Object) charSequenceItor78);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator80 = charSequenceList48.spliterator();
        java.lang.CharSequence charSequence81 = charSequenceList48.getLast();
        java.lang.CharSequence[] charSequenceArray83 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList84 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList84, charSequenceArray83);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator86 = charSequenceList84.spliterator();
        boolean boolean87 = charSequenceList84.isEmpty();
        java.lang.CharSequence charSequence88 = charSequenceList84.removeLast();
        java.lang.CharSequence charSequence89 = charSequenceList84.pollFirst();
        boolean boolean90 = charSequenceList48.contains((java.lang.Object) charSequence89);
        java.lang.CharSequence charSequence91 = charSequenceList48.element();
        boolean boolean92 = charSequenceList30.contains((java.lang.Object) charSequenceList48);
        boolean boolean94 = charSequenceList48.offerFirst((java.lang.CharSequence) "[hi!, [hi!, ]]");
        boolean boolean95 = charSequenceList2.contains((java.lang.Object) "[hi!, [hi!, ]]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "" + "'", charSequence24, "");
        org.junit.Assert.assertNotNull(charSequenceStream25);
        org.junit.Assert.assertNotNull(charSequenceStream26);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceStream44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charSequenceArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + charSequence65 + "' != '" + "hi!" + "'", charSequence65, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[hi!, ]" + "'", str74, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(charSequenceItor78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator80);
        org.junit.Assert.assertEquals("'" + charSequence81 + "' != '" + "" + "'", charSequence81, "");
        org.junit.Assert.assertNotNull(charSequenceArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertEquals("'" + charSequence88 + "' != '" + "" + "'", charSequence88, "");
        org.junit.Assert.assertNull(charSequence89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + charSequence91 + "' != '" + "" + "'", charSequence91, "");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence charSequence9 = charSequenceList2.removeFirst();
        boolean boolean11 = charSequenceList2.removeLastOccurrence((java.lang.Object) (short) 100);
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor12 = charSequenceList2.listIterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(charSequenceItor12);
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceList11.spliterator();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor16 = charSequenceList11.iterator();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor17 = charSequenceList11.iterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertNotNull(charSequenceItor16);
        org.junit.Assert.assertNotNull(charSequenceItor17);
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence8 = null;
        boolean boolean9 = charSequenceList2.offerLast(charSequence8);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor10 = charSequenceList2.iterator();
        int int11 = charSequenceList2.size();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceItor10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        int int27 = charSequenceList2.indexOf((java.lang.Object) charSequence26);
        int int28 = charSequenceList2.size();
        java.lang.CharSequence charSequence29 = charSequenceList2.pop();
        charSequenceList2.push((java.lang.CharSequence) "[hi!]");
        charSequenceList2.addFirst((java.lang.CharSequence) "[hi!]");
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.CharSequence> charSequenceItor35 = charSequenceList2.listIterator((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        charSequenceList17.addLast((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = charSequenceList29.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList29.equals(obj34);
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList41 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean42 = charSequenceList38.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList41);
        java.lang.CharSequence charSequence43 = charSequenceList38.peek();
        boolean boolean45 = charSequenceList38.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48, charSequenceArray47);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList51 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean52 = charSequenceList48.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList51);
        boolean boolean53 = charSequenceList38.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList51);
        java.lang.CharSequence charSequence54 = charSequenceList51.poll();
        boolean boolean55 = charSequenceList29.remove((java.lang.Object) charSequenceList51);
        boolean boolean56 = charSequenceList17.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "hi!" + "'", charSequence43, "hi!");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(charSequence54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence charSequence15 = charSequenceList9.pollLast();
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = charSequenceList18.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        java.lang.CharSequence charSequence23 = charSequenceList18.peek();
        boolean boolean25 = charSequenceList18.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = charSequenceList28.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean33 = charSequenceList18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean34 = charSequenceList9.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        boolean boolean43 = charSequenceList37.offerFirst((java.lang.CharSequence) "hi!");
        boolean boolean44 = charSequenceList31.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        boolean boolean46 = charSequenceList31.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence47 = charSequenceList31.poll();
        java.lang.Object[] objArray48 = charSequenceList31.toArray();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNull(charSequence15);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "hi!" + "'", charSequence23, "hi!");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "" + "'", charSequence47, "");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceList12.spliterator();
        boolean boolean15 = charSequenceList12.isEmpty();
        java.lang.CharSequence charSequence16 = charSequenceList12.removeLast();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence charSequence24 = charSequenceList19.peek();
        boolean boolean26 = charSequenceList19.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = charSequenceList29.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        boolean boolean34 = charSequenceList19.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.CharSequence charSequence35 = charSequenceList19.pop();
        boolean boolean36 = charSequenceList12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = charSequenceList39.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        java.lang.Object obj44 = null;
        boolean boolean45 = charSequenceList39.equals(obj44);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence charSequence47 = charSequenceList39.peek();
        java.lang.CharSequence charSequence48 = charSequenceList39.remove();
        boolean boolean49 = charSequenceList19.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean50 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor52 = charSequenceList39.listIterator(0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence54 = charSequenceList39.remove((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[]" + "'", str8, "[]");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "hi!" + "'", charSequence24, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "hi!" + "'", charSequence47, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "hi!" + "'", charSequence48, "hi!");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(charSequenceItor52);
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        charSequenceList2.addFirst((java.lang.CharSequence) "[hi!, ]");
        charSequenceList2.clear();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor13 = charSequenceList2.descendingIterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceItor13);
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        charSequenceList5.push((java.lang.CharSequence) "");
        boolean boolean10 = charSequenceList5.offerLast((java.lang.CharSequence) "[hi!]");
        java.lang.CharSequence charSequence11 = charSequenceList5.removeLast();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence13 = charSequenceList5.get(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "[hi!]" + "'", charSequence11, "[hi!]");
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence charSequence10 = charSequenceList2.poll();
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = charSequenceList14.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceList21.spliterator();
        int int24 = charSequenceList21.size();
        boolean boolean25 = charSequenceList14.contains((java.lang.Object) charSequenceList21);
        java.lang.CharSequence charSequence26 = charSequenceList14.element();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        boolean boolean32 = charSequenceList29.isEmpty();
        charSequenceList29.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str35 = charSequenceList29.toString();
        boolean boolean36 = charSequenceList14.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        charSequenceList29.addLast((java.lang.CharSequence) "");
        boolean boolean39 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        boolean boolean40 = charSequenceList29.isEmpty();
        java.lang.CharSequence charSequence41 = charSequenceList29.pollFirst();
        boolean boolean43 = charSequenceList29.offerFirst((java.lang.CharSequence) "[hi!, hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[hi!, ]" + "'", str35, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence charSequence18 = charSequenceList2.pop();
        java.lang.Object[] objArray19 = charSequenceList2.toArray();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "hi!" + "'", charSequence18, "hi!");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        java.util.LinkedList<java.lang.CharSequence> charSequenceList0 = new java.util.LinkedList<java.lang.CharSequence>();
        charSequenceList0.push((java.lang.CharSequence) "[hi!, [hi!, ]]");
        boolean boolean4 = charSequenceList0.add((java.lang.CharSequence) "[hi!, [hi!, ]]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        int int27 = charSequenceList2.indexOf((java.lang.Object) charSequence26);
        int int28 = charSequenceList2.size();
        java.lang.Object obj29 = charSequenceList2.clone();
        java.lang.CharSequence charSequence30 = charSequenceList2.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream31 = charSequenceList2.stream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "hi!" + "'", charSequence30, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream31);
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence charSequence17 = charSequenceList12.peek();
        java.lang.CharSequence charSequence18 = charSequenceList12.pollFirst();
        boolean boolean19 = charSequenceList2.contains((java.lang.Object) charSequence18);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream20 = charSequenceList2.parallelStream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "hi!" + "'", charSequence18, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceStream20);
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence22 = charSequenceList17.peek();
        boolean boolean24 = charSequenceList17.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean25 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        charSequenceList17.clear();
        java.lang.CharSequence charSequence27 = charSequenceList17.poll();
        boolean boolean28 = charSequenceList17.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence30 = charSequenceList17.remove((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(charSequence27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        java.util.LinkedList<java.lang.CharSequence> charSequenceList0 = new java.util.LinkedList<java.lang.CharSequence>();
        java.lang.CharSequence charSequence1 = charSequenceList0.poll();
        java.lang.CharSequence[] charSequenceArray4 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList5, charSequenceArray4);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator7 = charSequenceList5.spliterator();
        boolean boolean8 = charSequenceList5.isEmpty();
        charSequenceList5.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str11 = charSequenceList5.toString();
        java.lang.CharSequence charSequence12 = charSequenceList5.removeFirst();
        boolean boolean14 = charSequenceList5.removeLastOccurrence((java.lang.Object) (short) 100);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        int int20 = charSequenceList17.size();
        java.lang.CharSequence charSequence21 = charSequenceList17.remove();
        boolean boolean22 = charSequenceList5.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = charSequenceList25.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator34 = charSequenceList32.spliterator();
        int int35 = charSequenceList32.size();
        boolean boolean36 = charSequenceList25.contains((java.lang.Object) charSequenceList32);
        java.lang.CharSequence charSequence37 = charSequenceList25.element();
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator42 = charSequenceList40.spliterator();
        boolean boolean43 = charSequenceList40.isEmpty();
        charSequenceList40.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str46 = charSequenceList40.toString();
        boolean boolean47 = charSequenceList25.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        boolean boolean49 = charSequenceList40.offer((java.lang.CharSequence) "");
        charSequenceList40.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList40.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence56 = charSequenceList40.getLast();
        boolean boolean57 = charSequenceList17.contains((java.lang.Object) charSequenceList40);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean58 = charSequenceList0.addAll((int) (byte) 10, (java.util.Collection<java.lang.CharSequence>) charSequenceList17);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(charSequence1);
        org.junit.Assert.assertNotNull(charSequenceArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[hi!, ]" + "'", str11, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "hi!" + "'", charSequence12, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "" + "'", charSequence21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "hi!" + "'", charSequence37, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[hi!, ]" + "'", str46, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + charSequence56 + "' != '" + "" + "'", charSequence56, "");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        java.lang.CharSequence charSequence10 = charSequenceList2.peek();
        java.lang.CharSequence charSequence11 = null;
        charSequenceList2.push(charSequence11);
        java.lang.CharSequence charSequence13 = charSequenceList2.removeLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence25 = charSequenceList2.getFirst();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor26 = charSequenceList2.listIterator();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = charSequenceList29.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceList36.spliterator();
        int int39 = charSequenceList36.size();
        boolean boolean40 = charSequenceList29.contains((java.lang.Object) charSequenceList36);
        java.lang.CharSequence charSequence41 = charSequenceList36.removeFirst();
        java.lang.CharSequence charSequence42 = charSequenceList36.pollLast();
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean49 = charSequenceList45.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList48);
        java.lang.CharSequence charSequence50 = charSequenceList45.peek();
        boolean boolean52 = charSequenceList45.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList55 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55, charSequenceArray54);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList58 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean59 = charSequenceList55.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList58);
        boolean boolean60 = charSequenceList45.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58);
        boolean boolean61 = charSequenceList36.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58);
        java.lang.CharSequence[] charSequenceArray63 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList64 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64, charSequenceArray63);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList67 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean68 = charSequenceList64.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList67);
        boolean boolean70 = charSequenceList64.offerFirst((java.lang.CharSequence) "hi!");
        boolean boolean71 = charSequenceList58.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64);
        boolean boolean72 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64);
        java.lang.CharSequence charSequence73 = charSequenceList64.remove();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream74 = charSequenceList64.stream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertNotNull(charSequenceItor26);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "" + "'", charSequence41, "");
        org.junit.Assert.assertNull(charSequence42);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "hi!" + "'", charSequence50, "hi!");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(charSequenceArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + charSequence73 + "' != '" + "hi!" + "'", charSequence73, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream74);
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence22 = charSequenceList17.peek();
        boolean boolean24 = charSequenceList17.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean25 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence26 = charSequenceList2.pop();
        java.lang.CharSequence charSequence27 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.Object obj35 = charSequenceList33.clone();
        int int36 = charSequenceList2.indexOf((java.lang.Object) charSequenceList33);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream37 = charSequenceList2.parallelStream();
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = charSequenceList40.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        int int46 = charSequenceList40.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence47 = charSequenceList40.removeLast();
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList50 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50, charSequenceArray49);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator52 = charSequenceList50.spliterator();
        int int53 = charSequenceList50.size();
        java.lang.CharSequence charSequence54 = charSequenceList50.remove();
        boolean boolean56 = charSequenceList50.offerLast((java.lang.CharSequence) "[]");
        java.lang.CharSequence charSequence57 = null;
        boolean boolean58 = charSequenceList50.offer(charSequence57);
        int int59 = charSequenceList40.indexOf((java.lang.Object) boolean58);
        boolean boolean60 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNull(charSequence27);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "[]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(charSequenceStream37);
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "hi!" + "'", charSequence47, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "" + "'", charSequence54, "");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList2.spliterator();
        boolean boolean12 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence13 = charSequenceList2.element();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceList2.stream();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor15 = charSequenceList2.listIterator();
        boolean boolean17 = charSequenceList2.offer((java.lang.CharSequence) "[]");
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceList20.spliterator();
        int int23 = charSequenceList20.size();
        java.lang.CharSequence charSequence24 = charSequenceList20.remove();
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator29 = charSequenceList27.spliterator();
        boolean boolean30 = charSequenceList27.isEmpty();
        charSequenceList27.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean34 = charSequenceList27.offerLast((java.lang.CharSequence) "");
        charSequenceList27.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence37 = charSequenceList27.removeLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor38 = charSequenceList27.listIterator();
        boolean boolean39 = charSequenceList20.removeLastOccurrence((java.lang.Object) charSequenceList27);
        boolean boolean41 = charSequenceList27.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray43 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList44 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList44, charSequenceArray43);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = charSequenceList44.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList47);
        java.lang.CharSequence charSequence49 = charSequenceList44.peek();
        java.lang.CharSequence charSequence50 = charSequenceList44.pollFirst();
        charSequenceList44.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList55 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55, charSequenceArray54);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList58 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean59 = charSequenceList55.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList58);
        java.lang.Object obj60 = null;
        boolean boolean61 = charSequenceList55.equals(obj60);
        java.lang.CharSequence[] charSequenceArray63 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList64 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64, charSequenceArray63);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator66 = charSequenceList64.spliterator();
        boolean boolean67 = charSequenceList55.removeLastOccurrence((java.lang.Object) charSequenceList64);
        java.lang.CharSequence charSequence68 = charSequenceList64.removeLast();
        boolean boolean69 = charSequenceList44.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64);
        java.lang.CharSequence[] charSequenceArray71 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList72 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList72, charSequenceArray71);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator74 = charSequenceList72.spliterator();
        boolean boolean75 = charSequenceList72.isEmpty();
        charSequenceList72.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean79 = charSequenceList72.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence80 = charSequenceList72.pop();
        charSequenceList72.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence83 = charSequenceList72.poll();
        boolean boolean84 = charSequenceList64.contains((java.lang.Object) charSequenceList72);
        boolean boolean85 = charSequenceList27.removeFirstOccurrence((java.lang.Object) charSequenceList64);
        boolean boolean86 = charSequenceList2.remove((java.lang.Object) charSequenceList64);
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList64.add(2, (java.lang.CharSequence) "[[hi!, ]]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 2, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "" + "'", charSequence24, "");
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "" + "'", charSequence37, "");
        org.junit.Assert.assertNotNull(charSequenceItor38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(charSequenceArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "hi!" + "'", charSequence49, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "hi!" + "'", charSequence50, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charSequenceArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + charSequence68 + "' != '" + "" + "'", charSequence68, "");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(charSequenceArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertEquals("'" + charSequence80 + "' != '" + "hi!" + "'", charSequence80, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence83 + "' != '" + "hi!" + "'", charSequence83, "hi!");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.pop();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence13 = charSequenceList2.poll();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = charSequenceList16.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence charSequence21 = charSequenceList16.peek();
        boolean boolean23 = charSequenceList16.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList26 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26, charSequenceArray25);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = charSequenceList26.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        boolean boolean31 = charSequenceList16.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        charSequenceList16.clear();
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = charSequenceList35.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        java.lang.Object obj40 = charSequenceList38.clone();
        int int41 = charSequenceList16.lastIndexOf((java.lang.Object) charSequenceList38);
        java.lang.CharSequence charSequence42 = charSequenceList38.peekFirst();
        java.lang.CharSequence charSequence43 = charSequenceList38.peekFirst();
        boolean boolean44 = charSequenceList2.removeFirstOccurrence((java.lang.Object) charSequenceList38);
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList50 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean51 = charSequenceList47.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList50);
        java.lang.CharSequence[] charSequenceArray53 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList54 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList54, charSequenceArray53);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator56 = charSequenceList54.spliterator();
        int int57 = charSequenceList54.size();
        boolean boolean58 = charSequenceList47.contains((java.lang.Object) charSequenceList54);
        java.lang.CharSequence charSequence59 = charSequenceList47.element();
        java.lang.CharSequence[] charSequenceArray61 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList62 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList62, charSequenceArray61);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator64 = charSequenceList62.spliterator();
        boolean boolean65 = charSequenceList62.isEmpty();
        charSequenceList62.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str68 = charSequenceList62.toString();
        boolean boolean69 = charSequenceList47.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList62);
        boolean boolean71 = charSequenceList62.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence72 = charSequenceList62.getLast();
        boolean boolean74 = charSequenceList62.removeLastOccurrence((java.lang.Object) 100.0d);
        java.lang.CharSequence charSequence75 = charSequenceList62.getFirst();
        boolean boolean76 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList62);
        java.lang.CharSequence charSequence77 = charSequenceList62.pop();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "hi!" + "'", charSequence21, "hi!");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(charSequence42);
        org.junit.Assert.assertNull(charSequence43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(charSequenceArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + charSequence59 + "' != '" + "hi!" + "'", charSequence59, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[hi!, ]" + "'", str68, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertEquals("'" + charSequence72 + "' != '" + "" + "'", charSequence72, "");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + charSequence75 + "' != '" + "hi!" + "'", charSequence75, "hi!");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + charSequence77 + "' != '" + "hi!" + "'", charSequence77, "hi!");
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        charSequenceList2.clear();
        boolean boolean20 = charSequenceList2.add((java.lang.CharSequence) "[hi!, ]");
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator21 = charSequenceList2.spliterator();
        java.lang.CharSequence charSequence22 = charSequenceList2.pop();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator21);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "[hi!, ]" + "'", charSequence22, "[hi!, ]");
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceList12.spliterator();
        boolean boolean15 = charSequenceList12.isEmpty();
        java.lang.CharSequence charSequence16 = charSequenceList12.removeLast();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence charSequence24 = charSequenceList19.peek();
        boolean boolean26 = charSequenceList19.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = charSequenceList29.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        boolean boolean34 = charSequenceList19.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.CharSequence charSequence35 = charSequenceList19.pop();
        boolean boolean36 = charSequenceList12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = charSequenceList39.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        java.lang.Object obj44 = null;
        boolean boolean45 = charSequenceList39.equals(obj44);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence charSequence47 = charSequenceList39.peek();
        java.lang.CharSequence charSequence48 = charSequenceList39.remove();
        boolean boolean49 = charSequenceList19.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean50 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList53 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53, charSequenceArray52);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = charSequenceList53.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList56);
        int int59 = charSequenceList53.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean61 = charSequenceList53.contains((java.lang.Object) (-1.0d));
        java.lang.CharSequence charSequence62 = charSequenceList53.getFirst();
        boolean boolean63 = charSequenceList39.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.CharSequence> charSequenceItor65 = charSequenceList39.listIterator((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[]" + "'", str8, "[]");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "hi!" + "'", charSequence24, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "hi!" + "'", charSequence47, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "hi!" + "'", charSequence48, "hi!");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + charSequence62 + "' != '" + "hi!" + "'", charSequence62, "hi!");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence25 = charSequenceList2.getFirst();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor26 = charSequenceList2.listIterator();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = charSequenceList29.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceList36.spliterator();
        int int39 = charSequenceList36.size();
        boolean boolean40 = charSequenceList29.contains((java.lang.Object) charSequenceList36);
        java.lang.CharSequence charSequence41 = charSequenceList36.removeFirst();
        java.lang.CharSequence charSequence42 = charSequenceList36.pollLast();
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean49 = charSequenceList45.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList48);
        java.lang.CharSequence charSequence50 = charSequenceList45.peek();
        boolean boolean52 = charSequenceList45.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList55 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55, charSequenceArray54);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList58 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean59 = charSequenceList55.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList58);
        boolean boolean60 = charSequenceList45.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58);
        boolean boolean61 = charSequenceList36.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58);
        java.lang.CharSequence[] charSequenceArray63 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList64 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64, charSequenceArray63);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList67 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean68 = charSequenceList64.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList67);
        boolean boolean70 = charSequenceList64.offerFirst((java.lang.CharSequence) "hi!");
        boolean boolean71 = charSequenceList58.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64);
        boolean boolean72 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64);
        int int73 = charSequenceList64.size();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertNotNull(charSequenceItor26);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "" + "'", charSequence41, "");
        org.junit.Assert.assertNull(charSequence42);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "hi!" + "'", charSequence50, "hi!");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(charSequenceArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2 + "'", int73 == 2);
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence charSequence15 = charSequenceList9.pollLast();
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = charSequenceList18.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        java.lang.CharSequence charSequence23 = charSequenceList18.peek();
        boolean boolean25 = charSequenceList18.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = charSequenceList28.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean33 = charSequenceList18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean34 = charSequenceList9.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        boolean boolean43 = charSequenceList37.offerFirst((java.lang.CharSequence) "hi!");
        boolean boolean44 = charSequenceList31.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceList47.spliterator();
        boolean boolean50 = charSequenceList47.isEmpty();
        java.lang.CharSequence charSequence51 = charSequenceList47.removeLast();
        java.lang.CharSequence[] charSequenceArray53 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList54 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList54, charSequenceArray53);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList57 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean58 = charSequenceList54.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList57);
        java.lang.CharSequence charSequence59 = charSequenceList54.peek();
        boolean boolean61 = charSequenceList54.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray63 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList64 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64, charSequenceArray63);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList67 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean68 = charSequenceList64.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList67);
        boolean boolean69 = charSequenceList54.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList67);
        java.lang.CharSequence charSequence70 = charSequenceList54.pop();
        boolean boolean71 = charSequenceList47.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList54);
        java.lang.CharSequence[] charSequenceArray73 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList74 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList74, charSequenceArray73);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList77 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean78 = charSequenceList74.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList77);
        java.lang.Object obj79 = null;
        boolean boolean80 = charSequenceList74.equals(obj79);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList81 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList74);
        java.lang.CharSequence charSequence82 = charSequenceList74.peek();
        java.lang.CharSequence charSequence83 = charSequenceList74.remove();
        boolean boolean84 = charSequenceList54.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList74);
        boolean boolean85 = charSequenceList31.removeFirstOccurrence((java.lang.Object) charSequenceList74);
        java.lang.CharSequence charSequence86 = charSequenceList31.peekLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNull(charSequence15);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "hi!" + "'", charSequence23, "hi!");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "" + "'", charSequence51, "");
        org.junit.Assert.assertNotNull(charSequenceArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + charSequence59 + "' != '" + "hi!" + "'", charSequence59, "hi!");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charSequenceArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + charSequence70 + "' != '" + "hi!" + "'", charSequence70, "hi!");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(charSequenceArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + charSequence82 + "' != '" + "hi!" + "'", charSequence82, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence83 + "' != '" + "hi!" + "'", charSequence83, "hi!");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(charSequence86);
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor25 = charSequenceList2.descendingIterator();
        java.lang.CharSequence charSequence26 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.Object obj35 = null;
        boolean boolean36 = charSequenceList30.equals(obj35);
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = charSequenceList39.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        java.lang.CharSequence charSequence44 = charSequenceList39.peek();
        java.lang.CharSequence charSequence45 = charSequenceList39.pollFirst();
        boolean boolean46 = charSequenceList30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = charSequenceList49.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        java.lang.CharSequence charSequence54 = charSequenceList49.peek();
        int int55 = charSequenceList30.indexOf((java.lang.Object) charSequence54);
        int int56 = charSequenceList30.size();
        java.lang.Object obj57 = charSequenceList30.clone();
        boolean boolean58 = charSequenceList2.addAll((int) (short) 1, (java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        java.lang.CharSequence charSequence59 = charSequenceList2.getFirst();
        java.lang.Object[] objArray60 = charSequenceList2.toArray();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.CharSequence> charSequenceList63 = charSequenceList2.subList((int) (byte) 0, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(0) > toIndex(-1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceItor25);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "hi!" + "'", charSequence44, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence45 + "' != '" + "hi!" + "'", charSequence45, "hi!");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "hi!" + "'", charSequence54, "hi!");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + charSequence59 + "' != '" + "hi!" + "'", charSequence59, "hi!");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[hi!, hi!, hi!, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[hi!, hi!, hi!, ]");
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence charSequence18 = charSequenceList15.poll();
        charSequenceList15.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.Object obj21 = charSequenceList15.clone();
        java.lang.String str22 = charSequenceList15.toString();
        java.lang.CharSequence charSequence24 = charSequenceList15.get((int) (short) 0);
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor26 = charSequenceList15.listIterator(0);
        boolean boolean28 = charSequenceList15.offer((java.lang.CharSequence) "[hi!]");
        java.lang.CharSequence charSequence29 = charSequenceList15.pop();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(charSequence18);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "[[hi!, ]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "[[hi!, ]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "[[hi!, ]]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[[hi!, ]]" + "'", str22, "[[hi!, ]]");
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "[hi!, ]" + "'", charSequence24, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceItor26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "[hi!, ]" + "'", charSequence29, "[hi!, ]");
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.poll();
        java.lang.String str9 = charSequenceList2.toString();
        int int10 = charSequenceList2.size();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence11 = charSequenceList2.getLast();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[]" + "'", str9, "[]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceList17.pollFirst();
        java.lang.CharSequence charSequence28 = charSequenceList17.element();
        java.lang.Object[] objArray29 = charSequenceList17.toArray();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[, ]");
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceList2.stream();
        java.lang.CharSequence charSequence16 = null;
        charSequenceList2.add(0, charSequence16);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator29 = charSequenceList27.spliterator();
        int int30 = charSequenceList27.size();
        boolean boolean31 = charSequenceList20.contains((java.lang.Object) charSequenceList27);
        java.lang.CharSequence charSequence32 = charSequenceList20.element();
        boolean boolean33 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        boolean boolean34 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence35 = charSequenceList2.pollFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "hi!" + "'", charSequence32, "hi!");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        java.lang.CharSequence charSequence9 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence charSequence17 = charSequenceList12.peek();
        boolean boolean19 = charSequenceList12.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence charSequence20 = charSequenceList12.poll();
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean23 = charSequenceList12.offerFirst((java.lang.CharSequence) "hi!");
        boolean boolean24 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence26 = charSequenceList12.get((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "hi!" + "'", charSequence20, "hi!");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence charSequence9 = charSequenceList2.removeFirst();
        boolean boolean11 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor12 = charSequenceList2.listIterator();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = charSequenceList16.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence charSequence21 = charSequenceList16.peek();
        boolean boolean23 = charSequenceList16.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList16.spliterator();
        boolean boolean26 = charSequenceList16.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence27 = charSequenceList16.element();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator28 = charSequenceList16.spliterator();
        java.lang.CharSequence charSequence29 = charSequenceList16.poll();
        boolean boolean30 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        charSequenceList16.clear();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(charSequenceItor12);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "hi!" + "'", charSequence21, "hi!");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertNotNull(charSequenceSpliterator28);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean10 = charSequenceList2.offerLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.String str11 = charSequenceList2.toString();
        java.lang.CharSequence charSequence12 = charSequenceList2.pop();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = charSequenceList15.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList18);
        java.lang.CharSequence charSequence20 = charSequenceList15.peek();
        boolean boolean22 = charSequenceList15.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = charSequenceList25.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        boolean boolean30 = charSequenceList15.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence charSequence31 = charSequenceList28.poll();
        charSequenceList28.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.Object obj34 = charSequenceList28.clone();
        java.lang.String str35 = charSequenceList28.toString();
        java.lang.CharSequence charSequence37 = charSequenceList28.get((int) (short) 0);
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = charSequenceList40.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        java.lang.Object obj45 = null;
        boolean boolean46 = charSequenceList40.equals(obj45);
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = charSequenceList49.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        java.lang.CharSequence charSequence54 = charSequenceList49.peek();
        boolean boolean56 = charSequenceList49.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray58 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList59 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList59, charSequenceArray58);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList62 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean63 = charSequenceList59.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList62);
        boolean boolean64 = charSequenceList49.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList62);
        java.lang.CharSequence charSequence65 = charSequenceList62.poll();
        boolean boolean66 = charSequenceList40.remove((java.lang.Object) charSequenceList62);
        int int67 = charSequenceList28.indexOf((java.lang.Object) boolean66);
        boolean boolean68 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList69 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        java.lang.CharSequence charSequence70 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray72 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList73 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList73, charSequenceArray72);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList76 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean77 = charSequenceList73.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList76);
        java.lang.CharSequence[] charSequenceArray79 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList80 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList80, charSequenceArray79);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator82 = charSequenceList80.spliterator();
        int int83 = charSequenceList80.size();
        boolean boolean84 = charSequenceList73.contains((java.lang.Object) charSequenceList80);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream85 = charSequenceList73.stream();
        java.lang.CharSequence charSequence86 = charSequenceList73.getFirst();
        boolean boolean87 = charSequenceList2.remove((java.lang.Object) charSequenceList73);
        java.lang.CharSequence charSequence88 = charSequenceList73.peekFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[hi!, [hi!, ]]" + "'", str11, "[hi!, [hi!, ]]");
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "hi!" + "'", charSequence12, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "hi!" + "'", charSequence20, "hi!");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(charSequence31);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "[[hi!, ]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "[[hi!, ]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "[[hi!, ]]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[[hi!, ]]" + "'", str35, "[[hi!, ]]");
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "[hi!, ]" + "'", charSequence37, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "hi!" + "'", charSequence54, "hi!");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charSequenceArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(charSequence65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertEquals("'" + charSequence70 + "' != '" + "[hi!, ]" + "'", charSequence70, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(charSequenceArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(charSequenceStream85);
        org.junit.Assert.assertEquals("'" + charSequence86 + "' != '" + "hi!" + "'", charSequence86, "hi!");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertEquals("'" + charSequence88 + "' != '" + "hi!" + "'", charSequence88, "hi!");
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence22 = charSequenceList17.peek();
        boolean boolean24 = charSequenceList17.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean25 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        charSequenceList17.clear();
        java.lang.CharSequence charSequence27 = charSequenceList17.poll();
        java.lang.Object obj28 = null;
        boolean boolean29 = charSequenceList17.removeFirstOccurrence(obj28);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(charSequence27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence charSequence15 = charSequenceList9.pollLast();
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = charSequenceList18.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        java.lang.CharSequence charSequence23 = charSequenceList18.peek();
        boolean boolean25 = charSequenceList18.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = charSequenceList28.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean33 = charSequenceList18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean34 = charSequenceList9.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        boolean boolean43 = charSequenceList37.offerFirst((java.lang.CharSequence) "hi!");
        boolean boolean44 = charSequenceList31.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceList47.spliterator();
        boolean boolean50 = charSequenceList47.isEmpty();
        java.lang.CharSequence charSequence51 = charSequenceList47.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream52 = charSequenceList47.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream53 = charSequenceList47.parallelStream();
        java.lang.Object[] objArray54 = charSequenceList47.toArray();
        boolean boolean55 = charSequenceList37.remove((java.lang.Object) objArray54);
        boolean boolean57 = charSequenceList37.removeLastOccurrence((java.lang.Object) 10.0d);
        charSequenceList37.push((java.lang.CharSequence) "[]");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence61 = charSequenceList37.get((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNull(charSequence15);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "hi!" + "'", charSequence23, "hi!");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "" + "'", charSequence51, "");
        org.junit.Assert.assertNotNull(charSequenceStream52);
        org.junit.Assert.assertNotNull(charSequenceStream53);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceList24.spliterator();
        int int27 = charSequenceList24.size();
        boolean boolean28 = charSequenceList17.contains((java.lang.Object) charSequenceList24);
        java.lang.CharSequence charSequence29 = charSequenceList24.removeFirst();
        java.lang.CharSequence charSequence30 = charSequenceList24.pollLast();
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList33, charSequenceArray32);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean37 = charSequenceList33.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList36);
        java.lang.CharSequence charSequence38 = charSequenceList33.peek();
        boolean boolean40 = charSequenceList33.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList43, charSequenceArray42);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = charSequenceList43.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        boolean boolean48 = charSequenceList33.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        boolean boolean49 = charSequenceList24.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        java.lang.CharSequence[] charSequenceArray51 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52, charSequenceArray51);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList55 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean56 = charSequenceList52.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList55);
        boolean boolean58 = charSequenceList52.offerFirst((java.lang.CharSequence) "hi!");
        boolean boolean59 = charSequenceList46.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor60 = charSequenceList52.listIterator();
        boolean boolean61 = charSequenceList11.remove((java.lang.Object) charSequenceItor60);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "" + "'", charSequence29, "");
        org.junit.Assert.assertNull(charSequence30);
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "hi!" + "'", charSequence38, "hi!");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(charSequenceArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(charSequenceItor60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean10 = charSequenceList2.offerLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.String str11 = charSequenceList2.toString();
        java.lang.CharSequence charSequence12 = charSequenceList2.pop();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = charSequenceList15.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList18);
        java.lang.CharSequence charSequence20 = charSequenceList15.peek();
        boolean boolean22 = charSequenceList15.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = charSequenceList25.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        boolean boolean30 = charSequenceList15.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence charSequence31 = charSequenceList28.poll();
        charSequenceList28.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.Object obj34 = charSequenceList28.clone();
        java.lang.String str35 = charSequenceList28.toString();
        java.lang.CharSequence charSequence37 = charSequenceList28.get((int) (short) 0);
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = charSequenceList40.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        java.lang.Object obj45 = null;
        boolean boolean46 = charSequenceList40.equals(obj45);
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = charSequenceList49.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        java.lang.CharSequence charSequence54 = charSequenceList49.peek();
        boolean boolean56 = charSequenceList49.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray58 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList59 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList59, charSequenceArray58);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList62 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean63 = charSequenceList59.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList62);
        boolean boolean64 = charSequenceList49.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList62);
        java.lang.CharSequence charSequence65 = charSequenceList62.poll();
        boolean boolean66 = charSequenceList40.remove((java.lang.Object) charSequenceList62);
        int int67 = charSequenceList28.indexOf((java.lang.Object) boolean66);
        boolean boolean68 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence charSequence69 = charSequenceList28.peek();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[hi!, [hi!, ]]" + "'", str11, "[hi!, [hi!, ]]");
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "hi!" + "'", charSequence12, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "hi!" + "'", charSequence20, "hi!");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(charSequence31);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "[[hi!, ]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "[[hi!, ]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "[[hi!, ]]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[[hi!, ]]" + "'", str35, "[[hi!, ]]");
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "[hi!, ]" + "'", charSequence37, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "hi!" + "'", charSequence54, "hi!");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charSequenceArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(charSequence65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertEquals("'" + charSequence69 + "' != '" + "[hi!, ]" + "'", charSequence69, "[hi!, ]");
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence charSequence17 = charSequenceList12.peek();
        java.lang.CharSequence charSequence18 = charSequenceList12.pollFirst();
        boolean boolean19 = charSequenceList2.contains((java.lang.Object) charSequence18);
        java.lang.CharSequence charSequence21 = charSequenceList2.remove((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.CharSequence> charSequenceList24 = charSequenceList2.subList(100, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(100) > toIndex(1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "hi!" + "'", charSequence18, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "" + "'", charSequence21, "");
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor5 = charSequenceList2.descendingIterator();
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList8 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList8.spliterator();
        java.util.LinkedList<java.lang.Comparable<java.lang.String>> strComparableList11 = new java.util.LinkedList<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = charSequenceList8.contains((java.lang.Object) strComparableList11);
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = charSequenceList15.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        int int25 = charSequenceList22.size();
        boolean boolean26 = charSequenceList15.contains((java.lang.Object) charSequenceList22);
        java.lang.CharSequence charSequence27 = charSequenceList15.element();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator39 = charSequenceList37.spliterator();
        int int40 = charSequenceList37.size();
        boolean boolean41 = charSequenceList30.contains((java.lang.Object) charSequenceList37);
        java.lang.CharSequence charSequence42 = charSequenceList30.element();
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator47 = charSequenceList45.spliterator();
        boolean boolean48 = charSequenceList45.isEmpty();
        charSequenceList45.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str51 = charSequenceList45.toString();
        boolean boolean52 = charSequenceList30.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        boolean boolean54 = charSequenceList45.offer((java.lang.CharSequence) "");
        charSequenceList45.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean59 = charSequenceList45.add((java.lang.CharSequence) "");
        int int60 = charSequenceList15.lastIndexOf((java.lang.Object) boolean59);
        boolean boolean61 = charSequenceList8.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray63 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList64 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64, charSequenceArray63);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList67 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean68 = charSequenceList64.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList67);
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList71 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList71, charSequenceArray70);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator73 = charSequenceList71.spliterator();
        int int74 = charSequenceList71.size();
        boolean boolean75 = charSequenceList64.contains((java.lang.Object) charSequenceList71);
        java.lang.CharSequence charSequence76 = charSequenceList64.element();
        java.lang.CharSequence[] charSequenceArray78 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList79 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList79, charSequenceArray78);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator81 = charSequenceList79.spliterator();
        boolean boolean82 = charSequenceList79.isEmpty();
        charSequenceList79.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str85 = charSequenceList79.toString();
        boolean boolean86 = charSequenceList64.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList79);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream87 = charSequenceList79.stream();
        boolean boolean88 = charSequenceList15.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList79);
        boolean boolean89 = charSequenceList2.equals((java.lang.Object) charSequenceList79);
        boolean boolean91 = charSequenceList2.offerLast((java.lang.CharSequence) "hi!");
        charSequenceList2.addLast((java.lang.CharSequence) "[[hi!, ], hi!, ]");
        boolean boolean95 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertNotNull(charSequenceItor5);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[hi!, ]" + "'", str51, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(charSequenceArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + charSequence76 + "' != '" + "hi!" + "'", charSequence76, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[hi!, ]" + "'", str85, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(charSequenceStream87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor25 = charSequenceList2.descendingIterator();
        java.lang.CharSequence charSequence26 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.CharSequence charSequence35 = charSequenceList30.peek();
        boolean boolean37 = charSequenceList30.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceList30.spliterator();
        boolean boolean40 = charSequenceList30.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence41 = charSequenceList30.element();
        java.lang.CharSequence charSequence42 = charSequenceList30.peekLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor43 = charSequenceList30.listIterator();
        charSequenceList30.addFirst((java.lang.CharSequence) "[hi!]");
        boolean boolean46 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList50 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50, charSequenceArray49);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator52 = charSequenceList50.spliterator();
        boolean boolean53 = charSequenceList50.isEmpty();
        java.lang.CharSequence charSequence54 = charSequenceList50.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream55 = charSequenceList50.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream56 = charSequenceList50.parallelStream();
        java.lang.CharSequence[] charSequenceArray58 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList59 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList59, charSequenceArray58);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList62 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean63 = charSequenceList59.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList62);
        java.lang.CharSequence[] charSequenceArray65 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList66 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList66, charSequenceArray65);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator68 = charSequenceList66.spliterator();
        int int69 = charSequenceList66.size();
        boolean boolean70 = charSequenceList59.contains((java.lang.Object) charSequenceList66);
        java.lang.CharSequence[] charSequenceArray72 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList73 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList73, charSequenceArray72);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList76 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean77 = charSequenceList73.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList76);
        java.lang.CharSequence charSequence78 = charSequenceList73.peek();
        java.lang.CharSequence charSequence79 = charSequenceList73.pollFirst();
        java.lang.CharSequence[] charSequenceArray81 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList82 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList82, charSequenceArray81);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator84 = charSequenceList82.spliterator();
        boolean boolean85 = charSequenceList82.isEmpty();
        charSequenceList82.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean89 = charSequenceList82.offerLast((java.lang.CharSequence) "");
        charSequenceList82.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean92 = charSequenceList73.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList82);
        boolean boolean93 = charSequenceList66.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList73);
        int int94 = charSequenceList50.lastIndexOf((java.lang.Object) charSequenceList66);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream95 = charSequenceList66.stream();
        boolean boolean96 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList66);
        java.lang.CharSequence charSequence98 = charSequenceList2.get(2);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceItor25);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertNotNull(charSequenceItor43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "" + "'", charSequence54, "");
        org.junit.Assert.assertNotNull(charSequenceStream55);
        org.junit.Assert.assertNotNull(charSequenceStream56);
        org.junit.Assert.assertNotNull(charSequenceArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(charSequenceArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(charSequenceArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + charSequence78 + "' != '" + "hi!" + "'", charSequence78, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence79 + "' != '" + "hi!" + "'", charSequence79, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertNotNull(charSequenceStream95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertEquals("'" + charSequence98 + "' != '" + "hi!" + "'", charSequence98, "hi!");
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor25 = charSequenceList2.descendingIterator();
        java.lang.CharSequence charSequence26 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.CharSequence charSequence35 = charSequenceList30.peek();
        boolean boolean37 = charSequenceList30.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceList30.spliterator();
        boolean boolean40 = charSequenceList30.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence41 = charSequenceList30.element();
        java.lang.CharSequence charSequence42 = charSequenceList30.peekLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor43 = charSequenceList30.listIterator();
        charSequenceList30.addFirst((java.lang.CharSequence) "[hi!]");
        boolean boolean46 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = charSequenceList49.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        java.lang.CharSequence[] charSequenceArray55 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56, charSequenceArray55);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator58 = charSequenceList56.spliterator();
        int int59 = charSequenceList56.size();
        boolean boolean60 = charSequenceList49.contains((java.lang.Object) charSequenceList56);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream61 = charSequenceList49.stream();
        java.lang.CharSequence charSequence63 = null;
        charSequenceList49.add(0, charSequence63);
        java.lang.CharSequence charSequence65 = charSequenceList49.removeFirst();
        java.lang.CharSequence charSequence66 = charSequenceList49.peekFirst();
        boolean boolean67 = charSequenceList30.removeFirstOccurrence((java.lang.Object) charSequenceList49);
        java.lang.Object[] objArray68 = charSequenceList30.toArray();
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList71 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList71, charSequenceArray70);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList74 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean75 = charSequenceList71.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList74);
        java.lang.Object obj76 = null;
        boolean boolean77 = charSequenceList71.equals(obj76);
        java.lang.CharSequence[] charSequenceArray79 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList80 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList80, charSequenceArray79);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator82 = charSequenceList80.spliterator();
        boolean boolean83 = charSequenceList71.removeLastOccurrence((java.lang.Object) charSequenceList80);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator84 = charSequenceList80.spliterator();
        java.lang.CharSequence charSequence85 = charSequenceList80.element();
        boolean boolean87 = charSequenceList80.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence88 = charSequenceList80.pop();
        charSequenceList80.addLast((java.lang.CharSequence) "");
        boolean boolean91 = charSequenceList30.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList80);
        java.lang.CharSequence charSequence92 = charSequenceList80.pollLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceItor25);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertNotNull(charSequenceItor43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charSequenceArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(charSequenceStream61);
        org.junit.Assert.assertNull(charSequence65);
        org.junit.Assert.assertEquals("'" + charSequence66 + "' != '" + "hi!" + "'", charSequence66, "hi!");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[[hi!], hi!, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[[hi!], hi!, hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(charSequenceArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator84);
        org.junit.Assert.assertEquals("'" + charSequence85 + "' != '" + "" + "'", charSequence85, "");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertEquals("'" + charSequence88 + "' != '" + "[hi!, ]" + "'", charSequence88, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + charSequence92 + "' != '" + "" + "'", charSequence92, "");
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence charSequence18 = charSequenceList2.pop();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        java.lang.CharSequence charSequence27 = charSequenceList21.poll();
        boolean boolean28 = charSequenceList2.remove((java.lang.Object) charSequence27);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.Object obj36 = null;
        boolean boolean37 = charSequenceList31.equals(obj36);
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = charSequenceList40.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        java.lang.CharSequence charSequence45 = charSequenceList40.peek();
        boolean boolean47 = charSequenceList40.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList50 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50, charSequenceArray49);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList53 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean54 = charSequenceList50.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList53);
        boolean boolean55 = charSequenceList40.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53);
        java.lang.CharSequence charSequence56 = charSequenceList53.poll();
        boolean boolean57 = charSequenceList31.remove((java.lang.Object) charSequenceList53);
        boolean boolean58 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "hi!" + "'", charSequence18, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + charSequence45 + "' != '" + "hi!" + "'", charSequence45, "hi!");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(charSequence56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence charSequence15 = charSequenceList9.pollLast();
        charSequenceList9.clear();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator21 = charSequenceList19.spliterator();
        java.lang.Object obj22 = charSequenceList19.clone();
        boolean boolean23 = charSequenceList9.remove(obj22);
        java.lang.Object[] objArray24 = charSequenceList9.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor25 = charSequenceList9.descendingIterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNull(charSequence15);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor25);
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceList11.spliterator();
        java.lang.CharSequence charSequence16 = charSequenceList11.element();
        boolean boolean18 = charSequenceList11.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceList28.spliterator();
        int int31 = charSequenceList28.size();
        boolean boolean32 = charSequenceList21.contains((java.lang.Object) charSequenceList28);
        java.lang.CharSequence charSequence33 = charSequenceList21.element();
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceList36.spliterator();
        boolean boolean39 = charSequenceList36.isEmpty();
        charSequenceList36.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str42 = charSequenceList36.toString();
        boolean boolean43 = charSequenceList21.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36);
        boolean boolean45 = charSequenceList36.offer((java.lang.CharSequence) "");
        charSequenceList36.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean50 = charSequenceList36.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence51 = charSequenceList36.poll();
        java.lang.CharSequence charSequence52 = charSequenceList36.peek();
        int int53 = charSequenceList11.indexOf((java.lang.Object) charSequenceList36);
        java.lang.CharSequence[] charSequenceArray55 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56, charSequenceArray55);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList59 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean60 = charSequenceList56.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList59);
        java.lang.CharSequence charSequence61 = charSequenceList56.element();
        int int62 = charSequenceList56.size();
        java.lang.CharSequence[] charSequenceArray64 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList65 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList65, charSequenceArray64);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator67 = charSequenceList65.spliterator();
        boolean boolean68 = charSequenceList65.isEmpty();
        charSequenceList65.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean72 = charSequenceList65.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray74 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList75 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList75, charSequenceArray74);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList78 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean79 = charSequenceList75.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList78);
        java.lang.CharSequence charSequence80 = charSequenceList75.peek();
        java.lang.CharSequence charSequence81 = charSequenceList75.pollFirst();
        boolean boolean82 = charSequenceList65.contains((java.lang.Object) charSequence81);
        java.lang.CharSequence charSequence83 = charSequenceList65.peekFirst();
        boolean boolean84 = charSequenceList56.removeLastOccurrence((java.lang.Object) charSequenceList65);
        int int85 = charSequenceList11.lastIndexOf((java.lang.Object) charSequenceList65);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "hi!" + "'", charSequence33, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[hi!, ]" + "'", str42, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "hi!" + "'", charSequence51, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "hi!" + "'", charSequence52, "hi!");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + charSequence61 + "' != '" + "hi!" + "'", charSequence61, "hi!");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(charSequenceArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + charSequence80 + "' != '" + "hi!" + "'", charSequence80, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence81 + "' != '" + "hi!" + "'", charSequence81, "hi!");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertEquals("'" + charSequence83 + "' != '" + "hi!" + "'", charSequence83, "hi!");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.Object obj11 = charSequenceList2.clone();
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = charSequenceList14.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceList21.spliterator();
        int int24 = charSequenceList21.size();
        boolean boolean25 = charSequenceList14.contains((java.lang.Object) charSequenceList21);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream26 = charSequenceList14.stream();
        java.lang.CharSequence charSequence28 = null;
        charSequenceList14.add(0, charSequence28);
        java.lang.CharSequence charSequence30 = charSequenceList14.removeFirst();
        java.lang.CharSequence charSequence31 = charSequenceList14.peekFirst();
        boolean boolean33 = charSequenceList14.offer((java.lang.CharSequence) "");
        boolean boolean34 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        int int43 = charSequenceList37.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence44 = charSequenceList37.removeLast();
        java.lang.CharSequence charSequence45 = charSequenceList37.peekLast();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor46 = charSequenceList37.descendingIterator();
        boolean boolean47 = charSequenceList2.remove((java.lang.Object) charSequenceItor46);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceStream26);
        org.junit.Assert.assertNull(charSequence30);
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "hi!" + "'", charSequence31, "hi!");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "hi!" + "'", charSequence44, "hi!");
        org.junit.Assert.assertNull(charSequence45);
        org.junit.Assert.assertNotNull(charSequenceItor46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList2.removeLastOccurrence(obj9);
        boolean boolean12 = charSequenceList2.remove((java.lang.Object) (short) 10);
        java.lang.CharSequence charSequence13 = charSequenceList2.poll();
        java.lang.CharSequence charSequence14 = charSequenceList2.getFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.pop();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean14 = charSequenceList2.offer((java.lang.CharSequence) "[hi!, ]");
        boolean boolean16 = charSequenceList2.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence17 = charSequenceList2.getFirst();
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        int int26 = charSequenceList20.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence27 = charSequenceList20.removeLast();
        java.lang.CharSequence charSequence28 = charSequenceList20.peekLast();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceList38.spliterator();
        int int41 = charSequenceList38.size();
        boolean boolean42 = charSequenceList31.contains((java.lang.Object) charSequenceList38);
        java.lang.CharSequence charSequence43 = charSequenceList31.element();
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceList46.spliterator();
        boolean boolean49 = charSequenceList46.isEmpty();
        charSequenceList46.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str52 = charSequenceList46.toString();
        boolean boolean53 = charSequenceList31.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceList46.stream();
        boolean boolean55 = charSequenceList20.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        boolean boolean56 = charSequenceList2.contains((java.lang.Object) charSequenceList20);
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor57 = charSequenceList20.listIterator();
        java.lang.CharSequence charSequence58 = charSequenceList20.peek();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.CharSequence> charSequenceItor60 = charSequenceList20.listIterator((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "[hi!, ]" + "'", charSequence17, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "hi!" + "'", charSequence43, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[hi!, ]" + "'", str52, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charSequenceItor57);
        org.junit.Assert.assertEquals("'" + charSequence58 + "' != '" + "hi!" + "'", charSequence58, "hi!");
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor25 = charSequenceList2.descendingIterator();
        java.lang.CharSequence charSequence26 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.CharSequence charSequence35 = charSequenceList30.peek();
        boolean boolean37 = charSequenceList30.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceList30.spliterator();
        boolean boolean40 = charSequenceList30.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence41 = charSequenceList30.element();
        java.lang.CharSequence charSequence42 = charSequenceList30.peekLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor43 = charSequenceList30.listIterator();
        charSequenceList30.addFirst((java.lang.CharSequence) "[hi!]");
        boolean boolean46 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = charSequenceList49.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        java.lang.CharSequence[] charSequenceArray55 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56, charSequenceArray55);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator58 = charSequenceList56.spliterator();
        int int59 = charSequenceList56.size();
        boolean boolean60 = charSequenceList49.contains((java.lang.Object) charSequenceList56);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream61 = charSequenceList49.stream();
        java.lang.CharSequence charSequence63 = null;
        charSequenceList49.add(0, charSequence63);
        java.lang.CharSequence charSequence65 = charSequenceList49.removeFirst();
        java.lang.CharSequence charSequence66 = charSequenceList49.peekFirst();
        boolean boolean67 = charSequenceList30.removeFirstOccurrence((java.lang.Object) charSequenceList49);
        java.lang.Object[] objArray68 = charSequenceList30.toArray();
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList71 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList71, charSequenceArray70);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList74 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean75 = charSequenceList71.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList74);
        java.lang.Object obj76 = null;
        boolean boolean77 = charSequenceList71.equals(obj76);
        java.lang.CharSequence[] charSequenceArray79 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList80 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList80, charSequenceArray79);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator82 = charSequenceList80.spliterator();
        boolean boolean83 = charSequenceList71.removeLastOccurrence((java.lang.Object) charSequenceList80);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator84 = charSequenceList80.spliterator();
        java.lang.CharSequence charSequence85 = charSequenceList80.element();
        boolean boolean87 = charSequenceList80.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence88 = charSequenceList80.pop();
        charSequenceList80.addLast((java.lang.CharSequence) "");
        boolean boolean91 = charSequenceList30.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList80);
        java.lang.Object[] objArray92 = charSequenceList80.toArray();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceItor25);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertNotNull(charSequenceItor43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charSequenceArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(charSequenceStream61);
        org.junit.Assert.assertNull(charSequence65);
        org.junit.Assert.assertEquals("'" + charSequence66 + "' != '" + "hi!" + "'", charSequence66, "hi!");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[[hi!], hi!, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[[hi!], hi!, hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(charSequenceArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator84);
        org.junit.Assert.assertEquals("'" + charSequence85 + "' != '" + "" + "'", charSequence85, "");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertEquals("'" + charSequence88 + "' != '" + "[hi!, ]" + "'", charSequence88, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[, ]");
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceList2.parallelStream();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator21 = charSequenceList19.spliterator();
        int int22 = charSequenceList19.size();
        boolean boolean23 = charSequenceList12.contains((java.lang.Object) charSequenceList19);
        boolean boolean24 = charSequenceList12.isEmpty();
        java.lang.Object obj25 = charSequenceList12.clone();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream26 = charSequenceList12.parallelStream();
        boolean boolean27 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.Object[] objArray28 = charSequenceList2.toArray();
        java.lang.CharSequence charSequence29 = charSequenceList2.pollFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceList2.stream();
        java.lang.CharSequence charSequence16 = null;
        charSequenceList2.add(0, charSequence16);
        charSequenceList2.addLast((java.lang.CharSequence) "hi!");
        java.util.function.UnaryOperator<java.lang.CharSequence> charSequenceUnaryOperator20 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList2.replaceAll(charSequenceUnaryOperator20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceStream14);
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        charSequenceList2.clear();
        java.lang.Object obj6 = charSequenceList2.clone();
        boolean boolean8 = charSequenceList2.offer((java.lang.CharSequence) "");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        java.lang.Object obj25 = null;
        boolean boolean26 = charSequenceList20.equals(obj25);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        boolean boolean32 = charSequenceList20.removeLastOccurrence((java.lang.Object) charSequenceList29);
        boolean boolean33 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = charSequenceList36.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.Object obj41 = null;
        boolean boolean42 = charSequenceList36.equals(obj41);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean49 = charSequenceList45.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList48);
        java.lang.CharSequence charSequence50 = charSequenceList45.peek();
        java.lang.CharSequence charSequence51 = charSequenceList45.pollFirst();
        boolean boolean52 = charSequenceList36.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        java.lang.CharSequence charSequence53 = charSequenceList36.peek();
        int int54 = charSequenceList2.indexOf((java.lang.Object) charSequenceList36);
        java.lang.CharSequence charSequence55 = charSequenceList36.poll();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "hi!" + "'", charSequence50, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "hi!" + "'", charSequence51, "hi!");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "hi!" + "'", charSequence53, "hi!");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence55 + "' != '" + "hi!" + "'", charSequence55, "hi!");
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList11.isEmpty();
        charSequenceList11.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean18 = charSequenceList11.offerLast((java.lang.CharSequence) "");
        charSequenceList11.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean21 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor22 = charSequenceList11.descendingIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.CharSequence> charSequenceItor24 = charSequenceList11.listIterator((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charSequenceItor22);
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        java.lang.CharSequence charSequence9 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence charSequence17 = charSequenceList12.peek();
        boolean boolean19 = charSequenceList12.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = charSequenceList22.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        boolean boolean27 = charSequenceList12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        charSequenceList12.clear();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.Object obj36 = charSequenceList34.clone();
        int int37 = charSequenceList12.lastIndexOf((java.lang.Object) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = charSequenceList40.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceList47.spliterator();
        int int50 = charSequenceList47.size();
        boolean boolean51 = charSequenceList40.contains((java.lang.Object) charSequenceList47);
        java.lang.CharSequence charSequence52 = charSequenceList40.element();
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList55 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55, charSequenceArray54);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator57 = charSequenceList55.spliterator();
        boolean boolean58 = charSequenceList55.isEmpty();
        charSequenceList55.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str61 = charSequenceList55.toString();
        boolean boolean62 = charSequenceList40.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55);
        boolean boolean64 = charSequenceList55.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor65 = charSequenceList55.descendingIterator();
        charSequenceList55.clear();
        boolean boolean67 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55);
        boolean boolean68 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor69 = charSequenceList12.iterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence70 = charSequenceList12.removeFirst();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "[]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "hi!" + "'", charSequence52, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[hi!, ]" + "'", str61, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(charSequenceItor65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(charSequenceItor69);
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        charSequenceList2.clear();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.Object obj26 = charSequenceList24.clone();
        int int27 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList24);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor28 = charSequenceList2.iterator();
        boolean boolean30 = charSequenceList2.offerFirst((java.lang.CharSequence) "[hi!, hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(charSequenceItor28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        charSequenceList2.clear();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.Object obj26 = charSequenceList24.clone();
        int int27 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList24);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.Object obj35 = null;
        boolean boolean36 = charSequenceList30.equals(obj35);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        java.lang.CharSequence charSequence38 = charSequenceList30.peek();
        java.lang.CharSequence charSequence39 = charSequenceList30.remove();
        boolean boolean41 = charSequenceList30.add((java.lang.CharSequence) "hi!");
        boolean boolean42 = charSequenceList2.equals((java.lang.Object) charSequenceList30);
        java.lang.CharSequence charSequence43 = charSequenceList2.pollFirst();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence45 = charSequenceList2.get(3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 3, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "hi!" + "'", charSequence38, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "hi!" + "'", charSequence39, "hi!");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(charSequence43);
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.pop();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean14 = charSequenceList2.offer((java.lang.CharSequence) "[hi!, ]");
        boolean boolean16 = charSequenceList2.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence17 = charSequenceList2.getFirst();
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        int int26 = charSequenceList20.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence27 = charSequenceList20.removeLast();
        java.lang.CharSequence charSequence28 = charSequenceList20.peekLast();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceList38.spliterator();
        int int41 = charSequenceList38.size();
        boolean boolean42 = charSequenceList31.contains((java.lang.Object) charSequenceList38);
        java.lang.CharSequence charSequence43 = charSequenceList31.element();
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceList46.spliterator();
        boolean boolean49 = charSequenceList46.isEmpty();
        charSequenceList46.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str52 = charSequenceList46.toString();
        boolean boolean53 = charSequenceList31.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceList46.stream();
        boolean boolean55 = charSequenceList20.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        java.lang.CharSequence charSequence56 = charSequenceList20.remove();
        boolean boolean57 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence58 = charSequenceList2.getFirst();
        java.lang.CharSequence[] charSequenceArray60 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList61 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList61, charSequenceArray60);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator63 = charSequenceList61.spliterator();
        boolean boolean64 = charSequenceList61.isEmpty();
        charSequenceList61.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean68 = charSequenceList61.offerLast((java.lang.CharSequence) "");
        charSequenceList61.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence71 = charSequenceList61.removeLast();
        boolean boolean72 = charSequenceList61.isEmpty();
        java.lang.CharSequence charSequence73 = charSequenceList61.remove();
        java.lang.CharSequence[] charSequenceArray75 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList76 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList76, charSequenceArray75);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList79 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean80 = charSequenceList76.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList79);
        java.lang.CharSequence[] charSequenceArray82 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList83 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList83, charSequenceArray82);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator85 = charSequenceList83.spliterator();
        int int86 = charSequenceList83.size();
        boolean boolean87 = charSequenceList76.contains((java.lang.Object) charSequenceList83);
        java.lang.CharSequence charSequence88 = charSequenceList76.element();
        int int89 = charSequenceList76.size();
        boolean boolean90 = charSequenceList61.removeFirstOccurrence((java.lang.Object) charSequenceList76);
        boolean boolean91 = charSequenceList2.contains((java.lang.Object) charSequenceList61);
        java.lang.CharSequence charSequence92 = charSequenceList2.pollFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "[hi!, ]" + "'", charSequence17, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "hi!" + "'", charSequence43, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[hi!, ]" + "'", str52, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + charSequence56 + "' != '" + "hi!" + "'", charSequence56, "hi!");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + charSequence58 + "' != '" + "[hi!, ]" + "'", charSequence58, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertEquals("'" + charSequence71 + "' != '" + "" + "'", charSequence71, "");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + charSequence73 + "' != '" + "[hi!, ]" + "'", charSequence73, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(charSequenceArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertEquals("'" + charSequence88 + "' != '" + "hi!" + "'", charSequence88, "hi!");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + charSequence92 + "' != '" + "[hi!, ]" + "'", charSequence92, "[hi!, ]");
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        java.lang.CharSequence charSequence25 = charSequenceList20.peek();
        boolean boolean27 = charSequenceList20.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        boolean boolean35 = charSequenceList20.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        boolean boolean36 = charSequenceList33.isEmpty();
        boolean boolean37 = charSequenceList15.equals((java.lang.Object) charSequenceList33);
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = charSequenceList40.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        int int46 = charSequenceList40.lastIndexOf((java.lang.Object) (-1L));
        int int47 = charSequenceList40.size();
        boolean boolean49 = charSequenceList40.add((java.lang.CharSequence) "[hi!, ]");
        int int50 = charSequenceList40.size();
        boolean boolean51 = charSequenceList33.equals((java.lang.Object) charSequenceList40);
        java.lang.CharSequence[] charSequenceArray53 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList54 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList54, charSequenceArray53);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList57 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean58 = charSequenceList54.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList57);
        int int60 = charSequenceList54.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean62 = charSequenceList54.contains((java.lang.Object) (-1.0d));
        boolean boolean63 = charSequenceList54.isEmpty();
        boolean boolean64 = charSequenceList40.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList54);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(charSequenceArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor25 = charSequenceList2.descendingIterator();
        java.lang.CharSequence charSequence26 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.CharSequence charSequence35 = charSequenceList30.peek();
        boolean boolean37 = charSequenceList30.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceList30.spliterator();
        boolean boolean40 = charSequenceList30.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence41 = charSequenceList30.element();
        java.lang.CharSequence charSequence42 = charSequenceList30.peekLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor43 = charSequenceList30.listIterator();
        charSequenceList30.addFirst((java.lang.CharSequence) "[hi!]");
        boolean boolean46 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = charSequenceList49.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        java.lang.CharSequence[] charSequenceArray55 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56, charSequenceArray55);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator58 = charSequenceList56.spliterator();
        int int59 = charSequenceList56.size();
        boolean boolean60 = charSequenceList49.contains((java.lang.Object) charSequenceList56);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream61 = charSequenceList49.stream();
        java.lang.CharSequence charSequence63 = null;
        charSequenceList49.add(0, charSequence63);
        java.lang.CharSequence charSequence65 = charSequenceList49.removeFirst();
        java.lang.CharSequence charSequence66 = charSequenceList49.peekFirst();
        boolean boolean67 = charSequenceList30.removeFirstOccurrence((java.lang.Object) charSequenceList49);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList68 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        java.lang.CharSequence charSequence69 = charSequenceList68.remove();
        java.lang.CharSequence[] charSequenceArray71 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList72 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList72, charSequenceArray71);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList75 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean76 = charSequenceList72.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList75);
        java.lang.CharSequence charSequence77 = charSequenceList72.peek();
        java.lang.CharSequence charSequence78 = charSequenceList72.poll();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor79 = charSequenceList72.descendingIterator();
        boolean boolean80 = charSequenceList68.equals((java.lang.Object) charSequenceItor79);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceItor25);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertNotNull(charSequenceItor43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charSequenceArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(charSequenceStream61);
        org.junit.Assert.assertNull(charSequence65);
        org.junit.Assert.assertEquals("'" + charSequence66 + "' != '" + "hi!" + "'", charSequence66, "hi!");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + charSequence69 + "' != '" + "[hi!]" + "'", charSequence69, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + charSequence77 + "' != '" + "hi!" + "'", charSequence77, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence78 + "' != '" + "hi!" + "'", charSequence78, "hi!");
        org.junit.Assert.assertNotNull(charSequenceItor79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList8 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList8.spliterator();
        int int11 = charSequenceList8.size();
        boolean boolean12 = charSequenceList2.contains((java.lang.Object) charSequenceList8);
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceList15.spliterator();
        boolean boolean18 = charSequenceList15.isEmpty();
        java.lang.CharSequence charSequence19 = charSequenceList15.removeLast();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = charSequenceList22.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        java.lang.CharSequence charSequence27 = charSequenceList22.peek();
        boolean boolean29 = charSequenceList22.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = charSequenceList32.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        boolean boolean37 = charSequenceList22.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        java.lang.CharSequence charSequence38 = charSequenceList22.pop();
        boolean boolean39 = charSequenceList15.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42, charSequenceArray41);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = charSequenceList42.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        java.lang.Object obj47 = null;
        boolean boolean48 = charSequenceList42.equals(obj47);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        java.lang.CharSequence charSequence50 = charSequenceList42.peek();
        java.lang.CharSequence charSequence51 = charSequenceList42.remove();
        boolean boolean52 = charSequenceList22.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        boolean boolean53 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        boolean boolean55 = charSequenceList2.add((java.lang.CharSequence) "");
        boolean boolean56 = charSequenceList2.isEmpty();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "hi!" + "'", charSequence38, "hi!");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "hi!" + "'", charSequence50, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "hi!" + "'", charSequence51, "hi!");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList2.spliterator();
        boolean boolean12 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence13 = charSequenceList2.element();
        java.lang.CharSequence charSequence14 = charSequenceList2.peekLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor15 = charSequenceList2.listIterator();
        charSequenceList2.addFirst((java.lang.CharSequence) "[hi!]");
        java.lang.CharSequence charSequence18 = charSequenceList2.poll();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence20 = charSequenceList2.get((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "[hi!]" + "'", charSequence18, "[hi!]");
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = charSequenceList5.clone();
        charSequenceList5.addLast((java.lang.CharSequence) "[hi!, ]");
        boolean boolean11 = charSequenceList5.offerLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence12 = charSequenceList5.pollFirst();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor14 = charSequenceList5.listIterator(0);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "[hi!, ]" + "'", charSequence12, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceItor14);
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.Object obj11 = charSequenceList2.clone();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor13 = charSequenceList2.listIterator(0);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceItor13);
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList11.isEmpty();
        charSequenceList11.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean18 = charSequenceList11.offerLast((java.lang.CharSequence) "");
        charSequenceList11.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean21 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor22 = charSequenceList11.descendingIterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream23 = charSequenceList11.stream();
        java.lang.CharSequence charSequence24 = charSequenceList11.element();
        int int25 = charSequenceList11.size();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charSequenceItor22);
        org.junit.Assert.assertNotNull(charSequenceStream23);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "[hi!, ]" + "'", charSequence24, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        java.lang.CharSequence charSequence25 = charSequenceList20.peek();
        boolean boolean27 = charSequenceList20.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        boolean boolean35 = charSequenceList20.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        boolean boolean36 = charSequenceList33.isEmpty();
        boolean boolean37 = charSequenceList15.equals((java.lang.Object) charSequenceList33);
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = charSequenceList40.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        int int46 = charSequenceList40.lastIndexOf((java.lang.Object) (-1L));
        int int47 = charSequenceList40.size();
        boolean boolean49 = charSequenceList40.add((java.lang.CharSequence) "[hi!, ]");
        int int50 = charSequenceList40.size();
        boolean boolean51 = charSequenceList33.equals((java.lang.Object) charSequenceList40);
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor52 = charSequenceList40.listIterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(charSequenceItor52);
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceList17.getLast();
        boolean boolean29 = charSequenceList17.removeLastOccurrence((java.lang.Object) 100.0d);
        java.lang.CharSequence charSequence30 = charSequenceList17.getFirst();
        java.lang.CharSequence charSequence31 = charSequenceList17.pollLast();
        charSequenceList17.add(2, (java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream35 = charSequenceList17.stream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "hi!" + "'", charSequence30, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "" + "'", charSequence31, "");
        org.junit.Assert.assertNotNull(charSequenceStream35);
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence charSequence15 = charSequenceList9.pollLast();
        charSequenceList9.clear();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream17 = charSequenceList9.stream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNull(charSequence15);
        org.junit.Assert.assertNotNull(charSequenceStream17);
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence charSequence9 = charSequenceList2.removeFirst();
        boolean boolean11 = charSequenceList2.removeLastOccurrence((java.lang.Object) (short) 100);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceList14.spliterator();
        int int17 = charSequenceList14.size();
        java.lang.CharSequence charSequence18 = charSequenceList14.remove();
        boolean boolean19 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = charSequenceList22.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        boolean boolean27 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor28 = charSequenceList2.listIterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "" + "'", charSequence18, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceItor28);
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.poll();
        java.lang.String str9 = charSequenceList2.toString();
        int int10 = charSequenceList2.size();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence11 = charSequenceList2.getFirst();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[]" + "'", str9, "[]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList2.spliterator();
        boolean boolean12 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        charSequenceList2.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceList18.spliterator();
        boolean boolean21 = charSequenceList18.isEmpty();
        boolean boolean22 = charSequenceList2.equals((java.lang.Object) charSequenceList18);
        java.lang.CharSequence charSequence24 = charSequenceList2.remove((int) (short) 0);
        java.lang.CharSequence charSequence25 = charSequenceList2.getLast();
        charSequenceList2.addLast((java.lang.CharSequence) "[hi!, [[hi!, ]]]");
        java.lang.CharSequence charSequence28 = charSequenceList2.element();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "hi!" + "'", charSequence24, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "hi!" + "'", charSequence28, "hi!");
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceList17.stream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceList17.spliterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream27 = charSequenceList17.parallelStream();
        charSequenceList17.addLast((java.lang.CharSequence) "[[hi!, ], hi!, ]");
        java.lang.CharSequence charSequence30 = charSequenceList17.removeFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceStream25);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
        org.junit.Assert.assertNotNull(charSequenceStream27);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "hi!" + "'", charSequence30, "hi!");
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        java.util.LinkedList<java.util.AbstractCollection<java.lang.CharSequence>> charSequenceCollectionList0 = new java.util.LinkedList<java.util.AbstractCollection<java.lang.CharSequence>>();
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceList2.parallelStream();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceList18.spliterator();
        int int21 = charSequenceList18.size();
        boolean boolean22 = charSequenceList11.contains((java.lang.Object) charSequenceList18);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = charSequenceList25.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence charSequence30 = charSequenceList25.peek();
        java.lang.CharSequence charSequence31 = charSequenceList25.pollFirst();
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceList34.spliterator();
        boolean boolean37 = charSequenceList34.isEmpty();
        charSequenceList34.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean41 = charSequenceList34.offerLast((java.lang.CharSequence) "");
        charSequenceList34.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean44 = charSequenceList25.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        boolean boolean45 = charSequenceList18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        int int46 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList18);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence49 = charSequenceList2.set(7, (java.lang.CharSequence) "[, ]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 7, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "hi!" + "'", charSequence30, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "hi!" + "'", charSequence31, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = charSequenceList5.clone();
        java.lang.String str8 = charSequenceList5.toString();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[]" + "'", str8, "[]");
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence charSequence15 = charSequenceList9.pollLast();
        charSequenceList9.clear();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator21 = charSequenceList19.spliterator();
        java.lang.Object obj22 = charSequenceList19.clone();
        boolean boolean23 = charSequenceList9.remove(obj22);
        java.lang.Object[] objArray24 = charSequenceList9.toArray();
        charSequenceList9.clear();
        int int26 = charSequenceList9.size();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNull(charSequence15);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList13.equals(obj18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        boolean boolean25 = charSequenceList13.removeLastOccurrence((java.lang.Object) charSequenceList22);
        charSequenceList13.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean28 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        java.lang.CharSequence charSequence29 = charSequenceList2.remove();
        java.lang.CharSequence charSequence30 = charSequenceList2.pop();
        charSequenceList2.addLast((java.lang.CharSequence) "[hi!, hi!, hi!, []]");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream33 = charSequenceList2.stream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "hi!" + "'", charSequence30, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream33);
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence charSequence17 = charSequenceList12.peek();
        java.lang.CharSequence charSequence18 = charSequenceList12.pollFirst();
        boolean boolean19 = charSequenceList2.contains((java.lang.Object) charSequence18);
        java.lang.CharSequence charSequence20 = charSequenceList2.remove();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.CharSequence> charSequenceList23 = charSequenceList2.subList((int) (short) 10, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(10) > toIndex(0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "hi!" + "'", charSequence18, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "hi!" + "'", charSequence20, "hi!");
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor25 = charSequenceList2.descendingIterator();
        java.lang.CharSequence charSequence26 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.CharSequence charSequence35 = charSequenceList30.peek();
        boolean boolean37 = charSequenceList30.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceList30.spliterator();
        boolean boolean40 = charSequenceList30.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence41 = charSequenceList30.element();
        java.lang.CharSequence charSequence42 = charSequenceList30.peekLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor43 = charSequenceList30.listIterator();
        charSequenceList30.addFirst((java.lang.CharSequence) "[hi!]");
        boolean boolean46 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        java.lang.Object[] objArray47 = charSequenceList30.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor48 = charSequenceList30.descendingIterator();
        java.lang.CharSequence charSequence49 = charSequenceList30.getLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceItor25);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertNotNull(charSequenceItor43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[[hi!], hi!, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[[hi!], hi!, hi!]");
        org.junit.Assert.assertNotNull(charSequenceItor48);
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "hi!" + "'", charSequence49, "hi!");
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = charSequenceList5.clone();
        charSequenceList5.addLast((java.lang.CharSequence) "[hi!, ]");
        boolean boolean11 = charSequenceList5.offerLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence12 = charSequenceList5.pollFirst();
        java.lang.CharSequence charSequence13 = charSequenceList5.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceList5.parallelStream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "[hi!, ]" + "'", charSequence12, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "[hi!, ]" + "'", charSequence13, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceStream14);
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.pop();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean14 = charSequenceList2.offer((java.lang.CharSequence) "[hi!, ]");
        boolean boolean16 = charSequenceList2.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence17 = charSequenceList2.getFirst();
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        int int26 = charSequenceList20.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence27 = charSequenceList20.removeLast();
        java.lang.CharSequence charSequence28 = charSequenceList20.peekLast();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceList38.spliterator();
        int int41 = charSequenceList38.size();
        boolean boolean42 = charSequenceList31.contains((java.lang.Object) charSequenceList38);
        java.lang.CharSequence charSequence43 = charSequenceList31.element();
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceList46.spliterator();
        boolean boolean49 = charSequenceList46.isEmpty();
        charSequenceList46.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str52 = charSequenceList46.toString();
        boolean boolean53 = charSequenceList31.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceList46.stream();
        boolean boolean55 = charSequenceList20.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        boolean boolean56 = charSequenceList2.contains((java.lang.Object) charSequenceList20);
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor57 = charSequenceList20.listIterator();
        java.lang.CharSequence charSequence58 = charSequenceList20.removeLast();
        java.util.Collection<java.lang.CharSequence> charSequenceCollection60 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean61 = charSequenceList20.addAll((int) (byte) 100, charSequenceCollection60);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "[hi!, ]" + "'", charSequence17, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "hi!" + "'", charSequence43, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[hi!, ]" + "'", str52, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charSequenceItor57);
        org.junit.Assert.assertEquals("'" + charSequence58 + "' != '" + "" + "'", charSequence58, "");
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        java.lang.CharSequence charSequence6 = charSequenceList2.remove();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator7 = charSequenceList2.spliterator();
        charSequenceList2.addFirst((java.lang.CharSequence) "[hi!, hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceSpliterator7);
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        charSequenceList17.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList17.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence33 = charSequenceList17.getLast();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor34 = charSequenceList17.descendingIterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "" + "'", charSequence33, "");
        org.junit.Assert.assertNotNull(charSequenceItor34);
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceList2.stream();
        java.lang.CharSequence charSequence16 = null;
        charSequenceList2.add(0, charSequence16);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator29 = charSequenceList27.spliterator();
        int int30 = charSequenceList27.size();
        boolean boolean31 = charSequenceList20.contains((java.lang.Object) charSequenceList27);
        java.lang.CharSequence charSequence32 = charSequenceList20.element();
        boolean boolean33 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        charSequenceList2.addLast((java.lang.CharSequence) "[]");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence37 = charSequenceList2.get((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "hi!" + "'", charSequence32, "hi!");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor25 = charSequenceList2.descendingIterator();
        java.lang.CharSequence charSequence26 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.CharSequence charSequence35 = charSequenceList30.peek();
        boolean boolean37 = charSequenceList30.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceList30.spliterator();
        boolean boolean40 = charSequenceList30.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence41 = charSequenceList30.element();
        java.lang.CharSequence charSequence42 = charSequenceList30.peekLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor43 = charSequenceList30.listIterator();
        charSequenceList30.addFirst((java.lang.CharSequence) "[hi!]");
        boolean boolean46 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = charSequenceList49.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        java.lang.CharSequence[] charSequenceArray55 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56, charSequenceArray55);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator58 = charSequenceList56.spliterator();
        int int59 = charSequenceList56.size();
        boolean boolean60 = charSequenceList49.contains((java.lang.Object) charSequenceList56);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream61 = charSequenceList49.stream();
        java.lang.CharSequence charSequence63 = null;
        charSequenceList49.add(0, charSequence63);
        java.lang.CharSequence charSequence65 = charSequenceList49.removeFirst();
        java.lang.CharSequence charSequence66 = charSequenceList49.peekFirst();
        boolean boolean67 = charSequenceList30.removeFirstOccurrence((java.lang.Object) charSequenceList49);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList68 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence70 = charSequenceList30.get(4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 4, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceItor25);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertNotNull(charSequenceItor43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charSequenceArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(charSequenceStream61);
        org.junit.Assert.assertNull(charSequence65);
        org.junit.Assert.assertEquals("'" + charSequence66 + "' != '" + "hi!" + "'", charSequence66, "hi!");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence22 = charSequenceList17.peek();
        boolean boolean24 = charSequenceList17.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean25 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence26 = charSequenceList2.pop();
        java.lang.CharSequence charSequence27 = charSequenceList2.peekFirst();
        java.lang.CharSequence charSequence28 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceList38.spliterator();
        int int41 = charSequenceList38.size();
        boolean boolean42 = charSequenceList31.contains((java.lang.Object) charSequenceList38);
        java.lang.CharSequence charSequence43 = charSequenceList31.element();
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceList46.spliterator();
        boolean boolean49 = charSequenceList46.isEmpty();
        charSequenceList46.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str52 = charSequenceList46.toString();
        boolean boolean53 = charSequenceList31.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        boolean boolean55 = charSequenceList46.offer((java.lang.CharSequence) "");
        charSequenceList46.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList46.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        charSequenceList46.addLast((java.lang.CharSequence) "hi!");
        int int64 = charSequenceList2.indexOf((java.lang.Object) charSequenceList46);
        charSequenceList46.addFirst((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence67 = charSequenceList46.element();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNull(charSequence27);
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "hi!" + "'", charSequence43, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[hi!, ]" + "'", str52, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence67 + "' != '" + "" + "'", charSequence67, "");
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence charSequence9 = charSequenceList2.removeFirst();
        boolean boolean11 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor12 = charSequenceList2.listIterator();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = charSequenceList16.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence charSequence21 = charSequenceList16.peek();
        boolean boolean23 = charSequenceList16.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList16.spliterator();
        boolean boolean26 = charSequenceList16.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence27 = charSequenceList16.element();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator28 = charSequenceList16.spliterator();
        java.lang.CharSequence charSequence29 = charSequenceList16.poll();
        boolean boolean30 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList16.spliterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(charSequenceItor12);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "hi!" + "'", charSequence21, "hi!");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertNotNull(charSequenceSpliterator28);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceList11.spliterator();
        java.lang.CharSequence charSequence16 = charSequenceList11.element();
        boolean boolean18 = charSequenceList11.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceList28.spliterator();
        int int31 = charSequenceList28.size();
        boolean boolean32 = charSequenceList21.contains((java.lang.Object) charSequenceList28);
        java.lang.CharSequence charSequence33 = charSequenceList21.element();
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceList36.spliterator();
        boolean boolean39 = charSequenceList36.isEmpty();
        charSequenceList36.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str42 = charSequenceList36.toString();
        boolean boolean43 = charSequenceList21.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36);
        boolean boolean45 = charSequenceList36.offer((java.lang.CharSequence) "");
        charSequenceList36.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean50 = charSequenceList36.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence51 = charSequenceList36.poll();
        java.lang.CharSequence charSequence52 = charSequenceList36.peek();
        int int53 = charSequenceList11.indexOf((java.lang.Object) charSequenceList36);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceList11.stream();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor55 = charSequenceList11.iterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "hi!" + "'", charSequence33, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[hi!, ]" + "'", str42, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "hi!" + "'", charSequence51, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "hi!" + "'", charSequence52, "hi!");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertNotNull(charSequenceItor55);
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence charSequence9 = charSequenceList2.peek();
        java.util.function.UnaryOperator<java.lang.CharSequence> charSequenceUnaryOperator10 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList2.replaceAll(charSequenceUnaryOperator10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        charSequenceList2.clear();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.Object obj26 = charSequenceList24.clone();
        int int27 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList24);
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor29 = charSequenceList2.listIterator(0);
        java.lang.CharSequence charSequence30 = charSequenceList2.pollFirst();
        charSequenceList2.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence32 = charSequenceList2.getFirst();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(charSequenceItor29);
        org.junit.Assert.assertNull(charSequence30);
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceList2.stream();
        java.lang.CharSequence charSequence16 = null;
        charSequenceList2.add(0, charSequence16);
        java.lang.CharSequence charSequence18 = charSequenceList2.removeFirst();
        java.util.function.UnaryOperator<java.lang.CharSequence> charSequenceUnaryOperator19 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList2.replaceAll(charSequenceUnaryOperator19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertNull(charSequence18);
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence charSequence9 = charSequenceList2.removeFirst();
        boolean boolean11 = charSequenceList2.removeLastOccurrence((java.lang.Object) (short) 100);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceList14.spliterator();
        int int17 = charSequenceList14.size();
        java.lang.CharSequence charSequence18 = charSequenceList14.remove();
        boolean boolean19 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence20 = charSequenceList2.getLast();
        java.lang.CharSequence charSequence21 = charSequenceList2.peekLast();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.CharSequence> charSequenceItor23 = charSequenceList2.listIterator(2);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 2, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "" + "'", charSequence18, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "" + "'", charSequence21, "");
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence25 = charSequenceList2.getFirst();
        charSequenceList2.clear();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        int int27 = charSequenceList2.indexOf((java.lang.Object) charSequence26);
        int int28 = charSequenceList2.size();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence charSequence36 = charSequenceList31.peek();
        java.lang.CharSequence charSequence37 = charSequenceList31.pollFirst();
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = charSequenceList40.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceList47.spliterator();
        int int50 = charSequenceList47.size();
        boolean boolean51 = charSequenceList40.contains((java.lang.Object) charSequenceList47);
        java.lang.CharSequence charSequence52 = charSequenceList40.element();
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList55 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55, charSequenceArray54);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator57 = charSequenceList55.spliterator();
        boolean boolean58 = charSequenceList55.isEmpty();
        charSequenceList55.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str61 = charSequenceList55.toString();
        boolean boolean62 = charSequenceList40.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55);
        boolean boolean64 = charSequenceList55.offer((java.lang.CharSequence) "");
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor65 = charSequenceList55.listIterator();
        boolean boolean66 = charSequenceList31.contains((java.lang.Object) charSequenceItor65);
        int int67 = charSequenceList2.indexOf((java.lang.Object) charSequenceList31);
        java.lang.CharSequence charSequence68 = charSequenceList2.pop();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "hi!" + "'", charSequence36, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "hi!" + "'", charSequence37, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "hi!" + "'", charSequence52, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[hi!, ]" + "'", str61, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(charSequenceItor65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence68 + "' != '" + "hi!" + "'", charSequence68, "hi!");
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList7 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList10 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean11 = charSequenceList7.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList10);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceList14.spliterator();
        int int17 = charSequenceList14.size();
        boolean boolean18 = charSequenceList7.contains((java.lang.Object) charSequenceList14);
        java.lang.CharSequence charSequence19 = charSequenceList7.element();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        boolean boolean25 = charSequenceList22.isEmpty();
        charSequenceList22.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str28 = charSequenceList22.toString();
        boolean boolean29 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        boolean boolean31 = charSequenceList22.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor32 = charSequenceList22.descendingIterator();
        boolean boolean33 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceItor32);
        java.lang.CharSequence charSequence34 = charSequenceList2.removeLast();
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "[hi!, [hi!, ]]", "", "", "[hi!, hi!, ]", "hi!", "[, ]" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList42 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42, charSequenceArray41);
        boolean boolean44 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "hi!" + "'", charSequence19, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[hi!, ]" + "'", str28, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceItor32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence charSequence9 = charSequenceList2.removeFirst();
        boolean boolean11 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = charSequenceList14.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceList21.spliterator();
        int int24 = charSequenceList21.size();
        boolean boolean25 = charSequenceList14.contains((java.lang.Object) charSequenceList21);
        java.lang.CharSequence charSequence26 = charSequenceList14.element();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        boolean boolean32 = charSequenceList29.isEmpty();
        charSequenceList29.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str35 = charSequenceList29.toString();
        boolean boolean36 = charSequenceList14.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        boolean boolean38 = charSequenceList29.offer((java.lang.CharSequence) "");
        charSequenceList29.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList29.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        charSequenceList29.addLast((java.lang.CharSequence) "hi!");
        boolean boolean47 = charSequenceList2.removeFirstOccurrence((java.lang.Object) "hi!");
        boolean boolean49 = charSequenceList2.offer((java.lang.CharSequence) "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[hi!, ]" + "'", str35, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceList17.stream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceList17.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator27 = charSequenceList17.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.CharSequence> charSequenceItor29 = charSequenceList17.listIterator(7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 7, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceStream25);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
        org.junit.Assert.assertNotNull(charSequenceSpliterator27);
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceList17.stream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceList17.spliterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream27 = charSequenceList17.parallelStream();
        charSequenceList17.addLast((java.lang.CharSequence) "[[hi!, ], hi!, ]");
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = charSequenceList32.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceList39.spliterator();
        int int42 = charSequenceList39.size();
        boolean boolean43 = charSequenceList32.contains((java.lang.Object) charSequenceList39);
        boolean boolean44 = charSequenceList32.isEmpty();
        java.lang.Object obj45 = charSequenceList32.clone();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream46 = charSequenceList32.parallelStream();
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = charSequenceList49.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        java.lang.Object obj54 = null;
        boolean boolean55 = charSequenceList49.equals(obj54);
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList58 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58, charSequenceArray57);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList61 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean62 = charSequenceList58.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList61);
        java.lang.CharSequence charSequence63 = charSequenceList58.peek();
        java.lang.CharSequence charSequence64 = charSequenceList58.pollFirst();
        boolean boolean65 = charSequenceList49.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58);
        boolean boolean66 = charSequenceList32.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58);
        charSequenceList58.addLast((java.lang.CharSequence) "[]");
        charSequenceList58.clear();
        boolean boolean70 = charSequenceList17.contains((java.lang.Object) charSequenceList58);
        java.util.Collection<java.lang.CharSequence> charSequenceCollection71 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean72 = charSequenceList58.retainAll(charSequenceCollection71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceStream25);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
        org.junit.Assert.assertNotNull(charSequenceStream27);
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceStream46);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + charSequence63 + "' != '" + "hi!" + "'", charSequence63, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence64 + "' != '" + "hi!" + "'", charSequence64, "hi!");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence charSequence15 = charSequenceList11.removeLast();
        java.util.List<java.lang.CharSequence> charSequenceList18 = charSequenceList11.subList(0, (int) (short) 0);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceList28.spliterator();
        int int31 = charSequenceList28.size();
        boolean boolean32 = charSequenceList21.contains((java.lang.Object) charSequenceList28);
        java.lang.CharSequence charSequence33 = charSequenceList28.removeFirst();
        java.lang.CharSequence charSequence34 = charSequenceList28.pollLast();
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        java.lang.CharSequence charSequence42 = charSequenceList37.peek();
        boolean boolean44 = charSequenceList37.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList50 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean51 = charSequenceList47.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList50);
        boolean boolean52 = charSequenceList37.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50);
        boolean boolean53 = charSequenceList28.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50);
        boolean boolean54 = charSequenceList11.contains((java.lang.Object) boolean53);
        java.lang.CharSequence charSequence55 = charSequenceList11.pollFirst();
        java.lang.CharSequence charSequence56 = charSequenceList11.poll();
        java.lang.CharSequence[] charSequenceArray58 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList59 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList59, charSequenceArray58);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList62 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean63 = charSequenceList59.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList62);
        java.lang.CharSequence charSequence64 = charSequenceList59.peek();
        boolean boolean66 = charSequenceList59.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator67 = charSequenceList59.spliterator();
        boolean boolean69 = charSequenceList59.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray72 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList73 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList73, charSequenceArray72);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator75 = charSequenceList73.spliterator();
        boolean boolean76 = charSequenceList73.isEmpty();
        java.lang.CharSequence charSequence77 = charSequenceList73.removeLast();
        java.lang.CharSequence[] charSequenceArray79 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList80 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList80, charSequenceArray79);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList83 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean84 = charSequenceList80.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList83);
        java.lang.CharSequence charSequence85 = charSequenceList80.peek();
        boolean boolean87 = charSequenceList80.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray89 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList90 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList90, charSequenceArray89);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList93 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean94 = charSequenceList90.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList93);
        boolean boolean95 = charSequenceList80.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList93);
        java.lang.CharSequence charSequence96 = charSequenceList80.pop();
        boolean boolean97 = charSequenceList73.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList80);
        boolean boolean98 = charSequenceList59.addAll(2, (java.util.Collection<java.lang.CharSequence>) charSequenceList80);
        boolean boolean99 = charSequenceList11.removeLastOccurrence((java.lang.Object) 2);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "" + "'", charSequence15, "");
        org.junit.Assert.assertNotNull(charSequenceList18);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "" + "'", charSequence33, "");
        org.junit.Assert.assertNull(charSequence34);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(charSequence55);
        org.junit.Assert.assertNull(charSequence56);
        org.junit.Assert.assertNotNull(charSequenceArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + charSequence64 + "' != '" + "hi!" + "'", charSequence64, "hi!");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(charSequenceArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + charSequence77 + "' != '" + "" + "'", charSequence77, "");
        org.junit.Assert.assertNotNull(charSequenceArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + charSequence85 + "' != '" + "hi!" + "'", charSequence85, "hi!");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(charSequenceArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertEquals("'" + charSequence96 + "' != '" + "hi!" + "'", charSequence96, "hi!");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence25 = charSequenceList2.getFirst();
        java.lang.String str26 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.CharSequence charSequence35 = charSequenceList30.peek();
        boolean boolean37 = charSequenceList30.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence charSequence38 = charSequenceList30.poll();
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42, charSequenceArray41);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator44 = charSequenceList42.spliterator();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor45 = charSequenceList42.descendingIterator();
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48, charSequenceArray47);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList51 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean52 = charSequenceList48.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList51);
        int int54 = charSequenceList48.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence55 = charSequenceList48.removeLast();
        java.lang.CharSequence charSequence56 = charSequenceList48.peekLast();
        java.lang.CharSequence[] charSequenceArray58 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList59 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList59, charSequenceArray58);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList62 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean63 = charSequenceList59.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList62);
        java.lang.CharSequence[] charSequenceArray65 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList66 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList66, charSequenceArray65);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator68 = charSequenceList66.spliterator();
        int int69 = charSequenceList66.size();
        boolean boolean70 = charSequenceList59.contains((java.lang.Object) charSequenceList66);
        java.lang.CharSequence charSequence71 = charSequenceList59.element();
        java.lang.CharSequence[] charSequenceArray73 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList74 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList74, charSequenceArray73);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator76 = charSequenceList74.spliterator();
        boolean boolean77 = charSequenceList74.isEmpty();
        charSequenceList74.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str80 = charSequenceList74.toString();
        boolean boolean81 = charSequenceList59.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList74);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream82 = charSequenceList74.stream();
        boolean boolean83 = charSequenceList48.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList74);
        java.lang.CharSequence charSequence84 = charSequenceList48.remove();
        java.lang.CharSequence[] charSequenceArray87 = new java.lang.CharSequence[] { "", "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList88 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList88, charSequenceArray87);
        java.lang.CharSequence charSequence90 = charSequenceList88.pollFirst();
        boolean boolean91 = charSequenceList48.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList88);
        int int92 = charSequenceList42.indexOf((java.lang.Object) boolean91);
        int int93 = charSequenceList30.lastIndexOf((java.lang.Object) int92);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream94 = charSequenceList30.stream();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean95 = charSequenceList2.addAll((int) (byte) 10, (java.util.Collection<java.lang.CharSequence>) charSequenceList30);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[hi!, hi!, ]" + "'", str26, "[hi!, hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "hi!" + "'", charSequence38, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator44);
        org.junit.Assert.assertNotNull(charSequenceItor45);
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence55 + "' != '" + "hi!" + "'", charSequence55, "hi!");
        org.junit.Assert.assertNull(charSequence56);
        org.junit.Assert.assertNotNull(charSequenceArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(charSequenceArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + charSequence71 + "' != '" + "hi!" + "'", charSequence71, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[hi!, ]" + "'", str80, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(charSequenceStream82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertEquals("'" + charSequence84 + "' != '" + "hi!" + "'", charSequence84, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertEquals("'" + charSequence90 + "' != '" + "" + "'", charSequence90, "");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertNotNull(charSequenceStream94);
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence charSequence10 = charSequenceList2.poll();
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = charSequenceList14.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceList21.spliterator();
        int int24 = charSequenceList21.size();
        boolean boolean25 = charSequenceList14.contains((java.lang.Object) charSequenceList21);
        java.lang.CharSequence charSequence26 = charSequenceList14.element();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        boolean boolean32 = charSequenceList29.isEmpty();
        charSequenceList29.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str35 = charSequenceList29.toString();
        boolean boolean36 = charSequenceList14.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        charSequenceList29.addLast((java.lang.CharSequence) "");
        boolean boolean39 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        java.lang.CharSequence charSequence40 = charSequenceList2.pollFirst();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence41 = charSequenceList2.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[hi!, ]" + "'", str35, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(charSequence40);
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        charSequenceList2.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence12 = charSequenceList2.removeLast();
        boolean boolean13 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence14 = charSequenceList2.remove();
        java.lang.CharSequence charSequence15 = charSequenceList2.pollFirst();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceList2.parallelStream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "[hi!, ]" + "'", charSequence14, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "hi!" + "'", charSequence15, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream16);
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceList2.parallelStream();
        charSequenceList2.push((java.lang.CharSequence) "hi!");
        charSequenceList2.add(0, (java.lang.CharSequence) "[hi!, [hi!, ]]");
        java.lang.String str14 = charSequenceList2.toString();
        java.lang.CharSequence charSequence15 = charSequenceList2.pollFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[[hi!, [hi!, ]], hi!]" + "'", str14, "[[hi!, [hi!, ]], hi!]");
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "[hi!, [hi!, ]]" + "'", charSequence15, "[hi!, [hi!, ]]");
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList2.spliterator();
        boolean boolean12 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence13 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = charSequenceList16.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        int int22 = charSequenceList16.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence25 = charSequenceList16.set((int) (byte) 0, (java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence26 = charSequenceList16.element();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream27 = charSequenceList16.parallelStream();
        boolean boolean28 = charSequenceList2.remove((java.lang.Object) charSequenceStream27);
        java.lang.CharSequence charSequence29 = charSequenceList2.removeFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "[hi!, ]" + "'", charSequence26, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceStream27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList2.spliterator();
        boolean boolean12 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence13 = charSequenceList2.element();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceList2.spliterator();
        java.lang.CharSequence charSequence15 = charSequenceList2.poll();
        java.lang.CharSequence charSequence16 = charSequenceList2.peekFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "hi!" + "'", charSequence15, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        java.lang.Object obj25 = null;
        boolean boolean26 = charSequenceList20.equals(obj25);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        boolean boolean32 = charSequenceList20.removeLastOccurrence((java.lang.Object) charSequenceList29);
        boolean boolean33 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        boolean boolean35 = charSequenceList2.offer((java.lang.CharSequence) "[, ]");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence38 = charSequenceList2.set((int) 'a', (java.lang.CharSequence) "[hi!]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.add((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence10 = charSequenceList2.element();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.element();
        int int8 = charSequenceList2.size();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList11.isEmpty();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean24 = charSequenceList17.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence25 = charSequenceList17.pop();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean29 = charSequenceList17.offer((java.lang.CharSequence) "[hi!, ]");
        boolean boolean31 = charSequenceList17.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence32 = charSequenceList17.getFirst();
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = charSequenceList35.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        int int41 = charSequenceList35.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence42 = charSequenceList35.removeLast();
        java.lang.CharSequence charSequence43 = charSequenceList35.peekLast();
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = charSequenceList46.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList49);
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList53 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53, charSequenceArray52);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator55 = charSequenceList53.spliterator();
        int int56 = charSequenceList53.size();
        boolean boolean57 = charSequenceList46.contains((java.lang.Object) charSequenceList53);
        java.lang.CharSequence charSequence58 = charSequenceList46.element();
        java.lang.CharSequence[] charSequenceArray60 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList61 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList61, charSequenceArray60);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator63 = charSequenceList61.spliterator();
        boolean boolean64 = charSequenceList61.isEmpty();
        charSequenceList61.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str67 = charSequenceList61.toString();
        boolean boolean68 = charSequenceList46.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList61);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream69 = charSequenceList61.stream();
        boolean boolean70 = charSequenceList35.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList61);
        java.lang.CharSequence charSequence71 = charSequenceList35.remove();
        boolean boolean72 = charSequenceList17.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        int int73 = charSequenceList11.lastIndexOf((java.lang.Object) charSequenceList35);
        boolean boolean74 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence charSequence75 = charSequenceList11.poll();
        java.lang.CharSequence charSequence76 = charSequenceList11.pollFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "[hi!, ]" + "'", charSequence32, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertNull(charSequence43);
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + charSequence58 + "' != '" + "hi!" + "'", charSequence58, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[hi!, ]" + "'", str67, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(charSequenceStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + charSequence71 + "' != '" + "hi!" + "'", charSequence71, "hi!");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + charSequence75 + "' != '" + "" + "'", charSequence75, "");
        org.junit.Assert.assertNull(charSequence76);
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceList11.spliterator();
        java.lang.CharSequence charSequence16 = charSequenceList11.element();
        boolean boolean18 = charSequenceList11.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence19 = charSequenceList11.pop();
        charSequenceList11.addLast((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceList24.spliterator();
        boolean boolean27 = charSequenceList24.isEmpty();
        java.lang.CharSequence charSequence28 = charSequenceList24.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream29 = charSequenceList24.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream30 = charSequenceList24.parallelStream();
        charSequenceList24.push((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream33 = charSequenceList24.stream();
        boolean boolean34 = charSequenceList11.equals((java.lang.Object) charSequenceList24);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        java.lang.Object obj42 = null;
        boolean boolean43 = charSequenceList37.equals(obj42);
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = charSequenceList46.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList49);
        java.lang.CharSequence charSequence51 = charSequenceList46.peek();
        java.lang.CharSequence charSequence52 = charSequenceList46.pollFirst();
        boolean boolean53 = charSequenceList37.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor54 = charSequenceList37.iterator();
        java.lang.CharSequence[] charSequenceArray56 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList57 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList57, charSequenceArray56);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator59 = charSequenceList57.spliterator();
        java.lang.Object obj60 = charSequenceList57.clone();
        boolean boolean61 = charSequenceList37.removeLastOccurrence((java.lang.Object) charSequenceList57);
        boolean boolean62 = charSequenceList24.remove((java.lang.Object) boolean61);
        java.lang.CharSequence[] charSequenceArray64 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList65 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList65, charSequenceArray64);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList68 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean69 = charSequenceList65.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList68);
        java.lang.CharSequence charSequence70 = charSequenceList65.peek();
        java.lang.CharSequence charSequence71 = charSequenceList65.pollFirst();
        charSequenceList65.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray75 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList76 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList76, charSequenceArray75);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList79 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean80 = charSequenceList76.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList79);
        java.lang.Object obj81 = null;
        boolean boolean82 = charSequenceList76.equals(obj81);
        java.lang.CharSequence[] charSequenceArray84 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList85 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList85, charSequenceArray84);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator87 = charSequenceList85.spliterator();
        boolean boolean88 = charSequenceList76.removeLastOccurrence((java.lang.Object) charSequenceList85);
        java.lang.CharSequence charSequence89 = charSequenceList85.removeLast();
        boolean boolean90 = charSequenceList65.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList85);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor91 = charSequenceList85.iterator();
        boolean boolean92 = charSequenceList24.contains((java.lang.Object) charSequenceItor91);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "[hi!, ]" + "'", charSequence19, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertNotNull(charSequenceStream29);
        org.junit.Assert.assertNotNull(charSequenceStream30);
        org.junit.Assert.assertNotNull(charSequenceStream33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "hi!" + "'", charSequence51, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "hi!" + "'", charSequence52, "hi!");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charSequenceItor54);
        org.junit.Assert.assertNotNull(charSequenceArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "[]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(charSequenceArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + charSequence70 + "' != '" + "hi!" + "'", charSequence70, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence71 + "' != '" + "hi!" + "'", charSequence71, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(charSequenceArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertEquals("'" + charSequence89 + "' != '" + "" + "'", charSequence89, "");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(charSequenceItor91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence charSequence17 = charSequenceList12.peek();
        java.lang.CharSequence charSequence18 = charSequenceList12.pollFirst();
        boolean boolean19 = charSequenceList2.contains((java.lang.Object) charSequence18);
        charSequenceList2.addLast((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = charSequenceList24.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceList31.spliterator();
        int int34 = charSequenceList31.size();
        boolean boolean35 = charSequenceList24.contains((java.lang.Object) charSequenceList31);
        java.lang.CharSequence charSequence36 = charSequenceList24.element();
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceList39.spliterator();
        boolean boolean42 = charSequenceList39.isEmpty();
        charSequenceList39.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str45 = charSequenceList39.toString();
        boolean boolean46 = charSequenceList24.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor47 = charSequenceList24.iterator();
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList50 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50, charSequenceArray49);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList53 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean54 = charSequenceList50.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList53);
        java.lang.CharSequence[] charSequenceArray56 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList57 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList57, charSequenceArray56);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator59 = charSequenceList57.spliterator();
        int int60 = charSequenceList57.size();
        boolean boolean61 = charSequenceList50.contains((java.lang.Object) charSequenceList57);
        java.lang.CharSequence charSequence62 = charSequenceList57.removeFirst();
        java.lang.CharSequence[] charSequenceArray64 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList65 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList65, charSequenceArray64);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList68 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean69 = charSequenceList65.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList68);
        java.lang.Object obj70 = null;
        boolean boolean71 = charSequenceList65.equals(obj70);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList72 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList65);
        java.lang.CharSequence charSequence73 = charSequenceList65.peek();
        boolean boolean74 = charSequenceList57.equals((java.lang.Object) charSequenceList65);
        java.lang.String str75 = charSequenceList65.toString();
        boolean boolean76 = charSequenceList24.removeLastOccurrence((java.lang.Object) str75);
        int int77 = charSequenceList2.lastIndexOf((java.lang.Object) str75);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "hi!" + "'", charSequence18, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "hi!" + "'", charSequence36, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[hi!, ]" + "'", str45, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceItor47);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(charSequenceArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + charSequence62 + "' != '" + "" + "'", charSequence62, "");
        org.junit.Assert.assertNotNull(charSequenceArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + charSequence73 + "' != '" + "hi!" + "'", charSequence73, "hi!");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[hi!]" + "'", str75, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        charSequenceList17.addLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence28 = charSequenceList17.remove(1);
        charSequenceList17.addLast((java.lang.CharSequence) "[hi!, hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        charSequenceList2.clear();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.Object obj26 = charSequenceList24.clone();
        int int27 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList24);
        java.lang.CharSequence charSequence28 = charSequenceList24.peekFirst();
        charSequenceList24.addFirst((java.lang.CharSequence) "");
        java.lang.Object obj31 = charSequenceList24.clone();
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceList34.spliterator();
        boolean boolean37 = charSequenceList34.isEmpty();
        java.lang.CharSequence charSequence38 = charSequenceList34.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceList34.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream40 = charSequenceList34.parallelStream();
        charSequenceList34.push((java.lang.CharSequence) "hi!");
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator43 = charSequenceList34.spliterator();
        boolean boolean44 = charSequenceList24.remove((java.lang.Object) charSequenceList34);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[]");
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "" + "'", charSequence38, "");
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertNotNull(charSequenceStream40);
        org.junit.Assert.assertNotNull(charSequenceSpliterator43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        java.util.LinkedList<java.lang.Comparable<java.lang.String>> strComparableList5 = new java.util.LinkedList<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = charSequenceList2.contains((java.lang.Object) strComparableList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = charSequenceList9.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator18 = charSequenceList16.spliterator();
        int int19 = charSequenceList16.size();
        boolean boolean20 = charSequenceList9.contains((java.lang.Object) charSequenceList16);
        java.lang.CharSequence charSequence21 = charSequenceList9.element();
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = charSequenceList24.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceList31.spliterator();
        int int34 = charSequenceList31.size();
        boolean boolean35 = charSequenceList24.contains((java.lang.Object) charSequenceList31);
        java.lang.CharSequence charSequence36 = charSequenceList24.element();
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceList39.spliterator();
        boolean boolean42 = charSequenceList39.isEmpty();
        charSequenceList39.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str45 = charSequenceList39.toString();
        boolean boolean46 = charSequenceList24.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean48 = charSequenceList39.offer((java.lang.CharSequence) "");
        charSequenceList39.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean53 = charSequenceList39.add((java.lang.CharSequence) "");
        int int54 = charSequenceList9.lastIndexOf((java.lang.Object) boolean53);
        boolean boolean55 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList58 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58, charSequenceArray57);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList61 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean62 = charSequenceList58.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList61);
        java.lang.CharSequence[] charSequenceArray64 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList65 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList65, charSequenceArray64);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator67 = charSequenceList65.spliterator();
        int int68 = charSequenceList65.size();
        boolean boolean69 = charSequenceList58.contains((java.lang.Object) charSequenceList65);
        java.lang.CharSequence charSequence70 = charSequenceList58.element();
        java.lang.CharSequence[] charSequenceArray72 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList73 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList73, charSequenceArray72);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator75 = charSequenceList73.spliterator();
        boolean boolean76 = charSequenceList73.isEmpty();
        charSequenceList73.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str79 = charSequenceList73.toString();
        boolean boolean80 = charSequenceList58.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList73);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream81 = charSequenceList73.stream();
        boolean boolean82 = charSequenceList9.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList73);
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor83 = charSequenceList9.listIterator();
        int int84 = charSequenceList9.size();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "hi!" + "'", charSequence21, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "hi!" + "'", charSequence36, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[hi!, ]" + "'", str45, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(charSequenceArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + charSequence70 + "' != '" + "hi!" + "'", charSequence70, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[hi!, ]" + "'", str79, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(charSequenceStream81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(charSequenceItor83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 3 + "'", int84 == 3);
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.element();
        java.lang.CharSequence charSequence8 = charSequenceList2.peekLast();
        java.lang.CharSequence charSequence9 = charSequenceList2.poll();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = charSequenceList16.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence charSequence21 = charSequenceList16.peek();
        java.lang.CharSequence charSequence22 = charSequenceList16.pollFirst();
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator27 = charSequenceList25.spliterator();
        boolean boolean28 = charSequenceList25.isEmpty();
        charSequenceList25.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean32 = charSequenceList25.offerLast((java.lang.CharSequence) "");
        charSequenceList25.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean35 = charSequenceList16.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        boolean boolean36 = charSequenceList9.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        charSequenceList9.addFirst((java.lang.CharSequence) "[hi!, hi!, ]");
        java.lang.CharSequence charSequence39 = charSequenceList9.pollFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "hi!" + "'", charSequence21, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "[hi!, hi!, ]" + "'", charSequence39, "[hi!, hi!, ]");
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList2.spliterator();
        boolean boolean12 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence13 = charSequenceList2.element();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceList2.stream();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor15 = charSequenceList2.listIterator();
        boolean boolean17 = charSequenceList2.offer((java.lang.CharSequence) "[]");
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceList20.spliterator();
        int int23 = charSequenceList20.size();
        java.lang.CharSequence charSequence24 = charSequenceList20.remove();
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator29 = charSequenceList27.spliterator();
        boolean boolean30 = charSequenceList27.isEmpty();
        charSequenceList27.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean34 = charSequenceList27.offerLast((java.lang.CharSequence) "");
        charSequenceList27.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence37 = charSequenceList27.removeLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor38 = charSequenceList27.listIterator();
        boolean boolean39 = charSequenceList20.removeLastOccurrence((java.lang.Object) charSequenceList27);
        boolean boolean41 = charSequenceList27.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray43 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList44 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList44, charSequenceArray43);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = charSequenceList44.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList47);
        java.lang.CharSequence charSequence49 = charSequenceList44.peek();
        java.lang.CharSequence charSequence50 = charSequenceList44.pollFirst();
        charSequenceList44.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList55 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55, charSequenceArray54);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList58 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean59 = charSequenceList55.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList58);
        java.lang.Object obj60 = null;
        boolean boolean61 = charSequenceList55.equals(obj60);
        java.lang.CharSequence[] charSequenceArray63 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList64 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64, charSequenceArray63);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator66 = charSequenceList64.spliterator();
        boolean boolean67 = charSequenceList55.removeLastOccurrence((java.lang.Object) charSequenceList64);
        java.lang.CharSequence charSequence68 = charSequenceList64.removeLast();
        boolean boolean69 = charSequenceList44.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64);
        java.lang.CharSequence[] charSequenceArray71 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList72 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList72, charSequenceArray71);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator74 = charSequenceList72.spliterator();
        boolean boolean75 = charSequenceList72.isEmpty();
        charSequenceList72.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean79 = charSequenceList72.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence80 = charSequenceList72.pop();
        charSequenceList72.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence83 = charSequenceList72.poll();
        boolean boolean84 = charSequenceList64.contains((java.lang.Object) charSequenceList72);
        boolean boolean85 = charSequenceList27.removeFirstOccurrence((java.lang.Object) charSequenceList64);
        boolean boolean86 = charSequenceList2.remove((java.lang.Object) charSequenceList64);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor87 = charSequenceList64.iterator();
        java.lang.Object obj88 = charSequenceList64.clone();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "" + "'", charSequence24, "");
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "" + "'", charSequence37, "");
        org.junit.Assert.assertNotNull(charSequenceItor38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(charSequenceArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "hi!" + "'", charSequence49, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "hi!" + "'", charSequence50, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charSequenceArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + charSequence68 + "' != '" + "" + "'", charSequence68, "");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(charSequenceArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertEquals("'" + charSequence80 + "' != '" + "hi!" + "'", charSequence80, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence83 + "' != '" + "hi!" + "'", charSequence83, "hi!");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(charSequenceItor87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "[]");
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        boolean boolean14 = charSequenceList2.isEmpty();
        java.lang.Object obj15 = charSequenceList2.clone();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceList2.parallelStream();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList19.equals(obj24);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = charSequenceList28.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        java.lang.CharSequence charSequence33 = charSequenceList28.peek();
        java.lang.CharSequence charSequence34 = charSequenceList28.pollFirst();
        boolean boolean35 = charSequenceList19.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        boolean boolean36 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        boolean boolean38 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray40 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList41 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList41, charSequenceArray40);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList44 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean45 = charSequenceList41.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList44);
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48, charSequenceArray47);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceList48.spliterator();
        int int51 = charSequenceList48.size();
        boolean boolean52 = charSequenceList41.contains((java.lang.Object) charSequenceList48);
        boolean boolean53 = charSequenceList41.isEmpty();
        boolean boolean54 = charSequenceList2.remove((java.lang.Object) boolean53);
        java.lang.CharSequence charSequence55 = charSequenceList2.remove();
        java.lang.CharSequence charSequence56 = charSequenceList2.pop();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "hi!" + "'", charSequence33, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + charSequence55 + "' != '" + "hi!" + "'", charSequence55, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence56 + "' != '" + "" + "'", charSequence56, "");
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence22 = charSequenceList17.peek();
        boolean boolean24 = charSequenceList17.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean25 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence26 = charSequenceList2.pop();
        java.lang.CharSequence charSequence27 = charSequenceList2.peekFirst();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence29 = charSequenceList2.get((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNull(charSequence27);
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        charSequenceList5.clear();
        java.lang.CharSequence charSequence8 = charSequenceList5.peekLast();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        boolean boolean18 = charSequenceList11.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence charSequence19 = charSequenceList11.poll();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor20 = charSequenceList11.iterator();
        int int21 = charSequenceList5.lastIndexOf((java.lang.Object) charSequenceItor20);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(charSequence8);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "hi!" + "'", charSequence19, "hi!");
        org.junit.Assert.assertNotNull(charSequenceItor20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        boolean boolean14 = charSequenceList2.isEmpty();
        java.lang.Object obj15 = charSequenceList2.clone();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceList2.parallelStream();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList19.equals(obj24);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = charSequenceList28.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        java.lang.CharSequence charSequence33 = charSequenceList28.peek();
        java.lang.CharSequence charSequence34 = charSequenceList28.pollFirst();
        boolean boolean35 = charSequenceList19.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        boolean boolean36 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceList39.spliterator();
        int int42 = charSequenceList39.size();
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator47 = charSequenceList45.spliterator();
        int int48 = charSequenceList45.size();
        boolean boolean49 = charSequenceList39.contains((java.lang.Object) charSequenceList45);
        java.lang.CharSequence charSequence50 = charSequenceList45.removeLast();
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList53 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53, charSequenceArray52);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator55 = charSequenceList53.spliterator();
        boolean boolean56 = charSequenceList53.isEmpty();
        charSequenceList53.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str59 = charSequenceList53.toString();
        java.lang.CharSequence charSequence60 = charSequenceList53.removeFirst();
        boolean boolean62 = charSequenceList53.offer((java.lang.CharSequence) "hi!");
        boolean boolean63 = charSequenceList45.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53);
        boolean boolean64 = charSequenceList28.remove((java.lang.Object) charSequenceList53);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "hi!" + "'", charSequence33, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "" + "'", charSequence50, "");
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[hi!, ]" + "'", str59, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence60 + "' != '" + "hi!" + "'", charSequence60, "hi!");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence charSequence9 = charSequenceList2.removeFirst();
        boolean boolean11 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = charSequenceList14.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceList21.spliterator();
        int int24 = charSequenceList21.size();
        boolean boolean25 = charSequenceList14.contains((java.lang.Object) charSequenceList21);
        java.lang.CharSequence charSequence26 = charSequenceList14.element();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        boolean boolean32 = charSequenceList29.isEmpty();
        charSequenceList29.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str35 = charSequenceList29.toString();
        boolean boolean36 = charSequenceList14.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        boolean boolean38 = charSequenceList29.offer((java.lang.CharSequence) "");
        charSequenceList29.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList29.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        charSequenceList29.addLast((java.lang.CharSequence) "hi!");
        boolean boolean47 = charSequenceList2.removeFirstOccurrence((java.lang.Object) "hi!");
        boolean boolean49 = charSequenceList2.offerLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence50 = charSequenceList2.pollFirst();
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList53 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53, charSequenceArray52);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = charSequenceList53.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList56);
        java.lang.CharSequence charSequence58 = charSequenceList53.peek();
        java.lang.CharSequence charSequence59 = charSequenceList53.pollFirst();
        charSequenceList53.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence62 = charSequenceList53.pop();
        java.lang.Object[] objArray63 = charSequenceList53.toArray();
        boolean boolean64 = charSequenceList2.contains((java.lang.Object) charSequenceList53);
        boolean boolean65 = charSequenceList53.isEmpty();
        boolean boolean67 = charSequenceList53.offerFirst((java.lang.CharSequence) "[[hi!, [hi!, ]], hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[hi!, ]" + "'", str35, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "" + "'", charSequence50, "");
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + charSequence58 + "' != '" + "hi!" + "'", charSequence58, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence59 + "' != '" + "hi!" + "'", charSequence59, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence62 + "' != '" + "hi!" + "'", charSequence62, "hi!");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        charSequenceList2.addFirst((java.lang.CharSequence) "[hi!, ]");
        charSequenceList2.clear();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceList15.spliterator();
        java.util.LinkedList<java.lang.Comparable<java.lang.String>> strComparableList18 = new java.util.LinkedList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = charSequenceList15.contains((java.lang.Object) strComparableList18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = charSequenceList22.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        int int32 = charSequenceList29.size();
        boolean boolean33 = charSequenceList22.contains((java.lang.Object) charSequenceList29);
        java.lang.CharSequence charSequence34 = charSequenceList22.element();
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        java.lang.CharSequence[] charSequenceArray43 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList44 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList44, charSequenceArray43);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator46 = charSequenceList44.spliterator();
        int int47 = charSequenceList44.size();
        boolean boolean48 = charSequenceList37.contains((java.lang.Object) charSequenceList44);
        java.lang.CharSequence charSequence49 = charSequenceList37.element();
        java.lang.CharSequence[] charSequenceArray51 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52, charSequenceArray51);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator54 = charSequenceList52.spliterator();
        boolean boolean55 = charSequenceList52.isEmpty();
        charSequenceList52.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str58 = charSequenceList52.toString();
        boolean boolean59 = charSequenceList37.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        boolean boolean61 = charSequenceList52.offer((java.lang.CharSequence) "");
        charSequenceList52.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean66 = charSequenceList52.add((java.lang.CharSequence) "");
        int int67 = charSequenceList22.lastIndexOf((java.lang.Object) boolean66);
        boolean boolean68 = charSequenceList15.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList71 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList71, charSequenceArray70);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList74 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean75 = charSequenceList71.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList74);
        java.lang.CharSequence charSequence76 = charSequenceList71.peek();
        java.lang.CharSequence charSequence77 = charSequenceList71.pollFirst();
        charSequenceList71.addFirst((java.lang.CharSequence) "hi!");
        int int80 = charSequenceList22.indexOf((java.lang.Object) charSequenceList71);
        boolean boolean81 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        boolean boolean83 = charSequenceList2.offer((java.lang.CharSequence) "[[hi!, ]]");
        java.lang.CharSequence charSequence84 = charSequenceList2.pollLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "hi!" + "'", charSequence49, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[hi!, ]" + "'", str58, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + charSequence76 + "' != '" + "hi!" + "'", charSequence76, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence77 + "' != '" + "hi!" + "'", charSequence77, "hi!");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertEquals("'" + charSequence84 + "' != '" + "[[hi!, ]]" + "'", charSequence84, "[[hi!, ]]");
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean18 = charSequenceList15.isEmpty();
        charSequenceList15.addFirst((java.lang.CharSequence) "[hi!]");
        boolean boolean22 = charSequenceList15.offer((java.lang.CharSequence) "[hi!, ]");
        boolean boolean24 = charSequenceList15.offer((java.lang.CharSequence) "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceList2.stream();
        java.lang.CharSequence charSequence16 = null;
        charSequenceList2.add(0, charSequence16);
        java.lang.CharSequence charSequence18 = charSequenceList2.removeFirst();
        java.lang.CharSequence charSequence19 = charSequenceList2.peekFirst();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence21 = charSequenceList2.get(7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 7, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertNull(charSequence18);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "hi!" + "'", charSequence19, "hi!");
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        charSequenceList2.addFirst((java.lang.CharSequence) "[hi!, ]");
        charSequenceList2.clear();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceList15.spliterator();
        java.util.LinkedList<java.lang.Comparable<java.lang.String>> strComparableList18 = new java.util.LinkedList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = charSequenceList15.contains((java.lang.Object) strComparableList18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = charSequenceList22.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        int int32 = charSequenceList29.size();
        boolean boolean33 = charSequenceList22.contains((java.lang.Object) charSequenceList29);
        java.lang.CharSequence charSequence34 = charSequenceList22.element();
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        java.lang.CharSequence[] charSequenceArray43 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList44 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList44, charSequenceArray43);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator46 = charSequenceList44.spliterator();
        int int47 = charSequenceList44.size();
        boolean boolean48 = charSequenceList37.contains((java.lang.Object) charSequenceList44);
        java.lang.CharSequence charSequence49 = charSequenceList37.element();
        java.lang.CharSequence[] charSequenceArray51 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52, charSequenceArray51);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator54 = charSequenceList52.spliterator();
        boolean boolean55 = charSequenceList52.isEmpty();
        charSequenceList52.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str58 = charSequenceList52.toString();
        boolean boolean59 = charSequenceList37.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        boolean boolean61 = charSequenceList52.offer((java.lang.CharSequence) "");
        charSequenceList52.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean66 = charSequenceList52.add((java.lang.CharSequence) "");
        int int67 = charSequenceList22.lastIndexOf((java.lang.Object) boolean66);
        boolean boolean68 = charSequenceList15.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList71 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList71, charSequenceArray70);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList74 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean75 = charSequenceList71.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList74);
        java.lang.CharSequence charSequence76 = charSequenceList71.peek();
        java.lang.CharSequence charSequence77 = charSequenceList71.pollFirst();
        charSequenceList71.addFirst((java.lang.CharSequence) "hi!");
        int int80 = charSequenceList22.indexOf((java.lang.Object) charSequenceList71);
        boolean boolean81 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        boolean boolean83 = charSequenceList2.offer((java.lang.CharSequence) "[[hi!, ]]");
        java.lang.CharSequence charSequence84 = charSequenceList2.peek();
        java.lang.CharSequence charSequence85 = charSequenceList2.removeFirst();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator86 = charSequenceList2.spliterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "hi!" + "'", charSequence49, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[hi!, ]" + "'", str58, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + charSequence76 + "' != '" + "hi!" + "'", charSequence76, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence77 + "' != '" + "hi!" + "'", charSequence77, "hi!");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertEquals("'" + charSequence84 + "' != '" + "[[hi!, ]]" + "'", charSequence84, "[[hi!, ]]");
        org.junit.Assert.assertEquals("'" + charSequence85 + "' != '" + "[[hi!, ]]" + "'", charSequence85, "[[hi!, ]]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator86);
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.element();
        int int8 = charSequenceList2.size();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList11.isEmpty();
        charSequenceList11.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean18 = charSequenceList11.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        java.lang.CharSequence charSequence27 = charSequenceList21.pollFirst();
        boolean boolean28 = charSequenceList11.contains((java.lang.Object) charSequence27);
        java.lang.CharSequence charSequence29 = charSequenceList11.peekFirst();
        boolean boolean30 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList33, charSequenceArray32);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator35 = charSequenceList33.spliterator();
        boolean boolean36 = charSequenceList33.isEmpty();
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceList39.spliterator();
        boolean boolean42 = charSequenceList39.isEmpty();
        charSequenceList39.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean46 = charSequenceList39.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence47 = charSequenceList39.pop();
        charSequenceList39.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean51 = charSequenceList39.offer((java.lang.CharSequence) "[hi!, ]");
        boolean boolean53 = charSequenceList39.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence54 = charSequenceList39.getFirst();
        java.lang.CharSequence[] charSequenceArray56 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList57 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList57, charSequenceArray56);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList60 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean61 = charSequenceList57.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList60);
        int int63 = charSequenceList57.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence64 = charSequenceList57.removeLast();
        java.lang.CharSequence charSequence65 = charSequenceList57.peekLast();
        java.lang.CharSequence[] charSequenceArray67 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList68 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList68, charSequenceArray67);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList71 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean72 = charSequenceList68.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList71);
        java.lang.CharSequence[] charSequenceArray74 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList75 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList75, charSequenceArray74);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator77 = charSequenceList75.spliterator();
        int int78 = charSequenceList75.size();
        boolean boolean79 = charSequenceList68.contains((java.lang.Object) charSequenceList75);
        java.lang.CharSequence charSequence80 = charSequenceList68.element();
        java.lang.CharSequence[] charSequenceArray82 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList83 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList83, charSequenceArray82);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator85 = charSequenceList83.spliterator();
        boolean boolean86 = charSequenceList83.isEmpty();
        charSequenceList83.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str89 = charSequenceList83.toString();
        boolean boolean90 = charSequenceList68.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList83);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream91 = charSequenceList83.stream();
        boolean boolean92 = charSequenceList57.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList83);
        java.lang.CharSequence charSequence93 = charSequenceList57.remove();
        boolean boolean94 = charSequenceList39.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList57);
        int int95 = charSequenceList33.lastIndexOf((java.lang.Object) charSequenceList57);
        java.lang.CharSequence charSequence96 = charSequenceList57.pollFirst();
        boolean boolean97 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList57);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "hi!" + "'", charSequence47, "hi!");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "[hi!, ]" + "'", charSequence54, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence64 + "' != '" + "hi!" + "'", charSequence64, "hi!");
        org.junit.Assert.assertNull(charSequence65);
        org.junit.Assert.assertNotNull(charSequenceArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(charSequenceArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + charSequence80 + "' != '" + "hi!" + "'", charSequence80, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[hi!, ]" + "'", str89, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(charSequenceStream91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertEquals("'" + charSequence93 + "' != '" + "hi!" + "'", charSequence93, "hi!");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence96 + "' != '" + "" + "'", charSequence96, "");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor5 = charSequenceList2.descendingIterator();
        java.lang.CharSequence charSequence6 = charSequenceList2.peek();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.CharSequence> charSequenceItor8 = charSequenceList2.listIterator((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertNotNull(charSequenceItor5);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor5 = charSequenceList2.descendingIterator();
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList8 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList8.spliterator();
        java.util.LinkedList<java.lang.Comparable<java.lang.String>> strComparableList11 = new java.util.LinkedList<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = charSequenceList8.contains((java.lang.Object) strComparableList11);
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = charSequenceList15.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        int int25 = charSequenceList22.size();
        boolean boolean26 = charSequenceList15.contains((java.lang.Object) charSequenceList22);
        java.lang.CharSequence charSequence27 = charSequenceList15.element();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator39 = charSequenceList37.spliterator();
        int int40 = charSequenceList37.size();
        boolean boolean41 = charSequenceList30.contains((java.lang.Object) charSequenceList37);
        java.lang.CharSequence charSequence42 = charSequenceList30.element();
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator47 = charSequenceList45.spliterator();
        boolean boolean48 = charSequenceList45.isEmpty();
        charSequenceList45.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str51 = charSequenceList45.toString();
        boolean boolean52 = charSequenceList30.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        boolean boolean54 = charSequenceList45.offer((java.lang.CharSequence) "");
        charSequenceList45.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean59 = charSequenceList45.add((java.lang.CharSequence) "");
        int int60 = charSequenceList15.lastIndexOf((java.lang.Object) boolean59);
        boolean boolean61 = charSequenceList8.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray63 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList64 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64, charSequenceArray63);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList67 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean68 = charSequenceList64.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList67);
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList71 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList71, charSequenceArray70);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator73 = charSequenceList71.spliterator();
        int int74 = charSequenceList71.size();
        boolean boolean75 = charSequenceList64.contains((java.lang.Object) charSequenceList71);
        java.lang.CharSequence charSequence76 = charSequenceList64.element();
        java.lang.CharSequence[] charSequenceArray78 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList79 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList79, charSequenceArray78);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator81 = charSequenceList79.spliterator();
        boolean boolean82 = charSequenceList79.isEmpty();
        charSequenceList79.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str85 = charSequenceList79.toString();
        boolean boolean86 = charSequenceList64.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList79);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream87 = charSequenceList79.stream();
        boolean boolean88 = charSequenceList15.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList79);
        boolean boolean89 = charSequenceList2.equals((java.lang.Object) charSequenceList79);
        java.lang.CharSequence charSequence90 = charSequenceList79.element();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertNotNull(charSequenceItor5);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[hi!, ]" + "'", str51, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(charSequenceArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + charSequence76 + "' != '" + "hi!" + "'", charSequence76, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[hi!, ]" + "'", str85, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(charSequenceStream87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + charSequence90 + "' != '" + "hi!" + "'", charSequence90, "hi!");
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceList2.parallelStream();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator21 = charSequenceList19.spliterator();
        int int22 = charSequenceList19.size();
        boolean boolean23 = charSequenceList12.contains((java.lang.Object) charSequenceList19);
        boolean boolean24 = charSequenceList12.isEmpty();
        java.lang.Object obj25 = charSequenceList12.clone();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream26 = charSequenceList12.parallelStream();
        boolean boolean27 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator32 = charSequenceList30.spliterator();
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = charSequenceList35.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42, charSequenceArray41);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator44 = charSequenceList42.spliterator();
        int int45 = charSequenceList42.size();
        boolean boolean46 = charSequenceList35.contains((java.lang.Object) charSequenceList42);
        java.lang.CharSequence charSequence47 = charSequenceList35.element();
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList50 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50, charSequenceArray49);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator52 = charSequenceList50.spliterator();
        boolean boolean53 = charSequenceList50.isEmpty();
        charSequenceList50.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str56 = charSequenceList50.toString();
        boolean boolean57 = charSequenceList35.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50);
        boolean boolean59 = charSequenceList50.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor60 = charSequenceList50.descendingIterator();
        boolean boolean61 = charSequenceList30.removeLastOccurrence((java.lang.Object) charSequenceItor60);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator62 = charSequenceList30.spliterator();
        java.lang.CharSequence charSequence63 = charSequenceList30.getLast();
        java.lang.CharSequence[] charSequenceArray65 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList66 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList66, charSequenceArray65);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator68 = charSequenceList66.spliterator();
        boolean boolean69 = charSequenceList66.isEmpty();
        java.lang.CharSequence charSequence70 = charSequenceList66.removeLast();
        java.lang.CharSequence charSequence71 = charSequenceList66.pollFirst();
        boolean boolean72 = charSequenceList30.contains((java.lang.Object) charSequence71);
        java.lang.CharSequence charSequence73 = charSequenceList30.element();
        boolean boolean74 = charSequenceList12.contains((java.lang.Object) charSequenceList30);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor75 = charSequenceList12.descendingIterator();
        java.lang.CharSequence charSequence76 = charSequenceList12.peek();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator32);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "hi!" + "'", charSequence47, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[hi!, ]" + "'", str56, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(charSequenceItor60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator62);
        org.junit.Assert.assertEquals("'" + charSequence63 + "' != '" + "" + "'", charSequence63, "");
        org.junit.Assert.assertNotNull(charSequenceArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + charSequence70 + "' != '" + "" + "'", charSequence70, "");
        org.junit.Assert.assertNull(charSequence71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + charSequence73 + "' != '" + "" + "'", charSequence73, "");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(charSequenceItor75);
        org.junit.Assert.assertEquals("'" + charSequence76 + "' != '" + "hi!" + "'", charSequence76, "hi!");
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceList17.stream();
        boolean boolean27 = charSequenceList17.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence28 = charSequenceList17.poll();
        java.lang.CharSequence charSequence29 = charSequenceList17.peekFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceStream25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "[hi!, ]" + "'", charSequence28, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList2.removeLastOccurrence(obj9);
        boolean boolean12 = charSequenceList2.remove((java.lang.Object) (short) 10);
        java.lang.Object[] objArray13 = charSequenceList2.toArray();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, ]");
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        charSequenceList5.push((java.lang.CharSequence) "");
        boolean boolean10 = charSequenceList5.offerLast((java.lang.CharSequence) "[hi!]");
        java.lang.CharSequence charSequence11 = charSequenceList5.removeLast();
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceList14.spliterator();
        boolean boolean17 = charSequenceList14.isEmpty();
        charSequenceList14.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str20 = charSequenceList14.toString();
        java.lang.CharSequence charSequence21 = charSequenceList14.removeFirst();
        boolean boolean23 = charSequenceList14.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList26 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26, charSequenceArray25);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = charSequenceList26.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList33, charSequenceArray32);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator35 = charSequenceList33.spliterator();
        int int36 = charSequenceList33.size();
        boolean boolean37 = charSequenceList26.contains((java.lang.Object) charSequenceList33);
        java.lang.CharSequence charSequence38 = charSequenceList26.element();
        java.lang.CharSequence[] charSequenceArray40 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList41 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList41, charSequenceArray40);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator43 = charSequenceList41.spliterator();
        boolean boolean44 = charSequenceList41.isEmpty();
        charSequenceList41.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str47 = charSequenceList41.toString();
        boolean boolean48 = charSequenceList26.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList41);
        boolean boolean50 = charSequenceList41.offer((java.lang.CharSequence) "");
        charSequenceList41.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList41.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        charSequenceList41.addLast((java.lang.CharSequence) "hi!");
        boolean boolean59 = charSequenceList14.removeFirstOccurrence((java.lang.Object) "hi!");
        int int60 = charSequenceList14.size();
        charSequenceList14.addLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence63 = charSequenceList14.getLast();
        boolean boolean64 = charSequenceList5.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence65 = charSequenceList14.remove();
        java.util.function.UnaryOperator<java.lang.CharSequence> charSequenceUnaryOperator66 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList14.replaceAll(charSequenceUnaryOperator66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "[hi!]" + "'", charSequence11, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[hi!, ]" + "'", str20, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "hi!" + "'", charSequence21, "hi!");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "hi!" + "'", charSequence38, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[hi!, ]" + "'", str47, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertEquals("'" + charSequence63 + "' != '" + "[hi!, ]" + "'", charSequence63, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + charSequence65 + "' != '" + "" + "'", charSequence65, "");
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceList2.parallelStream();
        java.lang.Object[] objArray9 = charSequenceList2.toArray();
        java.lang.Object obj10 = charSequenceList2.clone();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "[]");
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList8 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList8.spliterator();
        int int11 = charSequenceList8.size();
        boolean boolean12 = charSequenceList2.contains((java.lang.Object) charSequenceList8);
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceList15.spliterator();
        boolean boolean18 = charSequenceList15.isEmpty();
        java.lang.CharSequence charSequence19 = charSequenceList15.removeLast();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = charSequenceList22.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        java.lang.CharSequence charSequence27 = charSequenceList22.peek();
        boolean boolean29 = charSequenceList22.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = charSequenceList32.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        boolean boolean37 = charSequenceList22.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        java.lang.CharSequence charSequence38 = charSequenceList22.pop();
        boolean boolean39 = charSequenceList15.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42, charSequenceArray41);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = charSequenceList42.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        java.lang.Object obj47 = null;
        boolean boolean48 = charSequenceList42.equals(obj47);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        java.lang.CharSequence charSequence50 = charSequenceList42.peek();
        java.lang.CharSequence charSequence51 = charSequenceList42.remove();
        boolean boolean52 = charSequenceList22.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        boolean boolean53 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        charSequenceList2.clear();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "hi!" + "'", charSequence38, "hi!");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "hi!" + "'", charSequence50, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "hi!" + "'", charSequence51, "hi!");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceList2.parallelStream();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator21 = charSequenceList19.spliterator();
        int int22 = charSequenceList19.size();
        boolean boolean23 = charSequenceList12.contains((java.lang.Object) charSequenceList19);
        boolean boolean24 = charSequenceList12.isEmpty();
        java.lang.Object obj25 = charSequenceList12.clone();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream26 = charSequenceList12.parallelStream();
        boolean boolean27 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        int int28 = charSequenceList12.size();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceList12.spliterator();
        boolean boolean15 = charSequenceList12.isEmpty();
        java.lang.CharSequence charSequence16 = charSequenceList12.removeLast();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence charSequence24 = charSequenceList19.peek();
        boolean boolean26 = charSequenceList19.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = charSequenceList29.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        boolean boolean34 = charSequenceList19.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.CharSequence charSequence35 = charSequenceList19.pop();
        boolean boolean36 = charSequenceList12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = charSequenceList39.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        java.lang.Object obj44 = null;
        boolean boolean45 = charSequenceList39.equals(obj44);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence charSequence47 = charSequenceList39.peek();
        java.lang.CharSequence charSequence48 = charSequenceList39.remove();
        boolean boolean49 = charSequenceList19.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean50 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor51 = charSequenceList2.iterator();
        charSequenceList2.push((java.lang.CharSequence) "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[]" + "'", str8, "[]");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "hi!" + "'", charSequence24, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "hi!" + "'", charSequence47, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "hi!" + "'", charSequence48, "hi!");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(charSequenceItor51);
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        java.lang.CharSequence charSequence9 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.CharSequence charSequence18 = charSequenceList13.peek();
        java.lang.CharSequence charSequence19 = charSequenceList13.pollFirst();
        charSequenceList13.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence22 = charSequenceList13.poll();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = charSequenceList2.addAll((int) (byte) 1, (java.util.Collection<java.lang.CharSequence>) charSequenceList13);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "hi!" + "'", charSequence18, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "hi!" + "'", charSequence19, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList2.spliterator();
        boolean boolean12 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence13 = charSequenceList2.element();
        java.lang.CharSequence charSequence14 = charSequenceList2.peekLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor15 = charSequenceList2.listIterator();
        java.lang.CharSequence charSequence16 = charSequenceList2.removeFirst();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        int int25 = charSequenceList19.lastIndexOf((java.lang.Object) (-1L));
        int int26 = charSequenceList19.size();
        boolean boolean27 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList19);
        charSequenceList2.push((java.lang.CharSequence) "[hi!, hi!, ]");
        java.lang.Object obj30 = null;
        boolean boolean31 = charSequenceList2.equals(obj30);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence charSequence15 = charSequenceList11.removeLast();
        java.util.List<java.lang.CharSequence> charSequenceList18 = charSequenceList11.subList(0, (int) (short) 0);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceList21.spliterator();
        boolean boolean24 = charSequenceList21.isEmpty();
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator29 = charSequenceList27.spliterator();
        boolean boolean30 = charSequenceList27.isEmpty();
        charSequenceList27.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean34 = charSequenceList27.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence35 = charSequenceList27.pop();
        charSequenceList27.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean39 = charSequenceList27.offer((java.lang.CharSequence) "[hi!, ]");
        boolean boolean41 = charSequenceList27.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence42 = charSequenceList27.getFirst();
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean49 = charSequenceList45.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList48);
        int int51 = charSequenceList45.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence52 = charSequenceList45.removeLast();
        java.lang.CharSequence charSequence53 = charSequenceList45.peekLast();
        java.lang.CharSequence[] charSequenceArray55 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56, charSequenceArray55);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList59 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean60 = charSequenceList56.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList59);
        java.lang.CharSequence[] charSequenceArray62 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList63 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList63, charSequenceArray62);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator65 = charSequenceList63.spliterator();
        int int66 = charSequenceList63.size();
        boolean boolean67 = charSequenceList56.contains((java.lang.Object) charSequenceList63);
        java.lang.CharSequence charSequence68 = charSequenceList56.element();
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList71 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList71, charSequenceArray70);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator73 = charSequenceList71.spliterator();
        boolean boolean74 = charSequenceList71.isEmpty();
        charSequenceList71.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str77 = charSequenceList71.toString();
        boolean boolean78 = charSequenceList56.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList71);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream79 = charSequenceList71.stream();
        boolean boolean80 = charSequenceList45.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList71);
        java.lang.CharSequence charSequence81 = charSequenceList45.remove();
        boolean boolean82 = charSequenceList27.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        int int83 = charSequenceList21.lastIndexOf((java.lang.Object) charSequenceList45);
        boolean boolean84 = charSequenceList11.remove((java.lang.Object) int83);
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList11.add((int) (byte) -1, (java.lang.CharSequence) "[hi!, hi!, ]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "" + "'", charSequence15, "");
        org.junit.Assert.assertNotNull(charSequenceList18);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "[hi!, ]" + "'", charSequence42, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "hi!" + "'", charSequence52, "hi!");
        org.junit.Assert.assertNull(charSequence53);
        org.junit.Assert.assertNotNull(charSequenceArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(charSequenceArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + charSequence68 + "' != '" + "hi!" + "'", charSequence68, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[hi!, ]" + "'", str77, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(charSequenceStream79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertEquals("'" + charSequence81 + "' != '" + "hi!" + "'", charSequence81, "hi!");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceList17.stream();
        boolean boolean27 = charSequenceList17.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence28 = charSequenceList17.poll();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceList31.spliterator();
        charSequenceList31.clear();
        boolean boolean35 = charSequenceList17.removeLastOccurrence((java.lang.Object) charSequenceList31);
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList41 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean42 = charSequenceList38.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList41);
        java.lang.Object obj43 = null;
        boolean boolean44 = charSequenceList38.equals(obj43);
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList50 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean51 = charSequenceList47.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList50);
        java.lang.CharSequence charSequence52 = charSequenceList47.peek();
        boolean boolean54 = charSequenceList47.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray56 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList57 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList57, charSequenceArray56);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList60 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean61 = charSequenceList57.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList60);
        boolean boolean62 = charSequenceList47.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList60);
        java.lang.CharSequence charSequence63 = charSequenceList60.poll();
        boolean boolean64 = charSequenceList38.remove((java.lang.Object) charSequenceList60);
        boolean boolean65 = charSequenceList17.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList60);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor66 = charSequenceList60.iterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceStream25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "[hi!, ]" + "'", charSequence28, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "hi!" + "'", charSequence52, "hi!");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(charSequenceArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(charSequence63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(charSequenceItor66);
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceList11.spliterator();
        java.lang.CharSequence charSequence16 = charSequenceList11.element();
        boolean boolean18 = charSequenceList11.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence19 = charSequenceList11.pop();
        charSequenceList11.addLast((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceList24.spliterator();
        boolean boolean27 = charSequenceList24.isEmpty();
        java.lang.CharSequence charSequence28 = charSequenceList24.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream29 = charSequenceList24.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream30 = charSequenceList24.parallelStream();
        charSequenceList24.push((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream33 = charSequenceList24.stream();
        boolean boolean34 = charSequenceList11.equals((java.lang.Object) charSequenceList24);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        java.lang.Object obj42 = null;
        boolean boolean43 = charSequenceList37.equals(obj42);
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = charSequenceList46.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList49);
        java.lang.CharSequence charSequence51 = charSequenceList46.peek();
        java.lang.CharSequence charSequence52 = charSequenceList46.pollFirst();
        boolean boolean53 = charSequenceList37.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor54 = charSequenceList37.iterator();
        java.lang.CharSequence[] charSequenceArray56 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList57 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList57, charSequenceArray56);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator59 = charSequenceList57.spliterator();
        java.lang.Object obj60 = charSequenceList57.clone();
        boolean boolean61 = charSequenceList37.removeLastOccurrence((java.lang.Object) charSequenceList57);
        boolean boolean62 = charSequenceList24.remove((java.lang.Object) boolean61);
        java.util.function.UnaryOperator<java.lang.CharSequence> charSequenceUnaryOperator63 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList24.replaceAll(charSequenceUnaryOperator63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "[hi!, ]" + "'", charSequence19, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertNotNull(charSequenceStream29);
        org.junit.Assert.assertNotNull(charSequenceStream30);
        org.junit.Assert.assertNotNull(charSequenceStream33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "hi!" + "'", charSequence51, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "hi!" + "'", charSequence52, "hi!");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charSequenceItor54);
        org.junit.Assert.assertNotNull(charSequenceArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "[]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceList18.spliterator();
        int int21 = charSequenceList18.size();
        boolean boolean22 = charSequenceList11.contains((java.lang.Object) charSequenceList18);
        java.lang.CharSequence charSequence23 = charSequenceList11.element();
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList26 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26, charSequenceArray25);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator28 = charSequenceList26.spliterator();
        boolean boolean29 = charSequenceList26.isEmpty();
        charSequenceList26.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str32 = charSequenceList26.toString();
        boolean boolean33 = charSequenceList11.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26);
        boolean boolean35 = charSequenceList26.offer((java.lang.CharSequence) "");
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor36 = charSequenceList26.listIterator();
        boolean boolean37 = charSequenceList2.contains((java.lang.Object) charSequenceItor36);
        java.lang.CharSequence charSequence38 = charSequenceList2.pollFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "hi!" + "'", charSequence23, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[hi!, ]" + "'", str32, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceItor36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(charSequence38);
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList13.equals(obj18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        boolean boolean25 = charSequenceList13.removeLastOccurrence((java.lang.Object) charSequenceList22);
        charSequenceList13.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean28 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        java.util.LinkedList<java.io.Serializable> serializableList29 = new java.util.LinkedList<java.io.Serializable>();
        boolean boolean30 = charSequenceList2.equals((java.lang.Object) serializableList29);
        java.lang.CharSequence charSequence32 = charSequenceList2.get(0);
        java.lang.CharSequence charSequence33 = charSequenceList2.pop();
        java.lang.Object[] objArray34 = charSequenceList2.toArray();
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator39 = charSequenceList37.spliterator();
        boolean boolean40 = charSequenceList37.isEmpty();
        charSequenceList37.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str43 = charSequenceList37.toString();
        java.lang.CharSequence charSequence44 = charSequenceList37.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream45 = charSequenceList37.parallelStream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator46 = charSequenceList37.spliterator();
        boolean boolean47 = charSequenceList2.removeFirstOccurrence((java.lang.Object) charSequenceList37);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "hi!" + "'", charSequence32, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "hi!" + "'", charSequence33, "hi!");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[hi!, hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[hi!, ]" + "'", str43, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "hi!" + "'", charSequence44, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream45);
        org.junit.Assert.assertNotNull(charSequenceSpliterator46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList13.equals(obj18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        boolean boolean25 = charSequenceList13.removeLastOccurrence((java.lang.Object) charSequenceList22);
        java.lang.CharSequence charSequence26 = charSequenceList22.removeLast();
        boolean boolean27 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence30 = charSequenceList22.set((-1), (java.lang.CharSequence) "[hi!, hi!, ]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        int int27 = charSequenceList2.indexOf((java.lang.Object) charSequence26);
        int int28 = charSequenceList2.size();
        java.lang.CharSequence charSequence29 = charSequenceList2.pop();
        charSequenceList2.push((java.lang.CharSequence) "[hi!]");
        charSequenceList2.addFirst((java.lang.CharSequence) "[hi!]");
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = charSequenceList36.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList43, charSequenceArray42);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator45 = charSequenceList43.spliterator();
        int int46 = charSequenceList43.size();
        boolean boolean47 = charSequenceList36.contains((java.lang.Object) charSequenceList43);
        java.lang.CharSequence charSequence48 = charSequenceList36.element();
        java.lang.CharSequence[] charSequenceArray50 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList51 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList51, charSequenceArray50);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator53 = charSequenceList51.spliterator();
        boolean boolean54 = charSequenceList51.isEmpty();
        charSequenceList51.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str57 = charSequenceList51.toString();
        boolean boolean58 = charSequenceList36.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList51);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor59 = charSequenceList36.descendingIterator();
        boolean boolean60 = charSequenceList2.contains((java.lang.Object) charSequenceList36);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence63 = charSequenceList36.set((int) 'a', (java.lang.CharSequence) "[[hi!, [hi!, ]], hi!]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "hi!" + "'", charSequence48, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[hi!, ]" + "'", str57, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(charSequenceItor59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence charSequence19 = charSequenceList2.peek();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = charSequenceList22.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        int int32 = charSequenceList29.size();
        boolean boolean33 = charSequenceList22.contains((java.lang.Object) charSequenceList29);
        java.lang.CharSequence charSequence34 = charSequenceList22.element();
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator39 = charSequenceList37.spliterator();
        boolean boolean40 = charSequenceList37.isEmpty();
        charSequenceList37.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str43 = charSequenceList37.toString();
        boolean boolean44 = charSequenceList22.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        boolean boolean46 = charSequenceList37.offer((java.lang.CharSequence) "");
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor47 = charSequenceList37.listIterator();
        java.lang.CharSequence charSequence48 = charSequenceList37.poll();
        int int49 = charSequenceList37.size();
        int int50 = charSequenceList2.indexOf((java.lang.Object) charSequenceList37);
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList53 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53, charSequenceArray52);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator55 = charSequenceList53.spliterator();
        boolean boolean56 = charSequenceList53.isEmpty();
        java.lang.CharSequence charSequence57 = charSequenceList53.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream58 = charSequenceList53.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream59 = charSequenceList53.parallelStream();
        charSequenceList53.push((java.lang.CharSequence) "hi!");
        boolean boolean62 = charSequenceList37.remove((java.lang.Object) "hi!");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor63 = charSequenceList37.descendingIterator();
        java.lang.CharSequence charSequence64 = charSequenceList37.getLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "hi!" + "'", charSequence19, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[hi!, ]" + "'", str43, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceItor47);
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "hi!" + "'", charSequence48, "hi!");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + charSequence57 + "' != '" + "" + "'", charSequence57, "");
        org.junit.Assert.assertNotNull(charSequenceStream58);
        org.junit.Assert.assertNotNull(charSequenceStream59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(charSequenceItor63);
        org.junit.Assert.assertEquals("'" + charSequence64 + "' != '" + "" + "'", charSequence64, "");
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor10 = charSequenceList2.iterator();
        boolean boolean12 = charSequenceList2.add((java.lang.CharSequence) "[]");
        charSequenceList2.addLast((java.lang.CharSequence) "[hi!, hi!, hi!, []]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceItor10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence charSequence9 = charSequenceList2.removeFirst();
        boolean boolean11 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = charSequenceList14.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceList21.spliterator();
        int int24 = charSequenceList21.size();
        boolean boolean25 = charSequenceList14.contains((java.lang.Object) charSequenceList21);
        java.lang.CharSequence charSequence26 = charSequenceList14.element();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        boolean boolean32 = charSequenceList29.isEmpty();
        charSequenceList29.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str35 = charSequenceList29.toString();
        boolean boolean36 = charSequenceList14.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        boolean boolean38 = charSequenceList29.offer((java.lang.CharSequence) "");
        charSequenceList29.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList29.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        charSequenceList29.addLast((java.lang.CharSequence) "hi!");
        boolean boolean47 = charSequenceList2.removeFirstOccurrence((java.lang.Object) "hi!");
        int int48 = charSequenceList2.size();
        charSequenceList2.addLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList53 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53, charSequenceArray52);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = charSequenceList53.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList56);
        java.lang.CharSequence[] charSequenceArray59 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList60 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList60, charSequenceArray59);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator62 = charSequenceList60.spliterator();
        int int63 = charSequenceList60.size();
        boolean boolean64 = charSequenceList53.contains((java.lang.Object) charSequenceList60);
        java.lang.CharSequence charSequence65 = charSequenceList53.element();
        java.lang.CharSequence[] charSequenceArray67 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList68 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList68, charSequenceArray67);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator70 = charSequenceList68.spliterator();
        boolean boolean71 = charSequenceList68.isEmpty();
        charSequenceList68.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str74 = charSequenceList68.toString();
        boolean boolean75 = charSequenceList53.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList68);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor76 = charSequenceList53.descendingIterator();
        java.lang.CharSequence charSequence77 = charSequenceList53.peekFirst();
        java.lang.CharSequence[] charSequenceArray79 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList80 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList80, charSequenceArray79);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList83 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean84 = charSequenceList80.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList83);
        int int86 = charSequenceList80.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence87 = charSequenceList80.removeLast();
        java.lang.CharSequence charSequence88 = charSequenceList80.peekLast();
        charSequenceList80.push((java.lang.CharSequence) "[hi!]");
        boolean boolean91 = charSequenceList53.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList80);
        boolean boolean92 = charSequenceList2.remove((java.lang.Object) charSequenceList53);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence93 = charSequenceList53.getFirst();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[hi!, ]" + "'", str35, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charSequenceArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + charSequence65 + "' != '" + "hi!" + "'", charSequence65, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[hi!, ]" + "'", str74, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(charSequenceItor76);
        org.junit.Assert.assertEquals("'" + charSequence77 + "' != '" + "hi!" + "'", charSequence77, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence87 + "' != '" + "hi!" + "'", charSequence87, "hi!");
        org.junit.Assert.assertNull(charSequence88);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        java.lang.CharSequence charSequence10 = charSequenceList2.peek();
        java.lang.CharSequence charSequence11 = charSequenceList2.remove();
        boolean boolean13 = charSequenceList2.add((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = charSequenceList16.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.Object obj21 = null;
        boolean boolean22 = charSequenceList16.equals(obj21);
        java.lang.Object obj23 = charSequenceList16.clone();
        boolean boolean24 = charSequenceList2.removeFirstOccurrence((java.lang.Object) charSequenceList16);
        charSequenceList16.clear();
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = charSequenceList28.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        java.lang.CharSequence charSequence33 = charSequenceList28.peek();
        boolean boolean35 = charSequenceList28.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList41 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean42 = charSequenceList38.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList41);
        boolean boolean43 = charSequenceList28.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList41);
        charSequenceList28.clear();
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList50 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean51 = charSequenceList47.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList50);
        java.lang.Object obj52 = charSequenceList50.clone();
        int int53 = charSequenceList28.lastIndexOf((java.lang.Object) charSequenceList50);
        java.lang.CharSequence charSequence54 = charSequenceList28.peekLast();
        boolean boolean55 = charSequenceList16.remove((java.lang.Object) charSequence54);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "hi!" + "'", charSequence11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "hi!" + "'", charSequence33, "hi!");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "[]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(charSequence54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        java.lang.CharSequence charSequence10 = charSequenceList9.peekLast();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList13.equals(obj18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        boolean boolean25 = charSequenceList13.removeLastOccurrence((java.lang.Object) charSequenceList22);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = charSequenceList28.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        java.lang.CharSequence charSequence33 = charSequenceList28.peek();
        boolean boolean35 = charSequenceList28.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean36 = charSequenceList13.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence charSequence37 = charSequenceList13.pop();
        java.lang.CharSequence charSequence38 = charSequenceList13.peekFirst();
        int int39 = charSequenceList9.indexOf((java.lang.Object) charSequenceList13);
        java.lang.CharSequence charSequence40 = charSequenceList9.element();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "hi!" + "'", charSequence33, "hi!");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "hi!" + "'", charSequence37, "hi!");
        org.junit.Assert.assertNull(charSequence38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "hi!" + "'", charSequence40, "hi!");
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList7 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator9 = charSequenceList7.spliterator();
        boolean boolean10 = charSequenceList7.isEmpty();
        charSequenceList7.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean14 = charSequenceList7.offerLast((java.lang.CharSequence) "");
        boolean boolean15 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        java.lang.CharSequence charSequence9 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence charSequence17 = charSequenceList12.peek();
        boolean boolean19 = charSequenceList12.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = charSequenceList22.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        boolean boolean27 = charSequenceList12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        charSequenceList12.clear();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.Object obj36 = charSequenceList34.clone();
        int int37 = charSequenceList12.lastIndexOf((java.lang.Object) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = charSequenceList40.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceList47.spliterator();
        int int50 = charSequenceList47.size();
        boolean boolean51 = charSequenceList40.contains((java.lang.Object) charSequenceList47);
        java.lang.CharSequence charSequence52 = charSequenceList40.element();
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList55 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55, charSequenceArray54);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator57 = charSequenceList55.spliterator();
        boolean boolean58 = charSequenceList55.isEmpty();
        charSequenceList55.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str61 = charSequenceList55.toString();
        boolean boolean62 = charSequenceList40.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55);
        boolean boolean64 = charSequenceList55.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor65 = charSequenceList55.descendingIterator();
        charSequenceList55.clear();
        boolean boolean67 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55);
        boolean boolean68 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList71 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList71, charSequenceArray70);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList74 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean75 = charSequenceList71.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList74);
        java.lang.CharSequence[] charSequenceArray77 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList78 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList78, charSequenceArray77);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator80 = charSequenceList78.spliterator();
        int int81 = charSequenceList78.size();
        boolean boolean82 = charSequenceList71.contains((java.lang.Object) charSequenceList78);
        boolean boolean83 = charSequenceList71.isEmpty();
        java.lang.CharSequence charSequence84 = charSequenceList71.remove();
        java.lang.CharSequence charSequence85 = charSequenceList71.poll();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor86 = charSequenceList71.descendingIterator();
        int int87 = charSequenceList12.lastIndexOf((java.lang.Object) charSequenceItor86);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor88 = charSequenceList12.iterator();
        boolean boolean89 = charSequenceList12.isEmpty();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator90 = charSequenceList12.spliterator();
        boolean boolean92 = charSequenceList12.offer((java.lang.CharSequence) "[[hi!, ]]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "[]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "hi!" + "'", charSequence52, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[hi!, ]" + "'", str61, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(charSequenceItor65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(charSequenceArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + charSequence84 + "' != '" + "hi!" + "'", charSequence84, "hi!");
        org.junit.Assert.assertNull(charSequence85);
        org.junit.Assert.assertNotNull(charSequenceItor86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNotNull(charSequenceItor88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor10 = charSequenceList2.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream11 = charSequenceList2.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream12 = charSequenceList2.stream();
        boolean boolean14 = charSequenceList2.add((java.lang.CharSequence) "[, ]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceItor10);
        org.junit.Assert.assertNotNull(charSequenceStream11);
        org.junit.Assert.assertNotNull(charSequenceStream12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceList2.parallelStream();
        charSequenceList2.push((java.lang.CharSequence) "hi!");
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList2.spliterator();
        boolean boolean12 = charSequenceList2.isEmpty();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList8 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList8.spliterator();
        boolean boolean11 = charSequenceList8.isEmpty();
        java.lang.CharSequence charSequence12 = charSequenceList8.removeLast();
        int int13 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList8);
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = charSequenceList16.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator25 = charSequenceList23.spliterator();
        int int26 = charSequenceList23.size();
        boolean boolean27 = charSequenceList16.contains((java.lang.Object) charSequenceList23);
        java.lang.CharSequence charSequence28 = charSequenceList16.element();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceList31.spliterator();
        boolean boolean34 = charSequenceList31.isEmpty();
        charSequenceList31.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str37 = charSequenceList31.toString();
        boolean boolean38 = charSequenceList16.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceList31.stream();
        boolean boolean41 = charSequenceList31.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence42 = charSequenceList31.poll();
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator47 = charSequenceList45.spliterator();
        charSequenceList45.clear();
        boolean boolean49 = charSequenceList31.removeLastOccurrence((java.lang.Object) charSequenceList45);
        java.lang.CharSequence charSequence50 = charSequenceList31.removeLast();
        boolean boolean51 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        java.lang.CharSequence charSequence52 = charSequenceList31.element();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "hi!" + "'", charSequence28, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[hi!, ]" + "'", str37, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "[hi!, ]" + "'", charSequence42, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "" + "'", charSequence50, "");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "hi!" + "'", charSequence52, "hi!");
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        boolean boolean14 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence15 = charSequenceList2.remove();
        java.lang.CharSequence charSequence16 = charSequenceList2.poll();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor17 = charSequenceList2.descendingIterator();
        java.lang.String str18 = charSequenceList2.toString();
        java.lang.CharSequence charSequence19 = charSequenceList2.peekLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "hi!" + "'", charSequence15, "hi!");
        org.junit.Assert.assertNull(charSequence16);
        org.junit.Assert.assertNotNull(charSequenceItor17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[]" + "'", str18, "[]");
        org.junit.Assert.assertNull(charSequence19);
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor27 = charSequenceList17.descendingIterator();
        java.lang.CharSequence charSequence28 = charSequenceList17.removeLast();
        java.lang.CharSequence charSequence29 = charSequenceList17.getLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceItor27);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "" + "'", charSequence29, "");
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence charSequence10 = charSequenceList2.poll();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.CharSequence charSequence18 = charSequenceList13.peek();
        boolean boolean20 = charSequenceList13.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList26 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean27 = charSequenceList23.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList26);
        boolean boolean28 = charSequenceList13.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26);
        charSequenceList13.clear();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = charSequenceList32.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        java.lang.Object obj37 = charSequenceList35.clone();
        int int38 = charSequenceList13.lastIndexOf((java.lang.Object) charSequenceList35);
        java.lang.CharSequence[] charSequenceArray40 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList41 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList41, charSequenceArray40);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList44 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean45 = charSequenceList41.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList44);
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48, charSequenceArray47);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceList48.spliterator();
        int int51 = charSequenceList48.size();
        boolean boolean52 = charSequenceList41.contains((java.lang.Object) charSequenceList48);
        java.lang.CharSequence charSequence53 = charSequenceList41.element();
        java.lang.CharSequence[] charSequenceArray55 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56, charSequenceArray55);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator58 = charSequenceList56.spliterator();
        boolean boolean59 = charSequenceList56.isEmpty();
        charSequenceList56.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str62 = charSequenceList56.toString();
        boolean boolean63 = charSequenceList41.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56);
        boolean boolean65 = charSequenceList56.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor66 = charSequenceList56.descendingIterator();
        charSequenceList56.clear();
        boolean boolean68 = charSequenceList13.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream69 = charSequenceList56.stream();
        boolean boolean70 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceStream69);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "hi!" + "'", charSequence18, "hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "hi!" + "'", charSequence53, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[hi!, ]" + "'", str62, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(charSequenceItor66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(charSequenceStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList13.equals(obj18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        boolean boolean25 = charSequenceList13.removeLastOccurrence((java.lang.Object) charSequenceList22);
        java.lang.CharSequence charSequence26 = charSequenceList22.removeLast();
        boolean boolean27 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator39 = charSequenceList37.spliterator();
        int int40 = charSequenceList37.size();
        boolean boolean41 = charSequenceList30.contains((java.lang.Object) charSequenceList37);
        java.lang.CharSequence charSequence42 = charSequenceList30.element();
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator47 = charSequenceList45.spliterator();
        boolean boolean48 = charSequenceList45.isEmpty();
        charSequenceList45.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str51 = charSequenceList45.toString();
        boolean boolean52 = charSequenceList30.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        boolean boolean54 = charSequenceList45.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor55 = charSequenceList45.descendingIterator();
        boolean boolean56 = charSequenceList22.remove((java.lang.Object) charSequenceItor55);
        java.lang.CharSequence[] charSequenceArray58 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList59 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList59, charSequenceArray58);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList62 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean63 = charSequenceList59.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList62);
        java.lang.CharSequence charSequence64 = charSequenceList59.peek();
        boolean boolean66 = charSequenceList59.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator67 = charSequenceList59.spliterator();
        boolean boolean69 = charSequenceList59.offer((java.lang.CharSequence) "hi!");
        charSequenceList59.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray74 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList75 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList75, charSequenceArray74);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator77 = charSequenceList75.spliterator();
        boolean boolean78 = charSequenceList75.isEmpty();
        boolean boolean79 = charSequenceList59.equals((java.lang.Object) charSequenceList75);
        boolean boolean80 = charSequenceList22.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList75);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[hi!, ]" + "'", str51, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charSequenceItor55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charSequenceArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + charSequence64 + "' != '" + "hi!" + "'", charSequence64, "hi!");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(charSequenceArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence charSequence15 = charSequenceList11.removeLast();
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = charSequenceList18.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        java.lang.CharSequence charSequence23 = charSequenceList18.peek();
        java.lang.CharSequence charSequence24 = charSequenceList18.pollFirst();
        charSequenceList18.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = charSequenceList29.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList29.equals(obj34);
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceList38.spliterator();
        boolean boolean41 = charSequenceList29.removeLastOccurrence((java.lang.Object) charSequenceList38);
        charSequenceList29.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean44 = charSequenceList18.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        java.lang.CharSequence charSequence45 = charSequenceList18.remove();
        java.lang.CharSequence charSequence46 = charSequenceList18.pop();
        charSequenceList18.addLast((java.lang.CharSequence) "[hi!, hi!, hi!, []]");
        java.lang.CharSequence charSequence49 = charSequenceList18.peek();
        boolean boolean50 = charSequenceList11.contains((java.lang.Object) charSequence49);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "" + "'", charSequence15, "");
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "hi!" + "'", charSequence23, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "hi!" + "'", charSequence24, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + charSequence45 + "' != '" + "hi!" + "'", charSequence45, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence46 + "' != '" + "hi!" + "'", charSequence46, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "hi!" + "'", charSequence49, "hi!");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        int int27 = charSequenceList2.indexOf((java.lang.Object) charSequence26);
        int int28 = charSequenceList2.size();
        java.lang.Object obj29 = charSequenceList2.clone();
        java.lang.CharSequence charSequence30 = charSequenceList2.poll();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence31 = charSequenceList2.removeLast();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "hi!" + "'", charSequence30, "hi!");
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = charSequenceList16.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence charSequence21 = charSequenceList16.peek();
        java.lang.CharSequence charSequence22 = charSequenceList16.pollFirst();
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator27 = charSequenceList25.spliterator();
        boolean boolean28 = charSequenceList25.isEmpty();
        charSequenceList25.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean32 = charSequenceList25.offerLast((java.lang.CharSequence) "");
        charSequenceList25.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean35 = charSequenceList16.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        boolean boolean36 = charSequenceList9.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "hi!" + "'", charSequence21, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.pop();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean14 = charSequenceList2.offer((java.lang.CharSequence) "[hi!, ]");
        boolean boolean16 = charSequenceList2.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence17 = charSequenceList2.getFirst();
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        int int26 = charSequenceList20.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence27 = charSequenceList20.removeLast();
        java.lang.CharSequence charSequence28 = charSequenceList20.peekLast();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceList38.spliterator();
        int int41 = charSequenceList38.size();
        boolean boolean42 = charSequenceList31.contains((java.lang.Object) charSequenceList38);
        java.lang.CharSequence charSequence43 = charSequenceList31.element();
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceList46.spliterator();
        boolean boolean49 = charSequenceList46.isEmpty();
        charSequenceList46.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str52 = charSequenceList46.toString();
        boolean boolean53 = charSequenceList31.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceList46.stream();
        boolean boolean55 = charSequenceList20.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        java.lang.CharSequence charSequence56 = charSequenceList20.remove();
        boolean boolean57 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.util.function.UnaryOperator<java.lang.CharSequence> charSequenceUnaryOperator58 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList20.replaceAll(charSequenceUnaryOperator58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "[hi!, ]" + "'", charSequence17, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "hi!" + "'", charSequence43, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[hi!, ]" + "'", str52, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + charSequence56 + "' != '" + "hi!" + "'", charSequence56, "hi!");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        boolean boolean14 = charSequenceList2.isEmpty();
        java.lang.Object obj15 = charSequenceList2.clone();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceList2.parallelStream();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList19.equals(obj24);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = charSequenceList28.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        java.lang.CharSequence charSequence33 = charSequenceList28.peek();
        java.lang.CharSequence charSequence34 = charSequenceList28.pollFirst();
        boolean boolean35 = charSequenceList19.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        boolean boolean36 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        boolean boolean38 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        boolean boolean40 = charSequenceList2.offerLast((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence41 = charSequenceList2.pop();
        java.lang.CharSequence charSequence42 = charSequenceList2.getLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "hi!" + "'", charSequence33, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence charSequence10 = charSequenceList2.poll();
        java.lang.Object[] objArray11 = charSequenceList2.toArray();
        boolean boolean13 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        boolean boolean15 = charSequenceList2.offer((java.lang.CharSequence) "[, ]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean24 = charSequenceList17.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence25 = charSequenceList17.pop();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        charSequenceList17.addLast((java.lang.CharSequence) "[]");
        java.lang.CharSequence charSequence30 = charSequenceList17.pollFirst();
        java.lang.CharSequence charSequence31 = charSequenceList17.pollLast();
        boolean boolean32 = charSequenceList11.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean34 = charSequenceList11.offer((java.lang.CharSequence) "[[hi!, ], hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "hi!" + "'", charSequence30, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "[]" + "'", charSequence31, "[]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        java.lang.CharSequence charSequence5 = charSequenceList2.getLast();
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence charSequence7 = charSequenceList2.pollFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertEquals("'" + charSequence5 + "' != '" + "" + "'", charSequence5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[]" + "'", str6, "[]");
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "" + "'", charSequence7, "");
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        boolean boolean14 = charSequenceList2.isEmpty();
        java.lang.Object obj15 = charSequenceList2.clone();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceList2.parallelStream();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList19.equals(obj24);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = charSequenceList28.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        java.lang.CharSequence charSequence33 = charSequenceList28.peek();
        java.lang.CharSequence charSequence34 = charSequenceList28.pollFirst();
        boolean boolean35 = charSequenceList19.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        boolean boolean36 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        boolean boolean38 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        boolean boolean40 = charSequenceList2.offerLast((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence41 = charSequenceList2.peekFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "hi!" + "'", charSequence33, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence9 = charSequenceList2.removeLast();
        java.lang.CharSequence charSequence10 = charSequenceList2.peekLast();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceList20.spliterator();
        int int23 = charSequenceList20.size();
        boolean boolean24 = charSequenceList13.contains((java.lang.Object) charSequenceList20);
        java.lang.CharSequence charSequence25 = charSequenceList13.element();
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceList28.spliterator();
        boolean boolean31 = charSequenceList28.isEmpty();
        charSequenceList28.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str34 = charSequenceList28.toString();
        boolean boolean35 = charSequenceList13.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        boolean boolean37 = charSequenceList28.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence38 = charSequenceList28.getLast();
        boolean boolean40 = charSequenceList28.removeLastOccurrence((java.lang.Object) 100.0d);
        java.lang.CharSequence charSequence41 = charSequenceList28.getFirst();
        java.lang.CharSequence charSequence42 = charSequenceList28.pollLast();
        boolean boolean43 = charSequenceList2.equals((java.lang.Object) charSequenceList28);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence44 = charSequenceList2.removeLast();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertNull(charSequence10);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[hi!, ]" + "'", str34, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "" + "'", charSequence38, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "" + "'", charSequence42, "");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        int int27 = charSequenceList2.indexOf((java.lang.Object) charSequence26);
        int int28 = charSequenceList2.size();
        java.lang.Object obj29 = charSequenceList2.clone();
        java.lang.CharSequence charSequence30 = charSequenceList2.poll();
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = charSequenceList34.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        int int40 = charSequenceList34.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean42 = charSequenceList34.offerLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean49 = charSequenceList45.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList48);
        boolean boolean51 = charSequenceList45.offerFirst((java.lang.CharSequence) "hi!");
        int int52 = charSequenceList34.lastIndexOf((java.lang.Object) "hi!");
        java.lang.CharSequence charSequence54 = charSequenceList34.get((int) (short) 0);
        boolean boolean56 = charSequenceList34.offer((java.lang.CharSequence) "[]");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean57 = charSequenceList2.addAll(10, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "hi!" + "'", charSequence30, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "hi!" + "'", charSequence54, "hi!");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = charSequenceList9.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence charSequence14 = charSequenceList9.peek();
        boolean boolean16 = charSequenceList9.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        boolean boolean24 = charSequenceList9.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence charSequence25 = charSequenceList9.pop();
        boolean boolean26 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = charSequenceList29.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList29.equals(obj34);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        java.lang.CharSequence charSequence37 = charSequenceList29.peek();
        java.lang.CharSequence charSequence38 = charSequenceList29.remove();
        boolean boolean39 = charSequenceList9.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        java.lang.CharSequence charSequence40 = charSequenceList9.peekLast();
        java.util.function.UnaryOperator<java.lang.CharSequence> charSequenceUnaryOperator41 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList9.replaceAll(charSequenceUnaryOperator41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "hi!" + "'", charSequence37, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "hi!" + "'", charSequence38, "hi!");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(charSequence40);
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor27 = charSequenceList17.listIterator();
        java.lang.CharSequence charSequence28 = charSequenceList17.poll();
        java.lang.CharSequence charSequence29 = charSequenceList17.peek();
        java.lang.CharSequence charSequence30 = charSequenceList17.remove();
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList33, charSequenceArray32);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator35 = charSequenceList33.spliterator();
        boolean boolean36 = charSequenceList33.isEmpty();
        charSequenceList33.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str39 = charSequenceList33.toString();
        java.lang.CharSequence charSequence40 = charSequenceList33.removeFirst();
        boolean boolean42 = charSequenceList33.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean49 = charSequenceList45.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList48);
        java.lang.CharSequence[] charSequenceArray51 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52, charSequenceArray51);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator54 = charSequenceList52.spliterator();
        int int55 = charSequenceList52.size();
        boolean boolean56 = charSequenceList45.contains((java.lang.Object) charSequenceList52);
        java.lang.CharSequence charSequence57 = charSequenceList45.element();
        java.lang.CharSequence[] charSequenceArray59 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList60 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList60, charSequenceArray59);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator62 = charSequenceList60.spliterator();
        boolean boolean63 = charSequenceList60.isEmpty();
        charSequenceList60.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str66 = charSequenceList60.toString();
        boolean boolean67 = charSequenceList45.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList60);
        boolean boolean69 = charSequenceList60.offer((java.lang.CharSequence) "");
        charSequenceList60.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList60.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        charSequenceList60.addLast((java.lang.CharSequence) "hi!");
        boolean boolean78 = charSequenceList33.removeFirstOccurrence((java.lang.Object) "hi!");
        boolean boolean80 = charSequenceList33.offerLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence81 = charSequenceList33.pollFirst();
        java.lang.CharSequence charSequence82 = charSequenceList33.peekLast();
        boolean boolean83 = charSequenceList17.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream84 = charSequenceList33.parallelStream();
        java.lang.CharSequence charSequence85 = charSequenceList33.element();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceItor27);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "hi!" + "'", charSequence28, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "" + "'", charSequence29, "");
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "" + "'", charSequence30, "");
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[hi!, ]" + "'", str39, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "hi!" + "'", charSequence40, "hi!");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(charSequenceArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + charSequence57 + "' != '" + "hi!" + "'", charSequence57, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[hi!, ]" + "'", str66, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertEquals("'" + charSequence81 + "' != '" + "" + "'", charSequence81, "");
        org.junit.Assert.assertEquals("'" + charSequence82 + "' != '" + "[hi!, ]" + "'", charSequence82, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(charSequenceStream84);
        org.junit.Assert.assertEquals("'" + charSequence85 + "' != '" + "[hi!, ]" + "'", charSequence85, "[hi!, ]");
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        charSequenceList17.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList17.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        java.lang.Object[] objArray33 = charSequenceList17.toArray();
        java.lang.CharSequence charSequence35 = charSequenceList17.remove(0);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[hi!, hi!, hi!, , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[hi!, hi!, hi!, , ]");
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor19 = charSequenceList2.iterator();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        java.lang.Object obj25 = charSequenceList22.clone();
        boolean boolean26 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList22);
        boolean boolean28 = charSequenceList22.offerLast((java.lang.CharSequence) "[hi!, [hi!, ]]");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor29 = charSequenceList22.iterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceItor19);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "[]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceItor29);
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean18 = charSequenceList15.isEmpty();
        java.lang.CharSequence charSequence19 = charSequenceList15.peekLast();
        java.lang.CharSequence charSequence20 = charSequenceList15.poll();
        java.lang.String str21 = charSequenceList15.toString();
        int int22 = charSequenceList15.size();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(charSequence19);
        org.junit.Assert.assertNull(charSequence20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[]" + "'", str21, "[]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor27 = charSequenceList17.listIterator();
        java.lang.CharSequence charSequence28 = charSequenceList17.poll();
        java.lang.CharSequence charSequence29 = charSequenceList17.peek();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = charSequenceList32.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        java.lang.Object obj37 = null;
        boolean boolean38 = charSequenceList32.equals(obj37);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.CharSequence charSequence40 = charSequenceList32.peek();
        boolean boolean41 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.CharSequence charSequence42 = charSequenceList32.pollFirst();
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean49 = charSequenceList45.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList48);
        java.lang.CharSequence charSequence50 = charSequenceList45.peek();
        boolean boolean52 = charSequenceList45.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList55 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55, charSequenceArray54);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList58 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean59 = charSequenceList55.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList58);
        boolean boolean60 = charSequenceList45.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58);
        charSequenceList45.clear();
        java.lang.CharSequence[] charSequenceArray63 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList64 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64, charSequenceArray63);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList67 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean68 = charSequenceList64.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList67);
        java.lang.Object obj69 = charSequenceList67.clone();
        int int70 = charSequenceList45.lastIndexOf((java.lang.Object) charSequenceList67);
        boolean boolean71 = charSequenceList32.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList67);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceItor27);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "hi!" + "'", charSequence28, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "" + "'", charSequence29, "");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "hi!" + "'", charSequence40, "hi!");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "hi!" + "'", charSequence50, "hi!");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(charSequenceArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "[]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence17 = charSequenceList2.removeLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceList17.poll();
        java.lang.CharSequence charSequence28 = charSequenceList17.peekFirst();
        java.lang.CharSequence charSequence29 = charSequenceList17.pollFirst();
        int int30 = charSequenceList17.size();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "" + "'", charSequence29, "");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        java.lang.CharSequence charSequence6 = charSequenceList2.pollLast();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = charSequenceList9.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator18 = charSequenceList16.spliterator();
        int int19 = charSequenceList16.size();
        boolean boolean20 = charSequenceList9.contains((java.lang.Object) charSequenceList16);
        java.lang.CharSequence charSequence21 = charSequenceList16.removeFirst();
        java.lang.CharSequence charSequence22 = charSequenceList16.pollLast();
        charSequenceList16.clear();
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList26 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26, charSequenceArray25);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator28 = charSequenceList26.spliterator();
        java.lang.Object obj29 = charSequenceList26.clone();
        boolean boolean30 = charSequenceList16.remove(obj29);
        java.lang.Object[] objArray31 = charSequenceList16.toArray();
        boolean boolean32 = charSequenceList2.removeFirstOccurrence((java.lang.Object) objArray31);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence34 = charSequenceList2.remove((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "" + "'", charSequence21, "");
        org.junit.Assert.assertNull(charSequence22);
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor5 = charSequenceList2.descendingIterator();
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList8 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = charSequenceList8.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        int int14 = charSequenceList8.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence15 = charSequenceList8.removeLast();
        java.lang.CharSequence charSequence16 = charSequenceList8.peekLast();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList26 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26, charSequenceArray25);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator28 = charSequenceList26.spliterator();
        int int29 = charSequenceList26.size();
        boolean boolean30 = charSequenceList19.contains((java.lang.Object) charSequenceList26);
        java.lang.CharSequence charSequence31 = charSequenceList19.element();
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceList34.spliterator();
        boolean boolean37 = charSequenceList34.isEmpty();
        charSequenceList34.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str40 = charSequenceList34.toString();
        boolean boolean41 = charSequenceList19.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream42 = charSequenceList34.stream();
        boolean boolean43 = charSequenceList8.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence charSequence44 = charSequenceList8.remove();
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "", "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48, charSequenceArray47);
        java.lang.CharSequence charSequence50 = charSequenceList48.pollFirst();
        boolean boolean51 = charSequenceList8.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48);
        int int52 = charSequenceList2.indexOf((java.lang.Object) boolean51);
        java.lang.CharSequence charSequence53 = charSequenceList2.getFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertNotNull(charSequenceItor5);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "hi!" + "'", charSequence15, "hi!");
        org.junit.Assert.assertNull(charSequence16);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "hi!" + "'", charSequence31, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[hi!, ]" + "'", str40, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(charSequenceStream42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "hi!" + "'", charSequence44, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "" + "'", charSequence50, "");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence22 = charSequenceList17.peek();
        boolean boolean24 = charSequenceList17.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean25 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence26 = charSequenceList2.pop();
        java.lang.CharSequence charSequence27 = charSequenceList2.peekFirst();
        java.lang.CharSequence charSequence28 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceList38.spliterator();
        int int41 = charSequenceList38.size();
        boolean boolean42 = charSequenceList31.contains((java.lang.Object) charSequenceList38);
        java.lang.CharSequence charSequence43 = charSequenceList31.element();
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceList46.spliterator();
        boolean boolean49 = charSequenceList46.isEmpty();
        charSequenceList46.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str52 = charSequenceList46.toString();
        boolean boolean53 = charSequenceList31.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        boolean boolean55 = charSequenceList46.offer((java.lang.CharSequence) "");
        charSequenceList46.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList46.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        charSequenceList46.addLast((java.lang.CharSequence) "hi!");
        int int64 = charSequenceList2.indexOf((java.lang.Object) charSequenceList46);
        charSequenceList46.addFirst((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray68 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList69 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList69, charSequenceArray68);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator71 = charSequenceList69.spliterator();
        boolean boolean72 = charSequenceList69.isEmpty();
        charSequenceList69.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str75 = charSequenceList69.toString();
        java.util.LinkedList<java.lang.CharSequence> charSequenceList76 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList69);
        boolean boolean77 = charSequenceList46.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList69);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNull(charSequence27);
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "hi!" + "'", charSequence43, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[hi!, ]" + "'", str52, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[hi!, ]" + "'", str75, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceList12.spliterator();
        boolean boolean15 = charSequenceList12.isEmpty();
        java.lang.CharSequence charSequence16 = charSequenceList12.removeLast();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence charSequence24 = charSequenceList19.peek();
        boolean boolean26 = charSequenceList19.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = charSequenceList29.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        boolean boolean34 = charSequenceList19.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.CharSequence charSequence35 = charSequenceList19.pop();
        boolean boolean36 = charSequenceList12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = charSequenceList39.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        java.lang.Object obj44 = null;
        boolean boolean45 = charSequenceList39.equals(obj44);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence charSequence47 = charSequenceList39.peek();
        java.lang.CharSequence charSequence48 = charSequenceList39.remove();
        boolean boolean49 = charSequenceList19.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean50 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList53 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53, charSequenceArray52);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = charSequenceList53.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList56);
        int int59 = charSequenceList53.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean61 = charSequenceList53.contains((java.lang.Object) (-1.0d));
        java.lang.CharSequence charSequence62 = charSequenceList53.getFirst();
        boolean boolean63 = charSequenceList39.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53);
        boolean boolean64 = charSequenceList53.isEmpty();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor65 = charSequenceList53.descendingIterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[]" + "'", str8, "[]");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "hi!" + "'", charSequence24, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "hi!" + "'", charSequence47, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "hi!" + "'", charSequence48, "hi!");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + charSequence62 + "' != '" + "hi!" + "'", charSequence62, "hi!");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(charSequenceItor65);
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList2.spliterator();
        boolean boolean12 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence13 = charSequenceList2.element();
        java.lang.CharSequence charSequence14 = charSequenceList2.peekLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor15 = charSequenceList2.listIterator();
        boolean boolean17 = charSequenceList2.offerLast((java.lang.CharSequence) "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        java.util.LinkedList<java.util.Deque<java.lang.CharSequence>> charSequenceQueueList0 = new java.util.LinkedList<java.util.Deque<java.lang.CharSequence>>();
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence charSequence9 = charSequenceList2.poll();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor10 = charSequenceList2.listIterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertNotNull(charSequenceItor10);
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList11.isEmpty();
        charSequenceList11.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean18 = charSequenceList11.offerLast((java.lang.CharSequence) "");
        charSequenceList11.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean21 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor22 = charSequenceList11.descendingIterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream23 = charSequenceList11.stream();
        java.lang.CharSequence charSequence24 = charSequenceList11.poll();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charSequenceItor22);
        org.junit.Assert.assertNotNull(charSequenceStream23);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "[hi!, ]" + "'", charSequence24, "[hi!, ]");
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList2.spliterator();
        boolean boolean12 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence13 = charSequenceList2.element();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceList2.stream();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor15 = charSequenceList2.listIterator();
        boolean boolean17 = charSequenceList2.offer((java.lang.CharSequence) "[]");
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceList20.spliterator();
        int int23 = charSequenceList20.size();
        java.lang.CharSequence charSequence24 = charSequenceList20.remove();
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator29 = charSequenceList27.spliterator();
        boolean boolean30 = charSequenceList27.isEmpty();
        charSequenceList27.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean34 = charSequenceList27.offerLast((java.lang.CharSequence) "");
        charSequenceList27.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence37 = charSequenceList27.removeLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor38 = charSequenceList27.listIterator();
        boolean boolean39 = charSequenceList20.removeLastOccurrence((java.lang.Object) charSequenceList27);
        boolean boolean41 = charSequenceList27.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray43 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList44 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList44, charSequenceArray43);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = charSequenceList44.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList47);
        java.lang.CharSequence charSequence49 = charSequenceList44.peek();
        java.lang.CharSequence charSequence50 = charSequenceList44.pollFirst();
        charSequenceList44.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList55 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55, charSequenceArray54);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList58 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean59 = charSequenceList55.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList58);
        java.lang.Object obj60 = null;
        boolean boolean61 = charSequenceList55.equals(obj60);
        java.lang.CharSequence[] charSequenceArray63 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList64 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64, charSequenceArray63);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator66 = charSequenceList64.spliterator();
        boolean boolean67 = charSequenceList55.removeLastOccurrence((java.lang.Object) charSequenceList64);
        java.lang.CharSequence charSequence68 = charSequenceList64.removeLast();
        boolean boolean69 = charSequenceList44.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64);
        java.lang.CharSequence[] charSequenceArray71 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList72 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList72, charSequenceArray71);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator74 = charSequenceList72.spliterator();
        boolean boolean75 = charSequenceList72.isEmpty();
        charSequenceList72.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean79 = charSequenceList72.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence80 = charSequenceList72.pop();
        charSequenceList72.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence83 = charSequenceList72.poll();
        boolean boolean84 = charSequenceList64.contains((java.lang.Object) charSequenceList72);
        boolean boolean85 = charSequenceList27.removeFirstOccurrence((java.lang.Object) charSequenceList64);
        boolean boolean86 = charSequenceList2.remove((java.lang.Object) charSequenceList64);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence88 = charSequenceList64.get(7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 7, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "" + "'", charSequence24, "");
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "" + "'", charSequence37, "");
        org.junit.Assert.assertNotNull(charSequenceItor38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(charSequenceArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "hi!" + "'", charSequence49, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "hi!" + "'", charSequence50, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charSequenceArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + charSequence68 + "' != '" + "" + "'", charSequence68, "");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(charSequenceArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertEquals("'" + charSequence80 + "' != '" + "hi!" + "'", charSequence80, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence83 + "' != '" + "hi!" + "'", charSequence83, "hi!");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor25 = charSequenceList2.descendingIterator();
        java.lang.CharSequence charSequence26 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.CharSequence charSequence35 = charSequenceList30.peek();
        boolean boolean37 = charSequenceList30.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceList30.spliterator();
        boolean boolean40 = charSequenceList30.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence41 = charSequenceList30.element();
        java.lang.CharSequence charSequence42 = charSequenceList30.peekLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor43 = charSequenceList30.listIterator();
        charSequenceList30.addFirst((java.lang.CharSequence) "[hi!]");
        boolean boolean46 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = charSequenceList49.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        java.lang.CharSequence[] charSequenceArray55 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56, charSequenceArray55);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator58 = charSequenceList56.spliterator();
        int int59 = charSequenceList56.size();
        boolean boolean60 = charSequenceList49.contains((java.lang.Object) charSequenceList56);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream61 = charSequenceList49.stream();
        java.lang.CharSequence charSequence63 = null;
        charSequenceList49.add(0, charSequence63);
        java.lang.CharSequence charSequence65 = charSequenceList49.removeFirst();
        java.lang.CharSequence charSequence66 = charSequenceList49.peekFirst();
        boolean boolean67 = charSequenceList30.removeFirstOccurrence((java.lang.Object) charSequenceList49);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList68 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream69 = charSequenceList68.parallelStream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceItor25);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertNotNull(charSequenceItor43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charSequenceArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(charSequenceStream61);
        org.junit.Assert.assertNull(charSequence65);
        org.junit.Assert.assertEquals("'" + charSequence66 + "' != '" + "hi!" + "'", charSequence66, "hi!");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(charSequenceStream69);
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceList17.stream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceList17.spliterator();
        java.lang.String str27 = charSequenceList17.toString();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceStream25);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[hi!, ]" + "'", str27, "[hi!, ]");
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        java.lang.CharSequence charSequence9 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence charSequence17 = charSequenceList12.peek();
        boolean boolean19 = charSequenceList12.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence charSequence20 = charSequenceList12.poll();
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean23 = charSequenceList12.offerFirst((java.lang.CharSequence) "hi!");
        boolean boolean24 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.Object[] objArray25 = charSequenceList12.toArray();
        java.lang.CharSequence charSequence26 = charSequenceList12.peekFirst();
        java.util.Collection<java.lang.CharSequence> charSequenceCollection27 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean28 = charSequenceList12.addAll(charSequenceCollection27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.Collection.toArray()\" because \"c\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "hi!" + "'", charSequence20, "hi!");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        boolean boolean14 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence15 = charSequenceList2.remove();
        java.lang.CharSequence charSequence16 = charSequenceList2.poll();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor17 = charSequenceList2.descendingIterator();
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        java.lang.CharSequence charSequence25 = charSequenceList20.peek();
        java.lang.CharSequence charSequence26 = charSequenceList20.poll();
        java.lang.String str27 = charSequenceList20.toString();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator28 = charSequenceList20.spliterator();
        boolean boolean29 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "hi!" + "'", charSequence15, "hi!");
        org.junit.Assert.assertNull(charSequence16);
        org.junit.Assert.assertNotNull(charSequenceItor17);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[]" + "'", str27, "[]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.poll();
        java.lang.String str9 = charSequenceList2.toString();
        java.lang.Object[] objArray10 = charSequenceList2.toArray();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[]" + "'", str9, "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        charSequenceList17.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList17.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        boolean boolean34 = charSequenceList17.offerFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence35 = charSequenceList17.pollLast();
        boolean boolean37 = charSequenceList17.offerFirst((java.lang.CharSequence) "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "" + "'", charSequence35, "");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        charSequenceList2.addFirst((java.lang.CharSequence) "[hi!, ]");
        charSequenceList2.clear();
        charSequenceList2.clear();
        java.lang.Object obj14 = charSequenceList2.clone();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "[]");
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean10 = charSequenceList2.contains((java.lang.Object) (-1.0d));
        boolean boolean11 = charSequenceList2.isEmpty();
        java.lang.Object[] objArray12 = charSequenceList2.toArray();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[hi!]");
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        int int27 = charSequenceList2.indexOf((java.lang.Object) charSequence26);
        int int28 = charSequenceList2.size();
        java.lang.CharSequence charSequence29 = charSequenceList2.pop();
        charSequenceList2.push((java.lang.CharSequence) "[hi!]");
        charSequenceList2.addLast((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = charSequenceList36.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence charSequence41 = charSequenceList36.peek();
        boolean boolean43 = charSequenceList36.add((java.lang.CharSequence) "[hi!, ]");
        boolean boolean44 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36);
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceList47.spliterator();
        int int50 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList47);
        java.lang.CharSequence charSequence51 = charSequenceList2.peekLast();
        boolean boolean52 = charSequenceList2.isEmpty();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "[hi!, ]" + "'", charSequence51, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList2.spliterator();
        boolean boolean12 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence13 = charSequenceList2.element();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceList2.spliterator();
        boolean boolean16 = charSequenceList2.add((java.lang.CharSequence) "[]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceList2.parallelStream();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceList18.spliterator();
        int int21 = charSequenceList18.size();
        boolean boolean22 = charSequenceList11.contains((java.lang.Object) charSequenceList18);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = charSequenceList25.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence charSequence30 = charSequenceList25.peek();
        java.lang.CharSequence charSequence31 = charSequenceList25.pollFirst();
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceList34.spliterator();
        boolean boolean37 = charSequenceList34.isEmpty();
        charSequenceList34.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean41 = charSequenceList34.offerLast((java.lang.CharSequence) "");
        charSequenceList34.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean44 = charSequenceList25.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        boolean boolean45 = charSequenceList18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        int int46 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList18);
        java.lang.Object obj47 = charSequenceList18.clone();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "hi!" + "'", charSequence30, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "hi!" + "'", charSequence31, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceList13.spliterator();
        boolean boolean16 = charSequenceList13.isEmpty();
        charSequenceList13.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str19 = charSequenceList13.toString();
        java.lang.CharSequence charSequence20 = charSequenceList13.removeFirst();
        boolean boolean22 = charSequenceList13.offer((java.lang.CharSequence) "hi!");
        int int23 = charSequenceList2.lastIndexOf((java.lang.Object) "hi!");
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList26 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26, charSequenceArray25);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator28 = charSequenceList26.spliterator();
        java.lang.CharSequence charSequence29 = charSequenceList26.getLast();
        java.lang.CharSequence charSequence30 = charSequenceList26.removeLast();
        boolean boolean32 = charSequenceList26.offer((java.lang.CharSequence) "[hi!]");
        int int33 = charSequenceList2.lastIndexOf((java.lang.Object) "[hi!]");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream34 = charSequenceList2.parallelStream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!, ]" + "'", str19, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "hi!" + "'", charSequence20, "hi!");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator28);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "" + "'", charSequence29, "");
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "" + "'", charSequence30, "");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(charSequenceStream34);
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence charSequence19 = charSequenceList2.peek();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = charSequenceList22.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        int int32 = charSequenceList29.size();
        boolean boolean33 = charSequenceList22.contains((java.lang.Object) charSequenceList29);
        java.lang.CharSequence charSequence34 = charSequenceList22.element();
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator39 = charSequenceList37.spliterator();
        boolean boolean40 = charSequenceList37.isEmpty();
        charSequenceList37.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str43 = charSequenceList37.toString();
        boolean boolean44 = charSequenceList22.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        boolean boolean46 = charSequenceList37.offer((java.lang.CharSequence) "");
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor47 = charSequenceList37.listIterator();
        java.lang.CharSequence charSequence48 = charSequenceList37.poll();
        int int49 = charSequenceList37.size();
        int int50 = charSequenceList2.indexOf((java.lang.Object) charSequenceList37);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor51 = charSequenceList37.iterator();
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList55 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55, charSequenceArray54);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList58 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean59 = charSequenceList55.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList58);
        java.lang.Object obj60 = null;
        boolean boolean61 = charSequenceList55.equals(obj60);
        java.lang.Object obj62 = charSequenceList55.clone();
        java.lang.String str63 = charSequenceList55.toString();
        boolean boolean65 = charSequenceList55.add((java.lang.CharSequence) "[hi!, ]");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean66 = charSequenceList37.addAll((int) (byte) -1, (java.util.Collection<java.lang.CharSequence>) charSequenceList55);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "hi!" + "'", charSequence19, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[hi!, ]" + "'", str43, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceItor47);
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "hi!" + "'", charSequence48, "hi!");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(charSequenceItor51);
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "[hi!]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[hi!]" + "'", str63, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        charSequenceList17.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList17.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceList17.spliterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream34 = charSequenceList17.stream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertNotNull(charSequenceStream34);
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean10 = charSequenceList2.offerLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.String str11 = charSequenceList2.toString();
        java.lang.CharSequence charSequence12 = charSequenceList2.pop();
        java.lang.String str13 = charSequenceList2.toString();
        boolean boolean15 = charSequenceList2.remove((java.lang.Object) 4);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[hi!, [hi!, ]]" + "'", str11, "[hi!, [hi!, ]]");
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "hi!" + "'", charSequence12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[[hi!, ]]" + "'", str13, "[[hi!, ]]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence charSequence10 = charSequenceList2.poll();
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceList14.spliterator();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor17 = charSequenceList14.descendingIterator();
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        int int26 = charSequenceList20.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence27 = charSequenceList20.removeLast();
        java.lang.CharSequence charSequence28 = charSequenceList20.peekLast();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceList38.spliterator();
        int int41 = charSequenceList38.size();
        boolean boolean42 = charSequenceList31.contains((java.lang.Object) charSequenceList38);
        java.lang.CharSequence charSequence43 = charSequenceList31.element();
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceList46.spliterator();
        boolean boolean49 = charSequenceList46.isEmpty();
        charSequenceList46.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str52 = charSequenceList46.toString();
        boolean boolean53 = charSequenceList31.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceList46.stream();
        boolean boolean55 = charSequenceList20.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        java.lang.CharSequence charSequence56 = charSequenceList20.remove();
        java.lang.CharSequence[] charSequenceArray59 = new java.lang.CharSequence[] { "", "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList60 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList60, charSequenceArray59);
        java.lang.CharSequence charSequence62 = charSequenceList60.pollFirst();
        boolean boolean63 = charSequenceList20.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList60);
        int int64 = charSequenceList14.indexOf((java.lang.Object) boolean63);
        int int65 = charSequenceList2.lastIndexOf((java.lang.Object) int64);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream66 = charSequenceList2.stream();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor67 = charSequenceList2.iterator();
        boolean boolean69 = charSequenceList2.add((java.lang.CharSequence) "[]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertNotNull(charSequenceItor17);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "hi!" + "'", charSequence43, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[hi!, ]" + "'", str52, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + charSequence56 + "' != '" + "hi!" + "'", charSequence56, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + charSequence62 + "' != '" + "" + "'", charSequence62, "");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(charSequenceStream66);
        org.junit.Assert.assertNotNull(charSequenceItor67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence charSequence10 = charSequenceList2.poll();
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceList14.spliterator();
        java.lang.CharSequence charSequence17 = charSequenceList14.getLast();
        java.lang.String str18 = charSequenceList14.toString();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceList21.spliterator();
        boolean boolean24 = charSequenceList21.isEmpty();
        java.lang.CharSequence charSequence25 = charSequenceList21.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream26 = charSequenceList21.stream();
        java.lang.String str27 = charSequenceList21.toString();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceList31.spliterator();
        boolean boolean34 = charSequenceList31.isEmpty();
        java.lang.CharSequence charSequence35 = charSequenceList31.removeLast();
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList41 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean42 = charSequenceList38.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList41);
        java.lang.CharSequence charSequence43 = charSequenceList38.peek();
        boolean boolean45 = charSequenceList38.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48, charSequenceArray47);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList51 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean52 = charSequenceList48.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList51);
        boolean boolean53 = charSequenceList38.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList51);
        java.lang.CharSequence charSequence54 = charSequenceList38.pop();
        boolean boolean55 = charSequenceList31.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList58 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58, charSequenceArray57);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList61 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean62 = charSequenceList58.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList61);
        java.lang.Object obj63 = null;
        boolean boolean64 = charSequenceList58.equals(obj63);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList65 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList58);
        java.lang.CharSequence charSequence66 = charSequenceList58.peek();
        java.lang.CharSequence charSequence67 = charSequenceList58.remove();
        boolean boolean68 = charSequenceList38.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58);
        boolean boolean69 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList58);
        java.lang.CharSequence[] charSequenceArray71 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList72 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList72, charSequenceArray71);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList75 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean76 = charSequenceList72.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList75);
        int int78 = charSequenceList72.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean80 = charSequenceList72.contains((java.lang.Object) (-1.0d));
        java.lang.CharSequence charSequence81 = charSequenceList72.getFirst();
        boolean boolean82 = charSequenceList58.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList72);
        boolean boolean83 = charSequenceList14.remove((java.lang.Object) charSequenceList72);
        boolean boolean84 = charSequenceList2.removeFirstOccurrence((java.lang.Object) boolean83);
        java.lang.Object obj85 = null;
        boolean boolean86 = charSequenceList2.contains(obj85);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[]" + "'", str18, "[]");
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "" + "'", charSequence25, "");
        org.junit.Assert.assertNotNull(charSequenceStream26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[]" + "'", str27, "[]");
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "" + "'", charSequence35, "");
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "hi!" + "'", charSequence43, "hi!");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "hi!" + "'", charSequence54, "hi!");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + charSequence66 + "' != '" + "hi!" + "'", charSequence66, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence67 + "' != '" + "hi!" + "'", charSequence67, "hi!");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(charSequenceArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + charSequence81 + "' != '" + "hi!" + "'", charSequence81, "hi!");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.pollFirst();
        boolean boolean8 = charSequenceList2.add((java.lang.CharSequence) "[]");
        java.lang.CharSequence charSequence9 = charSequenceList2.pop();
        java.lang.CharSequence charSequence10 = charSequenceList2.peekFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "[]" + "'", charSequence9, "[]");
        org.junit.Assert.assertNull(charSequence10);
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        java.lang.Object obj25 = null;
        boolean boolean26 = charSequenceList20.equals(obj25);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        boolean boolean32 = charSequenceList20.removeLastOccurrence((java.lang.Object) charSequenceList29);
        boolean boolean33 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence34 = charSequenceList20.element();
        charSequenceList20.add(1, (java.lang.CharSequence) "[hi!, hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = charSequenceList5.clone();
        charSequenceList5.addLast((java.lang.CharSequence) "[hi!, ]");
        boolean boolean11 = charSequenceList5.offerLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence12 = charSequenceList5.pollFirst();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = charSequenceList15.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceList22.spliterator();
        int int25 = charSequenceList22.size();
        boolean boolean26 = charSequenceList15.contains((java.lang.Object) charSequenceList22);
        java.lang.CharSequence charSequence27 = charSequenceList15.element();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator32 = charSequenceList30.spliterator();
        boolean boolean33 = charSequenceList30.isEmpty();
        charSequenceList30.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str36 = charSequenceList30.toString();
        boolean boolean37 = charSequenceList15.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        boolean boolean39 = charSequenceList30.offer((java.lang.CharSequence) "");
        charSequenceList30.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList30.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        charSequenceList30.addLast((java.lang.CharSequence) "hi!");
        int int48 = charSequenceList5.indexOf((java.lang.Object) charSequenceList30);
        java.lang.Object[] objArray49 = charSequenceList5.toArray();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence51 = charSequenceList5.remove((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "[hi!, ]" + "'", charSequence12, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!, ]" + "'", str36, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[[hi!, ]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[[hi!, ]]");
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceList2.stream();
        java.lang.CharSequence charSequence16 = null;
        charSequenceList2.add(0, charSequence16);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator29 = charSequenceList27.spliterator();
        int int30 = charSequenceList27.size();
        boolean boolean31 = charSequenceList20.contains((java.lang.Object) charSequenceList27);
        java.lang.CharSequence charSequence32 = charSequenceList20.element();
        boolean boolean33 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor34 = charSequenceList20.iterator();
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator39 = charSequenceList37.spliterator();
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42, charSequenceArray41);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList45 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean46 = charSequenceList42.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator51 = charSequenceList49.spliterator();
        int int52 = charSequenceList49.size();
        boolean boolean53 = charSequenceList42.contains((java.lang.Object) charSequenceList49);
        java.lang.CharSequence charSequence54 = charSequenceList42.element();
        java.lang.CharSequence[] charSequenceArray56 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList57 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList57, charSequenceArray56);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator59 = charSequenceList57.spliterator();
        boolean boolean60 = charSequenceList57.isEmpty();
        charSequenceList57.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str63 = charSequenceList57.toString();
        boolean boolean64 = charSequenceList42.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList57);
        boolean boolean66 = charSequenceList57.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor67 = charSequenceList57.descendingIterator();
        boolean boolean68 = charSequenceList37.removeLastOccurrence((java.lang.Object) charSequenceItor67);
        boolean boolean69 = charSequenceList20.contains((java.lang.Object) boolean68);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "hi!" + "'", charSequence32, "hi!");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(charSequenceItor34);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator39);
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "hi!" + "'", charSequence54, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[hi!, ]" + "'", str63, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(charSequenceItor67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence22 = charSequenceList17.peek();
        boolean boolean24 = charSequenceList17.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean25 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence26 = charSequenceList2.pop();
        java.lang.CharSequence charSequence27 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.Object obj35 = charSequenceList33.clone();
        int int36 = charSequenceList2.indexOf((java.lang.Object) charSequenceList33);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream37 = charSequenceList2.parallelStream();
        boolean boolean38 = charSequenceList2.isEmpty();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNull(charSequence27);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "[]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(charSequenceStream37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        java.lang.CharSequence charSequence10 = charSequenceList2.peek();
        boolean boolean12 = charSequenceList2.offerFirst((java.lang.CharSequence) "[[hi!, [hi!, ]], hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean10 = charSequenceList2.contains((java.lang.Object) (-1.0d));
        java.lang.CharSequence charSequence11 = charSequenceList2.getFirst();
        java.lang.CharSequence charSequence12 = charSequenceList2.removeFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "hi!" + "'", charSequence11, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "hi!" + "'", charSequence12, "hi!");
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean10 = charSequenceList2.contains((java.lang.Object) (-1.0d));
        boolean boolean11 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence12 = charSequenceList2.pop();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "hi!" + "'", charSequence12, "hi!");
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceList2.parallelStream();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceList18.spliterator();
        int int21 = charSequenceList18.size();
        boolean boolean22 = charSequenceList11.contains((java.lang.Object) charSequenceList18);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = charSequenceList25.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence charSequence30 = charSequenceList25.peek();
        java.lang.CharSequence charSequence31 = charSequenceList25.pollFirst();
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceList34.spliterator();
        boolean boolean37 = charSequenceList34.isEmpty();
        charSequenceList34.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean41 = charSequenceList34.offerLast((java.lang.CharSequence) "");
        charSequenceList34.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean44 = charSequenceList25.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        boolean boolean45 = charSequenceList18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        int int46 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList18);
        java.lang.String str47 = charSequenceList18.toString();
        java.lang.CharSequence charSequence48 = charSequenceList18.peek();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "hi!" + "'", charSequence30, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "hi!" + "'", charSequence31, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[]" + "'", str47, "[]");
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "" + "'", charSequence48, "");
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        java.lang.Object obj5 = charSequenceList2.clone();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        boolean boolean12 = charSequenceList9.isEmpty();
        charSequenceList9.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str15 = charSequenceList9.toString();
        java.lang.CharSequence charSequence16 = charSequenceList9.peek();
        int int18 = charSequenceList9.indexOf((java.lang.Object) (short) 1);
        java.lang.CharSequence charSequence19 = charSequenceList9.pollFirst();
        java.lang.CharSequence charSequence20 = charSequenceList9.element();
        boolean boolean21 = charSequenceList2.addAll((int) (short) 0, (java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[hi!, ]" + "'", str15, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "hi!" + "'", charSequence19, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence11 = charSequenceList2.pop();
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceList14.spliterator();
        boolean boolean17 = charSequenceList14.isEmpty();
        java.lang.CharSequence charSequence18 = charSequenceList14.removeLast();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        boolean boolean28 = charSequenceList21.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        boolean boolean36 = charSequenceList21.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence charSequence37 = charSequenceList21.pop();
        boolean boolean38 = charSequenceList14.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        boolean boolean39 = charSequenceList2.contains((java.lang.Object) boolean38);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor40 = charSequenceList2.iterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "hi!" + "'", charSequence11, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "" + "'", charSequence18, "");
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "hi!" + "'", charSequence37, "hi!");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(charSequenceItor40);
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        java.lang.CharSequence charSequence10 = charSequenceList2.peek();
        java.lang.CharSequence charSequence11 = charSequenceList2.remove();
        boolean boolean13 = charSequenceList2.add((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = charSequenceList16.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.Object obj21 = null;
        boolean boolean22 = charSequenceList16.equals(obj21);
        java.lang.Object obj23 = charSequenceList16.clone();
        boolean boolean24 = charSequenceList2.removeFirstOccurrence((java.lang.Object) charSequenceList16);
        charSequenceList16.clear();
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceList28.spliterator();
        java.lang.Object obj31 = charSequenceList28.clone();
        java.lang.CharSequence charSequence32 = charSequenceList28.poll();
        int int33 = charSequenceList16.lastIndexOf((java.lang.Object) charSequence32);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "hi!" + "'", charSequence11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[]");
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "" + "'", charSequence32, "");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        int int27 = charSequenceList2.indexOf((java.lang.Object) charSequence26);
        int int28 = charSequenceList2.size();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator29 = charSequenceList2.spliterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(charSequenceSpliterator29);
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean10 = charSequenceList2.contains((java.lang.Object) (-1.0d));
        java.lang.CharSequence charSequence11 = charSequenceList2.getFirst();
        java.lang.String str12 = charSequenceList2.toString();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "hi!" + "'", charSequence11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence charSequence15 = charSequenceList9.pollLast();
        charSequenceList9.clear();
        charSequenceList9.addFirst((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence19 = charSequenceList9.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream20 = charSequenceList9.stream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNull(charSequence15);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertNotNull(charSequenceStream20);
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = charSequenceList5.clone();
        charSequenceList5.addLast((java.lang.CharSequence) "[hi!, ]");
        boolean boolean11 = charSequenceList5.offerLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence12 = charSequenceList5.pollFirst();
        java.lang.CharSequence charSequence13 = charSequenceList5.pollLast();
        boolean boolean15 = charSequenceList5.offerFirst((java.lang.CharSequence) "[hi!, [[hi!, ]]]");
        java.lang.CharSequence charSequence16 = charSequenceList5.element();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "[hi!, ]" + "'", charSequence12, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "[hi!, ]" + "'", charSequence13, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "[hi!, [[hi!, ]]]" + "'", charSequence16, "[hi!, [[hi!, ]]]");
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "", "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList3 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence charSequence5 = charSequenceList3.pollFirst();
        java.lang.CharSequence charSequence6 = charSequenceList3.poll();
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + charSequence5 + "' != '" + "" + "'", charSequence5, "");
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence9 = charSequenceList2.removeLast();
        java.lang.Object obj10 = null;
        int int11 = charSequenceList2.lastIndexOf(obj10);
        java.lang.CharSequence charSequence12 = charSequenceList2.pollLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(charSequence12);
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        java.lang.CharSequence charSequence6 = charSequenceList2.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.parallelStream();
        java.lang.CharSequence charSequence8 = charSequenceList2.poll();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence9 = charSequenceList2.getLast();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertNull(charSequence8);
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        charSequenceList2.addFirst((java.lang.CharSequence) "[hi!, ]");
        charSequenceList2.clear();
        charSequenceList2.clear();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor14 = charSequenceList2.listIterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream15 = charSequenceList2.parallelStream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceItor14);
        org.junit.Assert.assertNotNull(charSequenceStream15);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceList11.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.CharSequence> charSequenceItor17 = charSequenceList11.listIterator(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence charSequence19 = charSequenceList2.peek();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = charSequenceList22.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        int int32 = charSequenceList29.size();
        boolean boolean33 = charSequenceList22.contains((java.lang.Object) charSequenceList29);
        java.lang.CharSequence charSequence34 = charSequenceList22.element();
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator39 = charSequenceList37.spliterator();
        boolean boolean40 = charSequenceList37.isEmpty();
        charSequenceList37.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str43 = charSequenceList37.toString();
        boolean boolean44 = charSequenceList22.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        boolean boolean46 = charSequenceList37.offer((java.lang.CharSequence) "");
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor47 = charSequenceList37.listIterator();
        java.lang.CharSequence charSequence48 = charSequenceList37.poll();
        int int49 = charSequenceList37.size();
        int int50 = charSequenceList2.indexOf((java.lang.Object) charSequenceList37);
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList53 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53, charSequenceArray52);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList56 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean57 = charSequenceList53.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList56);
        java.lang.Object obj58 = null;
        boolean boolean59 = charSequenceList53.equals(obj58);
        java.lang.CharSequence[] charSequenceArray61 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList62 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList62, charSequenceArray61);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator64 = charSequenceList62.spliterator();
        boolean boolean65 = charSequenceList53.removeLastOccurrence((java.lang.Object) charSequenceList62);
        charSequenceList53.addLast((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray69 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList70 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList70, charSequenceArray69);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator72 = charSequenceList70.spliterator();
        int int73 = charSequenceList70.size();
        java.lang.CharSequence[] charSequenceArray75 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList76 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList76, charSequenceArray75);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator78 = charSequenceList76.spliterator();
        int int79 = charSequenceList76.size();
        boolean boolean80 = charSequenceList70.contains((java.lang.Object) charSequenceList76);
        boolean boolean81 = charSequenceList53.contains((java.lang.Object) boolean80);
        boolean boolean82 = charSequenceList37.removeFirstOccurrence((java.lang.Object) boolean80);
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor83 = charSequenceList37.listIterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator84 = charSequenceList37.spliterator();
        java.lang.CharSequence charSequence85 = charSequenceList37.getLast();
        java.lang.CharSequence charSequence86 = charSequenceList37.peekFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "hi!" + "'", charSequence19, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[hi!, ]" + "'", str43, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceItor47);
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "hi!" + "'", charSequence48, "hi!");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(charSequenceArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(charSequenceArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(charSequenceItor83);
        org.junit.Assert.assertNotNull(charSequenceSpliterator84);
        org.junit.Assert.assertEquals("'" + charSequence85 + "' != '" + "" + "'", charSequence85, "");
        org.junit.Assert.assertEquals("'" + charSequence86 + "' != '" + "" + "'", charSequence86, "");
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence charSequence15 = charSequenceList11.removeLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor16 = charSequenceList11.listIterator();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList19.equals(obj24);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceList28.spliterator();
        boolean boolean31 = charSequenceList19.removeLastOccurrence((java.lang.Object) charSequenceList28);
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = charSequenceList34.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        java.lang.CharSequence charSequence39 = charSequenceList34.peek();
        boolean boolean41 = charSequenceList34.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean42 = charSequenceList19.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence charSequence43 = charSequenceList19.pop();
        java.lang.CharSequence charSequence44 = charSequenceList19.peekFirst();
        java.lang.CharSequence charSequence45 = charSequenceList19.peekFirst();
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48, charSequenceArray47);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList51 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean52 = charSequenceList48.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList51);
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList55 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55, charSequenceArray54);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator57 = charSequenceList55.spliterator();
        int int58 = charSequenceList55.size();
        boolean boolean59 = charSequenceList48.contains((java.lang.Object) charSequenceList55);
        java.lang.CharSequence charSequence60 = charSequenceList48.element();
        java.lang.CharSequence[] charSequenceArray62 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList63 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList63, charSequenceArray62);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator65 = charSequenceList63.spliterator();
        boolean boolean66 = charSequenceList63.isEmpty();
        charSequenceList63.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str69 = charSequenceList63.toString();
        boolean boolean70 = charSequenceList48.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList63);
        boolean boolean72 = charSequenceList63.offer((java.lang.CharSequence) "");
        charSequenceList63.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList63.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        charSequenceList63.addLast((java.lang.CharSequence) "hi!");
        int int81 = charSequenceList19.indexOf((java.lang.Object) charSequenceList63);
        charSequenceList63.addFirst((java.lang.CharSequence) "");
        boolean boolean84 = charSequenceList11.equals((java.lang.Object) charSequenceList63);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "" + "'", charSequence15, "");
        org.junit.Assert.assertNotNull(charSequenceItor16);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "hi!" + "'", charSequence39, "hi!");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "hi!" + "'", charSequence43, "hi!");
        org.junit.Assert.assertNull(charSequence44);
        org.junit.Assert.assertNull(charSequence45);
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + charSequence60 + "' != '" + "hi!" + "'", charSequence60, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[hi!, ]" + "'", str69, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence charSequence19 = charSequenceList2.peek();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = charSequenceList22.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        int int32 = charSequenceList29.size();
        boolean boolean33 = charSequenceList22.contains((java.lang.Object) charSequenceList29);
        java.lang.CharSequence charSequence34 = charSequenceList22.element();
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator39 = charSequenceList37.spliterator();
        boolean boolean40 = charSequenceList37.isEmpty();
        charSequenceList37.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str43 = charSequenceList37.toString();
        boolean boolean44 = charSequenceList22.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        boolean boolean46 = charSequenceList37.offer((java.lang.CharSequence) "");
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor47 = charSequenceList37.listIterator();
        java.lang.CharSequence charSequence48 = charSequenceList37.poll();
        int int49 = charSequenceList37.size();
        int int50 = charSequenceList2.indexOf((java.lang.Object) charSequenceList37);
        charSequenceList37.push((java.lang.CharSequence) "hi!");
        charSequenceList37.addLast((java.lang.CharSequence) "[[hi!, ]]");
        java.lang.CharSequence charSequence55 = charSequenceList37.pollFirst();
        java.lang.CharSequence charSequence58 = charSequenceList37.set((int) (byte) 0, (java.lang.CharSequence) "[]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "hi!" + "'", charSequence19, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[hi!, ]" + "'", str43, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceItor47);
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "hi!" + "'", charSequence48, "hi!");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence55 + "' != '" + "hi!" + "'", charSequence55, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence58 + "' != '" + "" + "'", charSequence58, "");
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.Object obj9 = charSequenceList2.clone();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        int int18 = charSequenceList12.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean20 = charSequenceList12.offerLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList26 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean27 = charSequenceList23.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList26);
        boolean boolean29 = charSequenceList23.offerFirst((java.lang.CharSequence) "hi!");
        int int30 = charSequenceList12.lastIndexOf((java.lang.Object) "hi!");
        boolean boolean32 = charSequenceList12.add((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence33 = charSequenceList12.pop();
        int int34 = charSequenceList2.indexOf((java.lang.Object) charSequenceList12);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "hi!" + "'", charSequence33, "hi!");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        charSequenceList17.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList17.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        boolean boolean34 = charSequenceList17.offerFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence35 = charSequenceList17.poll();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        charSequenceList17.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean31 = charSequenceList17.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence32 = charSequenceList17.poll();
        charSequenceList17.push((java.lang.CharSequence) "[]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "hi!" + "'", charSequence32, "hi!");
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream18 = charSequenceList15.parallelStream();
        java.lang.Object[] objArray19 = charSequenceList15.toArray();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceStream18);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        boolean boolean14 = charSequenceList2.isEmpty();
        java.lang.Object obj15 = charSequenceList2.clone();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceList2.parallelStream();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList19.equals(obj24);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = charSequenceList28.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        java.lang.CharSequence charSequence33 = charSequenceList28.peek();
        java.lang.CharSequence charSequence34 = charSequenceList28.pollFirst();
        boolean boolean35 = charSequenceList19.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        boolean boolean36 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence charSequence37 = charSequenceList28.pollLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "hi!" + "'", charSequence33, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(charSequence37);
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        java.util.LinkedList<java.lang.Comparable<java.lang.String>> strComparableList5 = new java.util.LinkedList<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = charSequenceList2.contains((java.lang.Object) strComparableList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = charSequenceList9.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator18 = charSequenceList16.spliterator();
        int int19 = charSequenceList16.size();
        boolean boolean20 = charSequenceList9.contains((java.lang.Object) charSequenceList16);
        java.lang.CharSequence charSequence21 = charSequenceList9.element();
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = charSequenceList24.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceList31.spliterator();
        int int34 = charSequenceList31.size();
        boolean boolean35 = charSequenceList24.contains((java.lang.Object) charSequenceList31);
        java.lang.CharSequence charSequence36 = charSequenceList24.element();
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceList39.spliterator();
        boolean boolean42 = charSequenceList39.isEmpty();
        charSequenceList39.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str45 = charSequenceList39.toString();
        boolean boolean46 = charSequenceList24.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean48 = charSequenceList39.offer((java.lang.CharSequence) "");
        charSequenceList39.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean53 = charSequenceList39.add((java.lang.CharSequence) "");
        int int54 = charSequenceList9.lastIndexOf((java.lang.Object) boolean53);
        boolean boolean55 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        boolean boolean57 = charSequenceList9.remove((java.lang.Object) (short) 100);
        boolean boolean59 = charSequenceList9.add((java.lang.CharSequence) "[hi!, [[hi!, ]]]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "hi!" + "'", charSequence21, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "hi!" + "'", charSequence36, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[hi!, ]" + "'", str45, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        java.lang.CharSequence charSequence10 = charSequenceList2.peek();
        java.lang.CharSequence charSequence11 = null;
        charSequenceList2.push(charSequence11);
        java.lang.CharSequence charSequence13 = charSequenceList2.pollLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence charSequence19 = charSequenceList2.peek();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = charSequenceList22.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        int int32 = charSequenceList29.size();
        boolean boolean33 = charSequenceList22.contains((java.lang.Object) charSequenceList29);
        java.lang.CharSequence charSequence34 = charSequenceList22.element();
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator39 = charSequenceList37.spliterator();
        boolean boolean40 = charSequenceList37.isEmpty();
        charSequenceList37.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str43 = charSequenceList37.toString();
        boolean boolean44 = charSequenceList22.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        boolean boolean46 = charSequenceList37.offer((java.lang.CharSequence) "");
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor47 = charSequenceList37.listIterator();
        java.lang.CharSequence charSequence48 = charSequenceList37.poll();
        int int49 = charSequenceList37.size();
        int int50 = charSequenceList2.indexOf((java.lang.Object) charSequenceList37);
        int int51 = charSequenceList2.size();
        java.lang.CharSequence charSequence52 = charSequenceList2.pollFirst();
        boolean boolean54 = charSequenceList2.offerLast((java.lang.CharSequence) "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "hi!" + "'", charSequence19, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[hi!, ]" + "'", str43, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceItor47);
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "hi!" + "'", charSequence48, "hi!");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "hi!" + "'", charSequence52, "hi!");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceList17.stream();
        boolean boolean27 = charSequenceList17.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence28 = charSequenceList17.poll();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceList31.spliterator();
        charSequenceList31.clear();
        boolean boolean35 = charSequenceList17.removeLastOccurrence((java.lang.Object) charSequenceList31);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        java.lang.Object obj37 = charSequenceList31.clone();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceStream25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "[hi!, ]" + "'", charSequence28, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.pop();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean14 = charSequenceList2.offer((java.lang.CharSequence) "[hi!, ]");
        boolean boolean16 = charSequenceList2.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence17 = charSequenceList2.getFirst();
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        int int26 = charSequenceList20.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence27 = charSequenceList20.removeLast();
        java.lang.CharSequence charSequence28 = charSequenceList20.peekLast();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceList38.spliterator();
        int int41 = charSequenceList38.size();
        boolean boolean42 = charSequenceList31.contains((java.lang.Object) charSequenceList38);
        java.lang.CharSequence charSequence43 = charSequenceList31.element();
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceList46.spliterator();
        boolean boolean49 = charSequenceList46.isEmpty();
        charSequenceList46.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str52 = charSequenceList46.toString();
        boolean boolean53 = charSequenceList31.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceList46.stream();
        boolean boolean55 = charSequenceList20.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        boolean boolean56 = charSequenceList2.contains((java.lang.Object) charSequenceList20);
        java.lang.CharSequence charSequence57 = charSequenceList2.getLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "[hi!, ]" + "'", charSequence17, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "hi!" + "'", charSequence43, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[hi!, ]" + "'", str52, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + charSequence57 + "' != '" + "[hi!, ]" + "'", charSequence57, "[hi!, ]");
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceList17.poll();
        java.lang.Object[] objArray28 = charSequenceList17.toArray();
        java.lang.CharSequence charSequence29 = charSequenceList17.peekFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[, ]");
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "" + "'", charSequence29, "");
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList8 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList8.spliterator();
        int int11 = charSequenceList8.size();
        boolean boolean12 = charSequenceList2.contains((java.lang.Object) charSequenceList8);
        boolean boolean14 = charSequenceList2.add((java.lang.CharSequence) "[hi!, ]");
        charSequenceList2.addLast((java.lang.CharSequence) "[hi!, [[hi!, ]]]");
        boolean boolean18 = charSequenceList2.offerLast((java.lang.CharSequence) "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        int int9 = charSequenceList2.size();
        charSequenceList2.addLast((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence12 = charSequenceList2.removeLast();
        java.lang.CharSequence charSequence13 = charSequenceList2.pollLast();
        boolean boolean14 = charSequenceList2.isEmpty();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "hi!" + "'", charSequence12, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence charSequence15 = charSequenceList9.pollLast();
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = charSequenceList18.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        java.lang.CharSequence charSequence23 = charSequenceList18.peek();
        boolean boolean25 = charSequenceList18.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = charSequenceList28.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean33 = charSequenceList18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean34 = charSequenceList9.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        boolean boolean43 = charSequenceList37.offerFirst((java.lang.CharSequence) "hi!");
        boolean boolean44 = charSequenceList31.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        int int45 = charSequenceList37.size();
        java.lang.Object[] objArray46 = charSequenceList37.toArray();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNull(charSequence15);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "hi!" + "'", charSequence23, "hi!");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[hi!, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[hi!, hi!]");
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        int int27 = charSequenceList2.indexOf((java.lang.Object) charSequence26);
        int int28 = charSequenceList2.size();
        java.lang.CharSequence charSequence29 = charSequenceList2.pop();
        charSequenceList2.push((java.lang.CharSequence) "[hi!]");
        charSequenceList2.addLast((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = charSequenceList36.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence charSequence41 = charSequenceList36.peek();
        boolean boolean43 = charSequenceList36.add((java.lang.CharSequence) "[hi!, ]");
        boolean boolean44 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36);
        int int45 = charSequenceList2.size();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 4 + "'", int45 == 4);
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence9 = charSequenceList2.removeLast();
        java.lang.CharSequence charSequence10 = charSequenceList2.peekLast();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceList20.spliterator();
        int int23 = charSequenceList20.size();
        boolean boolean24 = charSequenceList13.contains((java.lang.Object) charSequenceList20);
        java.lang.CharSequence charSequence25 = charSequenceList13.element();
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceList28.spliterator();
        boolean boolean31 = charSequenceList28.isEmpty();
        charSequenceList28.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str34 = charSequenceList28.toString();
        boolean boolean35 = charSequenceList13.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream36 = charSequenceList28.stream();
        boolean boolean37 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence charSequence39 = charSequenceList2.remove((int) (byte) 1);
        java.lang.Object obj40 = charSequenceList2.clone();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertNull(charSequence10);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "hi!" + "'", charSequence25, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[hi!, ]" + "'", str34, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceStream36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "" + "'", charSequence39, "");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[hi!]");
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence charSequence18 = charSequenceList2.pop();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        java.lang.CharSequence charSequence27 = charSequenceList21.poll();
        boolean boolean28 = charSequenceList2.remove((java.lang.Object) charSequence27);
        java.lang.CharSequence charSequence29 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = charSequenceList32.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        charSequenceList35.push((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence39 = charSequenceList35.pollFirst();
        boolean boolean40 = charSequenceList2.remove((java.lang.Object) charSequenceList35);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence41 = charSequenceList35.element();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "hi!" + "'", charSequence18, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(charSequence29);
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "" + "'", charSequence39, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator29 = charSequenceList27.spliterator();
        java.lang.CharSequence charSequence30 = charSequenceList27.getLast();
        java.lang.CharSequence charSequence31 = charSequenceList27.removeLast();
        boolean boolean32 = charSequenceList17.remove((java.lang.Object) charSequenceList27);
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = charSequenceList35.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        java.lang.CharSequence charSequence40 = charSequenceList35.peek();
        java.lang.CharSequence charSequence41 = charSequenceList35.pollFirst();
        charSequenceList35.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = charSequenceList46.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList49);
        java.lang.Object obj51 = null;
        boolean boolean52 = charSequenceList46.equals(obj51);
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList55 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55, charSequenceArray54);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator57 = charSequenceList55.spliterator();
        boolean boolean58 = charSequenceList46.removeLastOccurrence((java.lang.Object) charSequenceList55);
        charSequenceList46.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean61 = charSequenceList35.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        boolean boolean62 = charSequenceList27.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor63 = charSequenceList27.iterator();
        boolean boolean65 = charSequenceList27.add((java.lang.CharSequence) "");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator29);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "" + "'", charSequence30, "");
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "" + "'", charSequence31, "");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "hi!" + "'", charSequence40, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(charSequenceItor63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList2.removeLastOccurrence(obj9);
        boolean boolean12 = charSequenceList2.remove((java.lang.Object) (short) 10);
        boolean boolean13 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence14 = charSequenceList2.getLast();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.Object obj22 = null;
        boolean boolean23 = charSequenceList17.equals(obj22);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor25 = charSequenceList17.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream26 = charSequenceList17.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream27 = charSequenceList17.stream();
        int int28 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList17);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charSequenceItor25);
        org.junit.Assert.assertNotNull(charSequenceStream26);
        org.junit.Assert.assertNotNull(charSequenceStream27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        int int27 = charSequenceList2.indexOf((java.lang.Object) charSequence26);
        int int28 = charSequenceList2.size();
        java.lang.CharSequence charSequence29 = charSequenceList2.pop();
        charSequenceList2.push((java.lang.CharSequence) "[hi!]");
        charSequenceList2.addLast((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence34 = charSequenceList2.pop();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "[hi!]" + "'", charSequence34, "[hi!]");
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceList17.stream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceList17.spliterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream27 = charSequenceList17.parallelStream();
        charSequenceList17.addLast((java.lang.CharSequence) "[[hi!, ], hi!, ]");
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = charSequenceList32.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceList39.spliterator();
        int int42 = charSequenceList39.size();
        boolean boolean43 = charSequenceList32.contains((java.lang.Object) charSequenceList39);
        boolean boolean44 = charSequenceList32.isEmpty();
        java.lang.Object obj45 = charSequenceList32.clone();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream46 = charSequenceList32.parallelStream();
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = charSequenceList49.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        java.lang.Object obj54 = null;
        boolean boolean55 = charSequenceList49.equals(obj54);
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList58 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58, charSequenceArray57);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList61 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean62 = charSequenceList58.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList61);
        java.lang.CharSequence charSequence63 = charSequenceList58.peek();
        java.lang.CharSequence charSequence64 = charSequenceList58.pollFirst();
        boolean boolean65 = charSequenceList49.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58);
        boolean boolean66 = charSequenceList32.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58);
        charSequenceList58.addLast((java.lang.CharSequence) "[]");
        charSequenceList58.clear();
        boolean boolean70 = charSequenceList17.contains((java.lang.Object) charSequenceList58);
        java.lang.CharSequence charSequence71 = charSequenceList17.peekFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceStream25);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
        org.junit.Assert.assertNotNull(charSequenceStream27);
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceStream46);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + charSequence63 + "' != '" + "hi!" + "'", charSequence63, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence64 + "' != '" + "hi!" + "'", charSequence64, "hi!");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + charSequence71 + "' != '" + "hi!" + "'", charSequence71, "hi!");
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        java.lang.CharSequence charSequence9 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence charSequence17 = charSequenceList12.peek();
        boolean boolean19 = charSequenceList12.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = charSequenceList22.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        boolean boolean27 = charSequenceList12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        charSequenceList12.clear();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.Object obj36 = charSequenceList34.clone();
        int int37 = charSequenceList12.lastIndexOf((java.lang.Object) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = charSequenceList40.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceList47.spliterator();
        int int50 = charSequenceList47.size();
        boolean boolean51 = charSequenceList40.contains((java.lang.Object) charSequenceList47);
        java.lang.CharSequence charSequence52 = charSequenceList40.element();
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList55 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55, charSequenceArray54);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator57 = charSequenceList55.spliterator();
        boolean boolean58 = charSequenceList55.isEmpty();
        charSequenceList55.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str61 = charSequenceList55.toString();
        boolean boolean62 = charSequenceList40.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55);
        boolean boolean64 = charSequenceList55.offer((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor65 = charSequenceList55.descendingIterator();
        charSequenceList55.clear();
        boolean boolean67 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55);
        boolean boolean68 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor69 = charSequenceList12.iterator();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor70 = charSequenceList12.descendingIterator();
        java.lang.CharSequence charSequence71 = charSequenceList12.poll();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "[]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "hi!" + "'", charSequence52, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[hi!, ]" + "'", str61, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(charSequenceItor65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(charSequenceItor69);
        org.junit.Assert.assertNotNull(charSequenceItor70);
        org.junit.Assert.assertNull(charSequence71);
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.pop();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence13 = charSequenceList2.poll();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = charSequenceList16.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence charSequence21 = charSequenceList16.peek();
        boolean boolean23 = charSequenceList16.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList26 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26, charSequenceArray25);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = charSequenceList26.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        boolean boolean31 = charSequenceList16.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        charSequenceList16.clear();
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = charSequenceList35.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        java.lang.Object obj40 = charSequenceList38.clone();
        int int41 = charSequenceList16.lastIndexOf((java.lang.Object) charSequenceList38);
        java.lang.CharSequence charSequence42 = charSequenceList38.peekFirst();
        java.lang.CharSequence charSequence43 = charSequenceList38.peekFirst();
        boolean boolean44 = charSequenceList2.removeFirstOccurrence((java.lang.Object) charSequenceList38);
        charSequenceList38.addLast((java.lang.CharSequence) "");
        int int47 = charSequenceList38.size();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream48 = charSequenceList38.stream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "hi!" + "'", charSequence21, "hi!");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(charSequence42);
        org.junit.Assert.assertNull(charSequence43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(charSequenceStream48);
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceList2.stream();
        java.lang.CharSequence charSequence15 = charSequenceList2.pop();
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = charSequenceList18.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator27 = charSequenceList25.spliterator();
        int int28 = charSequenceList25.size();
        boolean boolean29 = charSequenceList18.contains((java.lang.Object) charSequenceList25);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream30 = charSequenceList18.stream();
        java.lang.CharSequence charSequence32 = null;
        charSequenceList18.add(0, charSequence32);
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList36 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = charSequenceList36.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList43 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList43, charSequenceArray42);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator45 = charSequenceList43.spliterator();
        int int46 = charSequenceList43.size();
        boolean boolean47 = charSequenceList36.contains((java.lang.Object) charSequenceList43);
        java.lang.CharSequence charSequence48 = charSequenceList36.element();
        boolean boolean49 = charSequenceList18.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36);
        boolean boolean50 = charSequenceList2.equals((java.lang.Object) charSequenceList36);
        charSequenceList2.push((java.lang.CharSequence) "[[hi!, ], hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "hi!" + "'", charSequence15, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(charSequenceStream30);
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "hi!" + "'", charSequence48, "hi!");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence charSequence15 = charSequenceList9.pollLast();
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = charSequenceList18.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        java.lang.CharSequence charSequence23 = charSequenceList18.peek();
        boolean boolean25 = charSequenceList18.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = charSequenceList28.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean33 = charSequenceList18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean34 = charSequenceList9.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        boolean boolean43 = charSequenceList37.offerFirst((java.lang.CharSequence) "hi!");
        boolean boolean44 = charSequenceList31.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        int int45 = charSequenceList37.size();
        int int46 = charSequenceList37.size();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNull(charSequence15);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "hi!" + "'", charSequence23, "hi!");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        charSequenceList5.push((java.lang.CharSequence) "");
        boolean boolean10 = charSequenceList5.offerLast((java.lang.CharSequence) "[hi!]");
        java.lang.CharSequence charSequence11 = charSequenceList5.getFirst();
        boolean boolean13 = charSequenceList5.offerFirst((java.lang.CharSequence) "[hi!, [[hi!, ]]]");
        java.lang.CharSequence charSequence14 = charSequenceList5.pollFirst();
        java.lang.CharSequence charSequence15 = charSequenceList5.pollLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "" + "'", charSequence11, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "[hi!, [[hi!, ]]]" + "'", charSequence14, "[hi!, [[hi!, ]]]");
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "[hi!]" + "'", charSequence15, "[hi!]");
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        charSequenceList17.addLast((java.lang.CharSequence) "");
        charSequenceList17.clear();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor28 = charSequenceList17.descendingIterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceItor28);
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.pop();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean14 = charSequenceList2.offer((java.lang.CharSequence) "[hi!, ]");
        boolean boolean16 = charSequenceList2.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence17 = charSequenceList2.getFirst();
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        int int26 = charSequenceList20.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean28 = charSequenceList20.contains((java.lang.Object) (-1.0d));
        java.lang.CharSequence charSequence29 = charSequenceList20.getFirst();
        boolean boolean30 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.String str31 = charSequenceList20.toString();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "[hi!, ]" + "'", charSequence17, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[hi!]" + "'", str31, "[hi!]");
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean19 = charSequenceList2.offer((java.lang.CharSequence) "[, ]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.poll();
        java.lang.String str9 = charSequenceList2.toString();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList2.spliterator();
        charSequenceList2.clear();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[]" + "'", str9, "[]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        boolean boolean14 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence15 = charSequenceList2.element();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "hi!" + "'", charSequence15, "hi!");
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceList12.spliterator();
        boolean boolean15 = charSequenceList12.isEmpty();
        java.lang.CharSequence charSequence16 = charSequenceList12.removeLast();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = charSequenceList19.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence charSequence24 = charSequenceList19.peek();
        boolean boolean26 = charSequenceList19.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = charSequenceList29.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        boolean boolean34 = charSequenceList19.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.CharSequence charSequence35 = charSequenceList19.pop();
        boolean boolean36 = charSequenceList12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = charSequenceList39.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        java.lang.Object obj44 = null;
        boolean boolean45 = charSequenceList39.equals(obj44);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence charSequence47 = charSequenceList39.peek();
        java.lang.CharSequence charSequence48 = charSequenceList39.remove();
        boolean boolean49 = charSequenceList19.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean50 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean51 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence52 = null;
        boolean boolean53 = charSequenceList2.offerLast(charSequence52);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[]" + "'", str8, "[]");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "hi!" + "'", charSequence24, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "hi!" + "'", charSequence47, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "hi!" + "'", charSequence48, "hi!");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        charSequenceList2.clear();
        java.lang.Object obj6 = charSequenceList2.clone();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor7 = charSequenceList2.listIterator();
        java.lang.CharSequence[] charSequenceArray9 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList10 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList10, charSequenceArray9);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator12 = charSequenceList10.spliterator();
        boolean boolean13 = charSequenceList10.isEmpty();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList10);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor7);
        org.junit.Assert.assertNotNull(charSequenceArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence22 = charSequenceList17.peek();
        boolean boolean24 = charSequenceList17.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean25 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence charSequence26 = charSequenceList2.pop();
        java.lang.CharSequence charSequence27 = charSequenceList2.peekFirst();
        java.lang.CharSequence charSequence28 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceList38.spliterator();
        int int41 = charSequenceList38.size();
        boolean boolean42 = charSequenceList31.contains((java.lang.Object) charSequenceList38);
        java.lang.CharSequence charSequence43 = charSequenceList31.element();
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceList46.spliterator();
        boolean boolean49 = charSequenceList46.isEmpty();
        charSequenceList46.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str52 = charSequenceList46.toString();
        boolean boolean53 = charSequenceList31.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        boolean boolean55 = charSequenceList46.offer((java.lang.CharSequence) "");
        charSequenceList46.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList46.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        charSequenceList46.addLast((java.lang.CharSequence) "hi!");
        int int64 = charSequenceList2.indexOf((java.lang.Object) charSequenceList46);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream65 = charSequenceList46.parallelStream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNull(charSequence27);
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "hi!" + "'", charSequence43, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[hi!, ]" + "'", str52, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(charSequenceStream65);
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.pop();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean14 = charSequenceList2.offer((java.lang.CharSequence) "[hi!, ]");
        boolean boolean16 = charSequenceList2.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence17 = charSequenceList2.getFirst();
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        int int26 = charSequenceList20.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence27 = charSequenceList20.removeLast();
        java.lang.CharSequence charSequence28 = charSequenceList20.peekLast();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceList38.spliterator();
        int int41 = charSequenceList38.size();
        boolean boolean42 = charSequenceList31.contains((java.lang.Object) charSequenceList38);
        java.lang.CharSequence charSequence43 = charSequenceList31.element();
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceList46.spliterator();
        boolean boolean49 = charSequenceList46.isEmpty();
        charSequenceList46.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str52 = charSequenceList46.toString();
        boolean boolean53 = charSequenceList31.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceList46.stream();
        boolean boolean55 = charSequenceList20.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        boolean boolean56 = charSequenceList2.contains((java.lang.Object) charSequenceList20);
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor57 = charSequenceList20.listIterator();
        java.lang.CharSequence charSequence58 = charSequenceList20.peek();
        java.util.LinkedList<java.lang.CharSequence> charSequenceList59 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "[hi!, ]" + "'", charSequence17, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "hi!" + "'", charSequence43, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[hi!, ]" + "'", str52, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charSequenceItor57);
        org.junit.Assert.assertEquals("'" + charSequence58 + "' != '" + "hi!" + "'", charSequence58, "hi!");
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        int int27 = charSequenceList2.indexOf((java.lang.Object) charSequence26);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.CharSequence> charSequenceList30 = charSequenceList2.subList(2, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceList2.parallelStream();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceList18.spliterator();
        int int21 = charSequenceList18.size();
        boolean boolean22 = charSequenceList11.contains((java.lang.Object) charSequenceList18);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = charSequenceList25.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence charSequence30 = charSequenceList25.peek();
        java.lang.CharSequence charSequence31 = charSequenceList25.pollFirst();
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceList34.spliterator();
        boolean boolean37 = charSequenceList34.isEmpty();
        charSequenceList34.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean41 = charSequenceList34.offerLast((java.lang.CharSequence) "");
        charSequenceList34.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean44 = charSequenceList25.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        boolean boolean45 = charSequenceList18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        int int46 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList18);
        int int47 = charSequenceList2.size();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "hi!" + "'", charSequence30, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "hi!" + "'", charSequence31, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence charSequence9 = charSequenceList2.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream10 = charSequenceList2.parallelStream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList2.spliterator();
        java.lang.Object obj12 = charSequenceList2.clone();
        java.lang.Object[] objArray13 = charSequenceList2.toArray();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = charSequenceList16.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator25 = charSequenceList23.spliterator();
        int int26 = charSequenceList23.size();
        boolean boolean27 = charSequenceList16.contains((java.lang.Object) charSequenceList23);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream28 = charSequenceList16.stream();
        java.lang.CharSequence charSequence30 = null;
        charSequenceList16.add(0, charSequence30);
        java.lang.CharSequence charSequence32 = charSequenceList16.removeFirst();
        boolean boolean33 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream10);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "[hi!, ]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "[hi!, ]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "[hi!, ]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceStream28);
        org.junit.Assert.assertNull(charSequence32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        int int8 = charSequenceList2.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean10 = charSequenceList2.offerLast((java.lang.CharSequence) "[hi!, ]");
        java.lang.String str11 = charSequenceList2.toString();
        java.lang.CharSequence charSequence12 = charSequenceList2.pop();
        java.lang.String str13 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator18 = charSequenceList16.spliterator();
        boolean boolean19 = charSequenceList16.isEmpty();
        charSequenceList16.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str22 = charSequenceList16.toString();
        java.lang.CharSequence charSequence23 = charSequenceList16.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream24 = charSequenceList16.parallelStream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator25 = charSequenceList16.spliterator();
        java.lang.Object obj26 = charSequenceList16.clone();
        boolean boolean27 = charSequenceList2.equals(obj26);
        boolean boolean29 = charSequenceList2.offerLast((java.lang.CharSequence) "[hi!, hi!, hi!, []]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[hi!, [hi!, ]]" + "'", str11, "[hi!, [hi!, ]]");
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "hi!" + "'", charSequence12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[[hi!, ]]" + "'", str13, "[[hi!, ]]");
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[hi!, ]" + "'", str22, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "hi!" + "'", charSequence23, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream24);
        org.junit.Assert.assertNotNull(charSequenceSpliterator25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[hi!, ]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[hi!, ]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence charSequence9 = charSequenceList2.peek();
        int int11 = charSequenceList2.indexOf((java.lang.Object) (short) 1);
        java.lang.CharSequence charSequence12 = charSequenceList2.pollFirst();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor13 = charSequenceList2.descendingIterator();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator18 = charSequenceList16.spliterator();
        boolean boolean19 = charSequenceList16.isEmpty();
        java.lang.CharSequence charSequence20 = charSequenceList16.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream21 = charSequenceList16.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream22 = charSequenceList16.parallelStream();
        charSequenceList16.push((java.lang.CharSequence) "hi!");
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator25 = charSequenceList16.spliterator();
        int int26 = charSequenceList2.indexOf((java.lang.Object) charSequenceSpliterator25);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "hi!" + "'", charSequence12, "hi!");
        org.junit.Assert.assertNotNull(charSequenceItor13);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertNotNull(charSequenceStream21);
        org.junit.Assert.assertNotNull(charSequenceStream22);
        org.junit.Assert.assertNotNull(charSequenceSpliterator25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceList2.parallelStream();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceList18.spliterator();
        int int21 = charSequenceList18.size();
        boolean boolean22 = charSequenceList11.contains((java.lang.Object) charSequenceList18);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = charSequenceList25.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence charSequence30 = charSequenceList25.peek();
        java.lang.CharSequence charSequence31 = charSequenceList25.pollFirst();
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceList34.spliterator();
        boolean boolean37 = charSequenceList34.isEmpty();
        charSequenceList34.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean41 = charSequenceList34.offerLast((java.lang.CharSequence) "");
        charSequenceList34.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean44 = charSequenceList25.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        boolean boolean45 = charSequenceList18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        int int46 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList18);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream47 = charSequenceList18.stream();
        boolean boolean49 = charSequenceList18.add((java.lang.CharSequence) "[]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "hi!" + "'", charSequence30, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "hi!" + "'", charSequence31, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(charSequenceStream47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList11.isEmpty();
        charSequenceList11.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean18 = charSequenceList11.offerLast((java.lang.CharSequence) "");
        charSequenceList11.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean21 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor22 = charSequenceList11.descendingIterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream23 = charSequenceList11.stream();
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList11.remove(obj24);
        java.lang.CharSequence charSequence26 = charSequenceList11.removeLast();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charSequenceItor22);
        org.junit.Assert.assertNotNull(charSequenceStream23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence charSequence17 = charSequenceList12.peek();
        java.lang.CharSequence charSequence18 = charSequenceList12.pollFirst();
        boolean boolean19 = charSequenceList2.contains((java.lang.Object) charSequence18);
        java.lang.CharSequence charSequence21 = charSequenceList2.remove((int) (short) 1);
        java.lang.CharSequence charSequence22 = charSequenceList2.removeFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "hi!" + "'", charSequence18, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "" + "'", charSequence21, "");
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = charSequenceList17.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence22 = charSequenceList17.peek();
        boolean boolean24 = charSequenceList17.removeFirstOccurrence((java.lang.Object) (byte) 100);
        boolean boolean25 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList2.isEmpty();
        charSequenceList2.push((java.lang.CharSequence) "[hi!, ]");
        boolean boolean30 = charSequenceList2.offerFirst((java.lang.CharSequence) "[]");
        charSequenceList2.addLast((java.lang.CharSequence) "[hi!, ]");
        charSequenceList2.addFirst((java.lang.CharSequence) "[, ]");
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        java.lang.CharSequence charSequence42 = charSequenceList37.peek();
        java.lang.CharSequence charSequence43 = charSequenceList37.poll();
        java.lang.String str44 = charSequenceList37.toString();
        java.lang.CharSequence charSequence45 = charSequenceList37.poll();
        int int46 = charSequenceList2.lastIndexOf((java.lang.Object) charSequence45);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "hi!" + "'", charSequence22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "hi!" + "'", charSequence43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[]" + "'", str44, "[]");
        org.junit.Assert.assertNull(charSequence45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        java.lang.CharSequence charSequence6 = charSequenceList2.removeLast();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceList2.parallelStream();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceList18.spliterator();
        int int21 = charSequenceList18.size();
        boolean boolean22 = charSequenceList11.contains((java.lang.Object) charSequenceList18);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = charSequenceList25.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence charSequence30 = charSequenceList25.peek();
        java.lang.CharSequence charSequence31 = charSequenceList25.pollFirst();
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceList34.spliterator();
        boolean boolean37 = charSequenceList34.isEmpty();
        charSequenceList34.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean41 = charSequenceList34.offerLast((java.lang.CharSequence) "");
        charSequenceList34.addFirst((java.lang.CharSequence) "[hi!, ]");
        boolean boolean44 = charSequenceList25.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        boolean boolean45 = charSequenceList18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        int int46 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList18);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.CharSequence> charSequenceItor48 = charSequenceList2.listIterator(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "hi!" + "'", charSequence30, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "hi!" + "'", charSequence31, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceList2.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceList2.pop();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean14 = charSequenceList2.offer((java.lang.CharSequence) "[hi!, ]");
        boolean boolean16 = charSequenceList2.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence17 = charSequenceList2.getFirst();
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        int int26 = charSequenceList20.lastIndexOf((java.lang.Object) (-1L));
        java.lang.CharSequence charSequence27 = charSequenceList20.removeLast();
        java.lang.CharSequence charSequence28 = charSequenceList20.peekLast();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = charSequenceList31.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList38 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceList38.spliterator();
        int int41 = charSequenceList38.size();
        boolean boolean42 = charSequenceList31.contains((java.lang.Object) charSequenceList38);
        java.lang.CharSequence charSequence43 = charSequenceList31.element();
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList46 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceList46.spliterator();
        boolean boolean49 = charSequenceList46.isEmpty();
        charSequenceList46.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str52 = charSequenceList46.toString();
        boolean boolean53 = charSequenceList31.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceList46.stream();
        boolean boolean55 = charSequenceList20.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        boolean boolean56 = charSequenceList2.contains((java.lang.Object) charSequenceList20);
        java.lang.CharSequence charSequence57 = charSequenceList20.peekFirst();
        boolean boolean59 = charSequenceList20.offerFirst((java.lang.CharSequence) "[[hi!, [hi!, ]], hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "[hi!, ]" + "'", charSequence17, "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "hi!" + "'", charSequence43, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[hi!, ]" + "'", str52, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + charSequence57 + "' != '" + "hi!" + "'", charSequence57, "hi!");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceList13.spliterator();
        boolean boolean16 = charSequenceList13.isEmpty();
        charSequenceList13.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str19 = charSequenceList13.toString();
        java.lang.CharSequence charSequence20 = charSequenceList13.removeFirst();
        boolean boolean22 = charSequenceList13.offer((java.lang.CharSequence) "hi!");
        int int23 = charSequenceList2.lastIndexOf((java.lang.Object) "hi!");
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList26 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26, charSequenceArray25);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator28 = charSequenceList26.spliterator();
        java.lang.CharSequence charSequence29 = charSequenceList26.getLast();
        java.lang.CharSequence charSequence30 = charSequenceList26.removeLast();
        boolean boolean32 = charSequenceList26.offer((java.lang.CharSequence) "[hi!]");
        int int33 = charSequenceList2.lastIndexOf((java.lang.Object) "[hi!]");
        java.util.function.UnaryOperator<java.lang.CharSequence> charSequenceUnaryOperator34 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList2.replaceAll(charSequenceUnaryOperator34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!, ]" + "'", str19, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "hi!" + "'", charSequence20, "hi!");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator28);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "" + "'", charSequence29, "");
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "" + "'", charSequence30, "");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        int int27 = charSequenceList2.indexOf((java.lang.Object) charSequence26);
        int int28 = charSequenceList2.size();
        java.lang.Object obj29 = charSequenceList2.clone();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList32 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = charSequenceList32.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceList39.spliterator();
        int int42 = charSequenceList39.size();
        boolean boolean43 = charSequenceList32.contains((java.lang.Object) charSequenceList39);
        java.lang.CharSequence charSequence44 = charSequenceList32.element();
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceList47.spliterator();
        boolean boolean50 = charSequenceList47.isEmpty();
        charSequenceList47.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str53 = charSequenceList47.toString();
        boolean boolean54 = charSequenceList32.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47);
        boolean boolean56 = charSequenceList47.offer((java.lang.CharSequence) "");
        charSequenceList47.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList47.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        java.lang.Object[] objArray63 = charSequenceList47.toArray();
        int int64 = charSequenceList2.lastIndexOf((java.lang.Object) objArray63);
        java.lang.CharSequence[] charSequenceArray67 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList68 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList68, charSequenceArray67);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList71 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean72 = charSequenceList68.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList71);
        java.lang.CharSequence charSequence73 = charSequenceList68.peek();
        boolean boolean75 = charSequenceList68.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator76 = charSequenceList68.spliterator();
        boolean boolean78 = charSequenceList68.offer((java.lang.CharSequence) "hi!");
        charSequenceList68.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray83 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList84 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList84, charSequenceArray83);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator86 = charSequenceList84.spliterator();
        boolean boolean87 = charSequenceList84.isEmpty();
        boolean boolean88 = charSequenceList68.equals((java.lang.Object) charSequenceList84);
        java.lang.CharSequence charSequence90 = charSequenceList68.remove((int) (short) 0);
        java.lang.CharSequence charSequence91 = charSequenceList68.getLast();
        charSequenceList68.addLast((java.lang.CharSequence) "[hi!, [[hi!, ]]]");
        boolean boolean94 = charSequenceList2.addAll(1, (java.util.Collection<java.lang.CharSequence>) charSequenceList68);
        java.lang.CharSequence charSequence95 = charSequenceList68.poll();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "hi!" + "'", charSequence44, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[hi!, ]" + "'", str53, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[hi!, hi!, hi!, , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[hi!, hi!, hi!, , ]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + charSequence73 + "' != '" + "hi!" + "'", charSequence73, "hi!");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(charSequenceArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertEquals("'" + charSequence90 + "' != '" + "hi!" + "'", charSequence90, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence91 + "' != '" + "hi!" + "'", charSequence91, "hi!");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertEquals("'" + charSequence95 + "' != '" + "hi!" + "'", charSequence95, "hi!");
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        int int15 = charSequenceList2.size();
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = charSequenceList18.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        java.lang.Object obj23 = charSequenceList21.clone();
        charSequenceList21.addLast((java.lang.CharSequence) "[hi!, ]");
        boolean boolean27 = charSequenceList21.offerLast((java.lang.CharSequence) "[hi!, ]");
        boolean boolean28 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList21);
        java.lang.CharSequence charSequence29 = charSequenceList2.getFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator29 = charSequenceList27.spliterator();
        java.lang.CharSequence charSequence30 = charSequenceList27.getLast();
        java.lang.CharSequence charSequence31 = charSequenceList27.removeLast();
        boolean boolean32 = charSequenceList17.remove((java.lang.Object) charSequenceList27);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence33 = charSequenceList27.getLast();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator29);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "" + "'", charSequence30, "");
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "" + "'", charSequence31, "");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        java.lang.CharSequence charSequence10 = charSequenceList2.peek();
        java.lang.CharSequence charSequence11 = charSequenceList2.remove();
        boolean boolean13 = charSequenceList2.add((java.lang.CharSequence) "[hi!]");
        charSequenceList2.addFirst((java.lang.CharSequence) "[hi!, hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "hi!" + "'", charSequence11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceList2.stream();
        java.lang.CharSequence charSequence15 = charSequenceList2.pop();
        charSequenceList2.addFirst((java.lang.CharSequence) "[hi!, ]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "hi!" + "'", charSequence15, "hi!");
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        boolean boolean9 = charSequenceList2.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = charSequenceList12.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean17 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        java.lang.Object obj25 = null;
        boolean boolean26 = charSequenceList20.equals(obj25);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        boolean boolean32 = charSequenceList20.removeLastOccurrence((java.lang.Object) charSequenceList29);
        boolean boolean33 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence charSequence34 = charSequenceList2.poll();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence35 = charSequenceList2.element();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(charSequence34);
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence charSequence9 = charSequenceList2.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream10 = charSequenceList2.parallelStream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream10);
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.peek();
        java.lang.CharSequence charSequence8 = charSequenceList2.pollFirst();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.Object obj11 = charSequenceList2.clone();
        java.lang.CharSequence charSequence12 = charSequenceList2.pollFirst();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList15 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList18 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean19 = charSequenceList15.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList18);
        java.lang.Object obj20 = null;
        boolean boolean21 = charSequenceList15.equals(obj20);
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = charSequenceList24.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        java.lang.CharSequence charSequence29 = charSequenceList24.peek();
        java.lang.CharSequence charSequence30 = charSequenceList24.pollFirst();
        boolean boolean31 = charSequenceList15.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = charSequenceList34.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        java.lang.CharSequence charSequence39 = charSequenceList34.peek();
        int int40 = charSequenceList15.indexOf((java.lang.Object) charSequence39);
        int int41 = charSequenceList15.size();
        java.lang.CharSequence charSequence42 = charSequenceList15.pop();
        charSequenceList15.push((java.lang.CharSequence) "[hi!]");
        charSequenceList15.addFirst((java.lang.CharSequence) "[hi!]");
        java.lang.CharSequence charSequence47 = charSequenceList15.pollFirst();
        boolean boolean48 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList15);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "hi!" + "'", charSequence8, "hi!");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "hi!" + "'", charSequence12, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "hi!" + "'", charSequence30, "hi!");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "hi!" + "'", charSequence39, "hi!");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "[hi!]" + "'", charSequence47, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence charSequence9 = charSequenceList2.removeFirst();
        boolean boolean11 = charSequenceList2.removeLastOccurrence((java.lang.Object) (short) 100);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceList14.spliterator();
        int int17 = charSequenceList14.size();
        java.lang.CharSequence charSequence18 = charSequenceList14.remove();
        boolean boolean19 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList22 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean26 = charSequenceList22.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        int int32 = charSequenceList29.size();
        boolean boolean33 = charSequenceList22.contains((java.lang.Object) charSequenceList29);
        java.lang.CharSequence charSequence34 = charSequenceList22.element();
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator39 = charSequenceList37.spliterator();
        boolean boolean40 = charSequenceList37.isEmpty();
        charSequenceList37.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str43 = charSequenceList37.toString();
        boolean boolean44 = charSequenceList22.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        boolean boolean46 = charSequenceList37.offer((java.lang.CharSequence) "");
        charSequenceList37.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList37.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence53 = charSequenceList37.getLast();
        boolean boolean54 = charSequenceList14.contains((java.lang.Object) charSequenceList37);
        charSequenceList37.clear();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "" + "'", charSequence18, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "hi!" + "'", charSequence34, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[hi!, ]" + "'", str43, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor25 = charSequenceList2.descendingIterator();
        boolean boolean26 = charSequenceList2.isEmpty();
        java.util.function.UnaryOperator<java.lang.CharSequence> charSequenceUnaryOperator27 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceList2.replaceAll(charSequenceUnaryOperator27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceItor25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList2.removeLastOccurrence(obj9);
        boolean boolean12 = charSequenceList2.remove((java.lang.Object) (short) 10);
        java.lang.CharSequence charSequence13 = charSequenceList2.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceList2.stream();
        java.lang.Object obj15 = charSequenceList2.clone();
        charSequenceList2.addFirst((java.lang.CharSequence) "[]");
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList20 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList23 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean24 = charSequenceList20.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator29 = charSequenceList27.spliterator();
        int int30 = charSequenceList27.size();
        boolean boolean31 = charSequenceList20.contains((java.lang.Object) charSequenceList27);
        boolean boolean32 = charSequenceList20.isEmpty();
        java.lang.CharSequence charSequence33 = charSequenceList20.remove();
        boolean boolean34 = charSequenceList2.contains((java.lang.Object) charSequence33);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[]");
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "hi!" + "'", charSequence33, "hi!");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = charSequenceList11.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.CharSequence charSequence16 = charSequenceList11.peek();
        java.lang.CharSequence charSequence17 = charSequenceList11.pollFirst();
        boolean boolean18 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        int int27 = charSequenceList2.indexOf((java.lang.Object) charSequence26);
        int int28 = charSequenceList2.size();
        java.lang.CharSequence charSequence29 = charSequenceList2.pop();
        charSequenceList2.push((java.lang.CharSequence) "[hi!]");
        java.lang.CharSequence charSequence32 = charSequenceList2.pollFirst();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceList2.spliterator();
        boolean boolean35 = charSequenceList2.add((java.lang.CharSequence) "[[hi!, ]]");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor36 = charSequenceList2.descendingIterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "hi!" + "'", charSequence16, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "[hi!]" + "'", charSequence32, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceItor36);
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean26 = charSequenceList17.offer((java.lang.CharSequence) "");
        charSequenceList17.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList17.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceList17.spliterator();
        int int34 = charSequenceList17.size();
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        java.lang.CharSequence[] charSequenceArray43 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList44 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList44, charSequenceArray43);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator46 = charSequenceList44.spliterator();
        int int47 = charSequenceList44.size();
        boolean boolean48 = charSequenceList37.contains((java.lang.Object) charSequenceList44);
        java.lang.CharSequence charSequence49 = charSequenceList37.element();
        java.lang.CharSequence[] charSequenceArray51 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList52 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52, charSequenceArray51);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator54 = charSequenceList52.spliterator();
        boolean boolean55 = charSequenceList52.isEmpty();
        charSequenceList52.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str58 = charSequenceList52.toString();
        boolean boolean59 = charSequenceList37.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        boolean boolean61 = charSequenceList52.offer((java.lang.CharSequence) "");
        charSequenceList52.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList52.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator68 = charSequenceList52.spliterator();
        int int69 = charSequenceList52.size();
        boolean boolean70 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 5 + "'", int34 == 5);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "hi!" + "'", charSequence49, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[hi!, ]" + "'", str58, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 5 + "'", int69 == 5);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList2.equals(obj7);
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence charSequence15 = charSequenceList11.removeLast();
        java.util.List<java.lang.CharSequence> charSequenceList18 = charSequenceList11.subList(0, (int) (short) 0);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceList28.spliterator();
        int int31 = charSequenceList28.size();
        boolean boolean32 = charSequenceList21.contains((java.lang.Object) charSequenceList28);
        java.lang.CharSequence charSequence33 = charSequenceList28.removeFirst();
        java.lang.CharSequence charSequence34 = charSequenceList28.pollLast();
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList37 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList40 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean41 = charSequenceList37.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        java.lang.CharSequence charSequence42 = charSequenceList37.peek();
        boolean boolean44 = charSequenceList37.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList47 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList50 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean51 = charSequenceList47.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList50);
        boolean boolean52 = charSequenceList37.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50);
        boolean boolean53 = charSequenceList28.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50);
        boolean boolean54 = charSequenceList11.contains((java.lang.Object) boolean53);
        java.lang.CharSequence charSequence55 = charSequenceList11.pollFirst();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence56 = charSequenceList11.removeFirst();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "" + "'", charSequence15, "");
        org.junit.Assert.assertNotNull(charSequenceList18);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "" + "'", charSequence33, "");
        org.junit.Assert.assertNull(charSequence34);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(charSequence55);
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        boolean boolean5 = charSequenceList2.isEmpty();
        charSequenceList2.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str8 = charSequenceList2.toString();
        java.lang.CharSequence charSequence9 = charSequenceList2.removeFirst();
        boolean boolean11 = charSequenceList2.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList14 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = charSequenceList14.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceList21.spliterator();
        int int24 = charSequenceList21.size();
        boolean boolean25 = charSequenceList14.contains((java.lang.Object) charSequenceList21);
        java.lang.CharSequence charSequence26 = charSequenceList14.element();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList29 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceList29.spliterator();
        boolean boolean32 = charSequenceList29.isEmpty();
        charSequenceList29.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str35 = charSequenceList29.toString();
        boolean boolean36 = charSequenceList14.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        boolean boolean38 = charSequenceList29.offer((java.lang.CharSequence) "");
        charSequenceList29.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        charSequenceList29.add((int) (short) 1, (java.lang.CharSequence) "hi!");
        charSequenceList29.addLast((java.lang.CharSequence) "hi!");
        boolean boolean47 = charSequenceList2.removeFirstOccurrence((java.lang.Object) "hi!");
        int int48 = charSequenceList2.size();
        charSequenceList2.addLast((java.lang.CharSequence) "[hi!, ]");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream51 = charSequenceList2.parallelStream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!, ]" + "'", str8, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "hi!" + "'", charSequence9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[hi!, ]" + "'", str35, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(charSequenceStream51);
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceList17.stream();
        boolean boolean27 = charSequenceList17.offerFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence28 = charSequenceList17.poll();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean32 = charSequenceList17.offerLast((java.lang.CharSequence) "[[hi!, ]]");
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceList35.spliterator();
        int int38 = charSequenceList35.size();
        java.lang.CharSequence[] charSequenceArray40 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList41 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList41, charSequenceArray40);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator43 = charSequenceList41.spliterator();
        int int44 = charSequenceList41.size();
        boolean boolean45 = charSequenceList35.contains((java.lang.Object) charSequenceList41);
        java.lang.CharSequence charSequence46 = charSequenceList41.removeLast();
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList49 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator51 = charSequenceList49.spliterator();
        boolean boolean52 = charSequenceList49.isEmpty();
        charSequenceList49.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str55 = charSequenceList49.toString();
        java.lang.CharSequence charSequence56 = charSequenceList49.removeFirst();
        boolean boolean58 = charSequenceList49.offer((java.lang.CharSequence) "hi!");
        boolean boolean59 = charSequenceList41.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49);
        boolean boolean60 = charSequenceList17.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceStream25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "[hi!, ]" + "'", charSequence28, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + charSequence46 + "' != '" + "" + "'", charSequence46, "");
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[hi!, ]" + "'", str55, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence56 + "' != '" + "hi!" + "'", charSequence56, "hi!");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList2.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList17 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList17.spliterator();
        boolean boolean20 = charSequenceList17.isEmpty();
        charSequenceList17.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str23 = charSequenceList17.toString();
        boolean boolean24 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor25 = charSequenceList2.descendingIterator();
        java.lang.CharSequence charSequence26 = charSequenceList2.peekFirst();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = charSequenceList30.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList33);
        java.lang.CharSequence charSequence35 = charSequenceList30.peek();
        boolean boolean37 = charSequenceList30.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceList30.spliterator();
        boolean boolean40 = charSequenceList30.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence41 = charSequenceList30.element();
        java.lang.CharSequence charSequence42 = charSequenceList30.peekLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor43 = charSequenceList30.listIterator();
        charSequenceList30.addFirst((java.lang.CharSequence) "[hi!]");
        boolean boolean46 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        java.lang.CharSequence charSequence47 = charSequenceList2.poll();
        charSequenceList2.addFirst((java.lang.CharSequence) "");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!, ]" + "'", str23, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceItor25);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "hi!" + "'", charSequence35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertNotNull(charSequenceItor43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "[hi!]" + "'", charSequence47, "[hi!]");
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        int int5 = charSequenceList2.size();
        java.lang.CharSequence charSequence6 = charSequenceList2.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceList2.parallelStream();
        java.lang.CharSequence charSequence8 = null;
        charSequenceList2.addLast(charSequence8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceList2.spliterator();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList13 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = charSequenceList13.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.CharSequence charSequence18 = charSequenceList13.peek();
        boolean boolean20 = charSequenceList13.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator21 = charSequenceList13.spliterator();
        boolean boolean23 = charSequenceList13.offer((java.lang.CharSequence) "hi!");
        boolean boolean24 = charSequenceList2.remove((java.lang.Object) "hi!");
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList30 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean31 = charSequenceList27.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList34 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceList34.spliterator();
        int int37 = charSequenceList34.size();
        boolean boolean38 = charSequenceList27.contains((java.lang.Object) charSequenceList34);
        java.lang.CharSequence charSequence39 = charSequenceList27.element();
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42, charSequenceArray41);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator44 = charSequenceList42.spliterator();
        boolean boolean45 = charSequenceList42.isEmpty();
        charSequenceList42.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str48 = charSequenceList42.toString();
        boolean boolean49 = charSequenceList27.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        boolean boolean51 = charSequenceList42.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence52 = charSequenceList42.getLast();
        boolean boolean54 = charSequenceList42.removeLastOccurrence((java.lang.Object) 100.0d);
        java.lang.CharSequence charSequence55 = charSequenceList42.getFirst();
        charSequenceList42.clear();
        boolean boolean57 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList42);
        java.lang.CharSequence charSequence58 = charSequenceList42.poll();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "hi!" + "'", charSequence18, "hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "hi!" + "'", charSequence39, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[hi!, ]" + "'", str48, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "" + "'", charSequence52, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + charSequence55 + "' != '" + "hi!" + "'", charSequence55, "hi!");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(charSequence58);
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        java.util.LinkedList<java.lang.Comparable<java.lang.String>> strComparableList5 = new java.util.LinkedList<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = charSequenceList2.contains((java.lang.Object) strComparableList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = charSequenceList9.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator18 = charSequenceList16.spliterator();
        int int19 = charSequenceList16.size();
        boolean boolean20 = charSequenceList9.contains((java.lang.Object) charSequenceList16);
        java.lang.CharSequence charSequence21 = charSequenceList9.element();
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = charSequenceList24.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceList31.spliterator();
        int int34 = charSequenceList31.size();
        boolean boolean35 = charSequenceList24.contains((java.lang.Object) charSequenceList31);
        java.lang.CharSequence charSequence36 = charSequenceList24.element();
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceList39.spliterator();
        boolean boolean42 = charSequenceList39.isEmpty();
        charSequenceList39.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str45 = charSequenceList39.toString();
        boolean boolean46 = charSequenceList24.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean48 = charSequenceList39.offer((java.lang.CharSequence) "");
        charSequenceList39.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean53 = charSequenceList39.add((java.lang.CharSequence) "");
        int int54 = charSequenceList9.lastIndexOf((java.lang.Object) boolean53);
        boolean boolean55 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        boolean boolean57 = charSequenceList9.offerLast((java.lang.CharSequence) "[hi!, [[hi!, ]]]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "hi!" + "'", charSequence21, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "hi!" + "'", charSequence36, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[hi!, ]" + "'", str45, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceList9.spliterator();
        int int12 = charSequenceList9.size();
        boolean boolean13 = charSequenceList2.contains((java.lang.Object) charSequenceList9);
        java.lang.CharSequence charSequence14 = charSequenceList9.removeFirst();
        java.lang.CharSequence charSequence15 = charSequenceList9.pollLast();
        charSequenceList9.clear();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator21 = charSequenceList19.spliterator();
        java.lang.Object obj22 = charSequenceList19.clone();
        boolean boolean23 = charSequenceList9.remove(obj22);
        java.lang.Object[] objArray24 = charSequenceList9.toArray();
        charSequenceList9.clear();
        java.lang.CharSequence charSequence26 = charSequenceList9.poll();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNull(charSequence15);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNull(charSequence26);
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        java.lang.CharSequence charSequence7 = charSequenceList2.element();
        int int8 = charSequenceList2.size();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList11 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceList11.spliterator();
        boolean boolean14 = charSequenceList11.isEmpty();
        charSequenceList11.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean18 = charSequenceList11.offerLast((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList21 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = charSequenceList21.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.lang.CharSequence charSequence26 = charSequenceList21.peek();
        java.lang.CharSequence charSequence27 = charSequenceList21.pollFirst();
        boolean boolean28 = charSequenceList11.contains((java.lang.Object) charSequence27);
        java.lang.CharSequence charSequence29 = charSequenceList11.peekFirst();
        boolean boolean30 = charSequenceList2.removeLastOccurrence((java.lang.Object) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList33 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList33, charSequenceArray32);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator35 = charSequenceList33.spliterator();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor36 = charSequenceList33.descendingIterator();
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList42 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean43 = charSequenceList39.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        java.lang.CharSequence charSequence44 = charSequenceList39.peek();
        boolean boolean46 = charSequenceList39.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence charSequence47 = charSequenceList39.poll();
        java.util.LinkedList<java.lang.CharSequence> charSequenceList48 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence[] charSequenceArray50 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList51 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList51, charSequenceArray50);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator53 = charSequenceList51.spliterator();
        int int54 = charSequenceList51.size();
        java.lang.CharSequence charSequence55 = charSequenceList51.remove();
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList58 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58, charSequenceArray57);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator60 = charSequenceList58.spliterator();
        boolean boolean61 = charSequenceList58.isEmpty();
        charSequenceList58.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean65 = charSequenceList58.offerLast((java.lang.CharSequence) "");
        charSequenceList58.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence68 = charSequenceList58.removeLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor69 = charSequenceList58.listIterator();
        boolean boolean70 = charSequenceList51.removeLastOccurrence((java.lang.Object) charSequenceList58);
        boolean boolean71 = charSequenceList58.isEmpty();
        java.lang.CharSequence[] charSequenceArray73 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList74 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList74, charSequenceArray73);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator76 = charSequenceList74.spliterator();
        boolean boolean77 = charSequenceList74.isEmpty();
        charSequenceList74.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str80 = charSequenceList74.toString();
        java.lang.CharSequence charSequence81 = charSequenceList74.removeFirst();
        boolean boolean83 = charSequenceList74.removeLastOccurrence((java.lang.Object) (short) 100);
        boolean boolean84 = charSequenceList58.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList74);
        boolean boolean85 = charSequenceList39.remove((java.lang.Object) charSequenceList74);
        int int86 = charSequenceList33.indexOf((java.lang.Object) charSequenceList74);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor87 = charSequenceList74.iterator();
        int int88 = charSequenceList2.lastIndexOf((java.lang.Object) charSequenceList74);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.CharSequence> charSequenceItor90 = charSequenceList2.listIterator((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "hi!" + "'", charSequence26, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator35);
        org.junit.Assert.assertNotNull(charSequenceItor36);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "hi!" + "'", charSequence44, "hi!");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "hi!" + "'", charSequence47, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertEquals("'" + charSequence55 + "' != '" + "" + "'", charSequence55, "");
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + charSequence68 + "' != '" + "" + "'", charSequence68, "");
        org.junit.Assert.assertNotNull(charSequenceItor69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(charSequenceArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[hi!, ]" + "'", str80, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence81 + "' != '" + "hi!" + "'", charSequence81, "hi!");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(charSequenceItor87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceList2.spliterator();
        java.util.LinkedList<java.lang.Comparable<java.lang.String>> strComparableList5 = new java.util.LinkedList<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = charSequenceList2.contains((java.lang.Object) strComparableList5);
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList9 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList12 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean13 = charSequenceList9.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator18 = charSequenceList16.spliterator();
        int int19 = charSequenceList16.size();
        boolean boolean20 = charSequenceList9.contains((java.lang.Object) charSequenceList16);
        java.lang.CharSequence charSequence21 = charSequenceList9.element();
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList24 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList27 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean28 = charSequenceList24.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList31 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceList31.spliterator();
        int int34 = charSequenceList31.size();
        boolean boolean35 = charSequenceList24.contains((java.lang.Object) charSequenceList31);
        java.lang.CharSequence charSequence36 = charSequenceList24.element();
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList39 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceList39.spliterator();
        boolean boolean42 = charSequenceList39.isEmpty();
        charSequenceList39.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str45 = charSequenceList39.toString();
        boolean boolean46 = charSequenceList24.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean48 = charSequenceList39.offer((java.lang.CharSequence) "");
        charSequenceList39.add((int) (short) 0, (java.lang.CharSequence) "hi!");
        boolean boolean53 = charSequenceList39.add((java.lang.CharSequence) "");
        int int54 = charSequenceList9.lastIndexOf((java.lang.Object) boolean53);
        boolean boolean55 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList58 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58, charSequenceArray57);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList61 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean62 = charSequenceList58.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList61);
        java.lang.CharSequence charSequence63 = charSequenceList58.peek();
        java.lang.CharSequence charSequence64 = charSequenceList58.pollFirst();
        charSequenceList58.addFirst((java.lang.CharSequence) "hi!");
        int int67 = charSequenceList9.indexOf((java.lang.Object) charSequenceList58);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream68 = charSequenceList58.parallelStream();
        java.lang.CharSequence charSequence69 = charSequenceList58.getFirst();
        java.lang.CharSequence charSequence70 = charSequenceList58.pollFirst();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "hi!" + "'", charSequence21, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "hi!" + "'", charSequence36, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[hi!, ]" + "'", str45, "[hi!, ]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + charSequence63 + "' != '" + "hi!" + "'", charSequence63, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence64 + "' != '" + "hi!" + "'", charSequence64, "hi!");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(charSequenceStream68);
        org.junit.Assert.assertEquals("'" + charSequence69 + "' != '" + "hi!" + "'", charSequence69, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence70 + "' != '" + "hi!" + "'", charSequence70, "hi!");
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList2 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList5 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean6 = charSequenceList2.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList5);
        charSequenceList5.clear();
        java.lang.CharSequence[] charSequenceArray9 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList10 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList10, charSequenceArray9);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator12 = charSequenceList10.spliterator();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor13 = charSequenceList10.descendingIterator();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList16 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.util.LinkedList<java.lang.CharSequence> charSequenceList19 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean20 = charSequenceList16.addAll(0, (java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence charSequence21 = charSequenceList16.peek();
        boolean boolean23 = charSequenceList16.removeFirstOccurrence((java.lang.Object) (byte) 100);
        java.lang.CharSequence charSequence24 = charSequenceList16.poll();
        java.util.LinkedList<java.lang.CharSequence> charSequenceList25 = new java.util.LinkedList<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList28 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceList28.spliterator();
        int int31 = charSequenceList28.size();
        java.lang.CharSequence charSequence32 = charSequenceList28.remove();
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList35 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceList35.spliterator();
        boolean boolean38 = charSequenceList35.isEmpty();
        charSequenceList35.addFirst((java.lang.CharSequence) "hi!");
        boolean boolean42 = charSequenceList35.offerLast((java.lang.CharSequence) "");
        charSequenceList35.addFirst((java.lang.CharSequence) "[hi!, ]");
        java.lang.CharSequence charSequence45 = charSequenceList35.removeLast();
        java.util.ListIterator<java.lang.CharSequence> charSequenceItor46 = charSequenceList35.listIterator();
        boolean boolean47 = charSequenceList28.removeLastOccurrence((java.lang.Object) charSequenceList35);
        boolean boolean48 = charSequenceList35.isEmpty();
        java.lang.CharSequence[] charSequenceArray50 = new java.lang.CharSequence[] { "" };
        java.util.LinkedList<java.lang.CharSequence> charSequenceList51 = new java.util.LinkedList<java.lang.CharSequence>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList51, charSequenceArray50);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator53 = charSequenceList51.spliterator();
        boolean boolean54 = charSequenceList51.isEmpty();
        charSequenceList51.addFirst((java.lang.CharSequence) "hi!");
        java.lang.String str57 = charSequenceList51.toString();
        java.lang.CharSequence charSequence58 = charSequenceList51.removeFirst();
        boolean boolean60 = charSequenceList51.removeLastOccurrence((java.lang.Object) (short) 100);
        boolean boolean61 = charSequenceList35.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList51);
        boolean boolean62 = charSequenceList16.remove((java.lang.Object) charSequenceList51);
        int int63 = charSequenceList10.indexOf((java.lang.Object) charSequenceList51);
        boolean boolean64 = charSequenceList5.removeFirstOccurrence((java.lang.Object) charSequenceList51);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator12);
        org.junit.Assert.assertNotNull(charSequenceItor13);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "hi!" + "'", charSequence21, "hi!");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "hi!" + "'", charSequence24, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "" + "'", charSequence32, "");
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + charSequence45 + "' != '" + "" + "'", charSequence45, "");
        org.junit.Assert.assertNotNull(charSequenceItor46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(charSequenceArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[hi!, ]" + "'", str57, "[hi!, ]");
        org.junit.Assert.assertEquals("'" + charSequence58 + "' != '" + "hi!" + "'", charSequence58, "hi!");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }
}

